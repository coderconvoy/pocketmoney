// Code generated by go-bindata.
// sources:
// assets/s/main.css
// assets/templates/.familypage.html.swp
// assets/templates/.forms.html.swp
// assets/templates/familypage.html
// assets/templates/forms.html
// assets/templates/index.html
// assets/templates/layout.html
// assets/templates/newaccount.html
// assets/templates/newuser.html
// assets/templates/transactions.html
// assets/templates/userhome.html
// assets/templates/view.html
// assets/templates/viewac.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsSMainCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8b\xb1\xae\xc2\x30\x0c\x45\xf7\x7c\x85\xa5\xb7\x3e\xb1\xa0\x0c\x4d\xbf\x26\xc6\x75\x14\xd1\xd8\x91\x49\x24\x10\xe2\xdf\x29\xa1\x2c\x70\xc7\x7b\xce\x41\xa5\xdb\xdd\xc1\x36\x8c\xa7\x73\x32\xed\x42\xe1\x6f\x9a\x98\x11\x67\xf7\x70\xee\x50\x16\xe9\xf0\xab\x78\xcf\x1c\xe3\x50\x58\xad\x7c\x0c\x35\x5a\x2c\xf8\x7a\x85\x8b\xae\x99\x00\xd7\xad\x99\x07\x2b\xd1\x52\x96\x17\x1b\x55\x96\xda\x1b\xfc\x03\xf6\xd6\x54\xf6\xfe\xcb\x69\xb4\xff\x35\x12\x65\x49\xe1\xf8\x06\xcf\x00\x00\x00\xff\xff\x54\x41\xbd\xbe\xb6\x00\x00\x00")

func assetsSMainCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsSMainCss,
		"assets/s/main.css",
	)
}

func assetsSMainCss() (*asset, error) {
	bytes, err := assetsSMainCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/s/main.css", size: 182, mode: os.FileMode(420), modTime: time.Unix(1489057121, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesFamilypageHtmlSwp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9a\x3b\x6b\xdc\x4a\x14\xc7\xc7\x2e\x6e\x75\xed\x7b\xb9\x17\x2e\xdc\x6e\x32\x6e\x6c\xf0\x4a\xde\x75\x4c\x12\xb3\x5e\x08\x06\x1b\x17\x6b\x0c\xc1\x21\xed\x48\x3a\xbb\x12\xd6\x68\x14\xcd\x28\xf6\x22\x36\xe9\x42\x9a\x90\x3e\x5f\x23\xa4\x75\x9b\xcf\x90\x36\x90\x2e\x65\x48\x9d\xa3\xc7\x3e\xbc\x29\xb6\x09\x09\x21\xe7\x07\x7f\xe6\x79\x1e\x73\x46\x5b\x2c\x92\xb7\xf3\xf0\xa4\xcf\xef\x38\xb7\x19\xf2\x37\x63\xe9\xfb\xeb\x47\xc7\x7f\x6c\xaf\x3e\x5f\x63\x4c\x49\x6b\x43\xb8\x64\xcb\x38\x86\xcc\x8e\x3a\x4b\xb7\xb1\xa7\x8d\x43\xd7\xf8\x59\x94\x5a\xe3\x0e\x75\x2c\x93\xa1\x6b\x32\xdf\x1d\x46\x36\xcc\x3d\xc7\xd7\xca\xf5\x75\x00\x99\xaf\x93\x27\x7a\xe4\xa6\xda\xbf\x00\xab\x74\x02\x23\x57\x1a\x03\x68\x64\x41\xa5\xb1\xb4\x60\xdc\x81\x54\x51\x3c\x4a\xe5\x10\x9c\xd0\xaa\x78\x79\x02\x04\xf1\xbb\x92\xdb\x41\xeb\xee\x1a\xdb\xed\xb4\x77\xca\xe1\x86\xb8\xc5\xff\xfd\xe7\xfc\x67\x67\x45\x10\x04\x41\x10\x04\x41\x10\xc4\x0f\xc4\xa6\x2b\xec\x19\xb6\xab\xcd\xf8\xff\xa6\x5d\x59\x68\x09\x82\x20\x08\x82\x20\x08\x82\x20\x08\x82\xf8\x75\x91\x01\x63\xde\x9f\x8c\x7d\x40\x95\xef\xff\x27\xff\xff\x3f\xfd\xc5\xd8\x35\xea\x2d\xea\x35\xea\x25\xea\x18\x75\x0f\xd5\x42\x6d\xa0\xfe\x43\x7d\x5e\x67\xec\x1d\xea\x0d\xea\x05\xea\x0a\x75\x8e\x12\xa8\x8f\x6b\x8c\xbd\x42\x69\xd4\x36\x6a\x1d\xb5\x8a\xfa\xd2\xc4\xab\x62\x12\x04\x41\x10\x04\x41\x10\x04\x41\x7c\x17\x8a\xc2\x42\xa9\xfa\x8b\x61\x2e\x3c\x69\x40\x8c\xc7\x8c\x23\x45\x01\x49\xd0\xf4\xbb\xee\x40\x67\xaa\x57\xf5\xab\x71\x94\xa4\xb9\xe5\x76\x94\xc2\x81\x30\xb9\xa7\x22\x2b\x66\xab\x87\x3a\x19\x44\x99\xe2\x67\xd2\x98\x4b\x9d\x05\x7c\xff\xa6\x41\xda\xcc\x0b\x9e\x48\x55\x8e\x2f\x83\x8e\xe8\x75\xbd\x6c\xe6\x62\xb3\x1f\x25\x91\xca\x15\xdf\xe3\x31\x58\x0b\x99\xd9\xba\xb1\xbe\xdc\x75\x2a\x4b\xb3\xe4\x40\x38\xc5\xde\x76\x67\x67\x2c\x78\x06\x8f\xf3\x28\x83\x60\x16\xb5\xbd\x10\xf5\xc4\xa0\xe3\x0c\x12\xbb\xe0\xd5\x0f\xc1\xbf\xf0\xf4\xd5\x34\xe1\x6a\xd3\x82\xf1\x29\x2e\x2d\xa6\x63\xe1\xca\x4e\x8c\x72\x83\xe9\x60\x6f\xae\x50\xdd\xb0\xd3\xbb\x1f\x04\xfc\xa8\xfa\x50\x9b\xf7\x41\x79\x90\x75\x5d\x9c\x9d\x6e\x99\xbf\x85\xda\x64\x97\xfb\x31\x9e\xf2\x40\x28\x30\x46\x0e\xd1\x5f\x51\x38\x7d\x30\x7c\x3c\x46\xd3\xdd\x79\xd3\x68\xc0\xcb\x95\xc9\x25\x96\x77\xc8\xa5\x6f\x23\x8d\x65\x91\x41\xa0\xaa\x78\x82\x2b\xb0\xa1\x0e\xf0\x58\xda\xe0\xa1\x38\x9b\x1a\x6f\x3a\x98\x99\x73\x62\xea\xa2\x70\xe7\x08\x2d\xf8\xd6\xc4\x1d\x1e\x7e\x5a\x80\xae\x9b\xc7\xbd\x6f\x1e\x9b\x7a\x25\x8e\x66\x39\xd5\x3b\x9c\xf3\xa6\x16\xe3\x31\x6f\xb5\x70\xc2\x7b\x00\x31\xf8\x18\xa1\x89\x24\xea\x56\x70\x71\x18\x46\x71\x80\x8f\xe4\x8d\x52\x77\x27\x2e\x8b\x22\x93\xc9\x10\x78\x95\x67\x5d\xbe\xe9\x69\x27\x09\x75\xc3\x76\xaf\x29\xf0\x19\x96\x6b\xbf\x8c\x5f\x6e\xaf\xe7\x4e\xab\x2c\xb0\x70\xed\x1e\x9b\xff\x25\x84\x20\xcb\xb0\xec\x6b\x00\x00\x00\xff\xff\x72\xb5\x0d\x38\x00\x30\x00\x00")

func assetsTemplatesFamilypageHtmlSwpBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesFamilypageHtmlSwp,
		"assets/templates/.familypage.html.swp",
	)
}

func assetsTemplatesFamilypageHtmlSwp() (*asset, error) {
	bytes, err := assetsTemplatesFamilypageHtmlSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/.familypage.html.swp", size: 12288, mode: os.FileMode(420), modTime: time.Unix(1489399587, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesFormsHtmlSwp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9a\xbd\x6f\x1c\x45\x18\xc6\xc7\x41\x96\xf9\x88\x21\x22\x20\xd1\x20\x0d\x8b\x0b\x22\x99\xbb\xb3\x13\x29\xc8\xba\x3b\x64\x39\x38\x42\xc2\x8e\x21\x09\x49\x67\xc6\x3b\x73\xde\x95\x77\x76\x96\xd9\x59\x9b\xd3\xea\xa0\x41\x48\x14\x50\xd0\x22\x2a\x94\x02\x51\xd0\x20\xfe\x80\x14\x21\x42\x7c\x95\x14\x74\x7c\x88\x0a\xd1\xd0\x20\x0a\x9e\xfd\xb8\xf5\xdd\xd9\xbe\x0b\x42\x60\x01\xf3\x48\xbf\xdc\xcd\xee\xfb\xbe\x3b\xef\xc7\xac\x14\xf9\xb6\x1a\x2f\x3e\xbb\x46\xcf\xd7\xce\x11\xe8\x14\x21\x53\xea\xd6\xf5\xe7\xa7\xe7\x4f\xbc\x31\x4b\x88\x64\xc6\x78\x62\x8f\x4c\xd2\x45\xa1\x4d\x77\x71\xa2\x19\x79\xb5\x0c\x58\x8f\x5d\xed\x47\x26\xae\x6f\xab\x80\x85\xdb\xf5\x58\xbb\xf5\x6d\xdf\x78\xc9\x56\xcd\x55\xb2\xee\x2a\x2e\xb4\xab\xc2\x5d\xd5\xad\x47\xca\xdd\x11\x46\xaa\x50\x74\xeb\x2c\x8e\x05\x9c\x8c\x90\x51\xc0\x8c\x88\xeb\x1d\xa5\x65\x5c\xf3\x8c\x0c\x26\x3f\xdb\xca\xea\x7f\xad\xc4\x74\x9e\x7c\x6a\x96\x9c\x5d\x5c\x68\x64\xcb\xc7\x9d\xc7\xe8\xe9\x07\xaf\x1e\xf7\xae\xac\xac\xac\xac\xac\xac\xac\xac\xac\xac\xac\xfe\x41\x99\x68\x8a\xbc\x86\xcf\x13\xe5\x7a\xb9\xfc\x9c\x1a\xf9\xb4\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xfa\xf7\x8a\x71\x42\x7e\x99\x26\xe4\xd4\x0c\xc9\xff\xfe\xdf\xff\xff\xff\x77\x0f\x10\xf2\x09\x78\x0f\x5c\x06\xb3\xe0\xdb\xfb\x09\xf9\x1a\xdc\x06\x9f\x82\x0f\xc1\x3b\xe0\x3a\xf8\x69\x96\x90\x6f\xc0\x67\xe0\x26\xb8\x01\xde\x06\x02\x9c\x04\xbf\x9f\x24\xe4\x67\xf0\x23\xf8\x01\x7c\x0f\xbe\x02\x1f\x80\x37\x41\x0b\x9c\xce\xee\xdf\x47\xc8\xbb\xa0\x03\xce\x80\x47\xc1\xc3\xe0\x21\xf0\xdb\xbd\x84\x7c\x0e\x6e\x80\x14\xac\x83\xbb\xc0\x97\xf7\x10\xf2\x05\x78\x1d\x3c\x0d\x28\xf8\xf5\x6e\x42\x6e\x81\x8f\xc1\x47\xc0\x00\x0f\xbc\x04\x36\xc1\x45\xe0\x80\x69\x70\x1b\xb9\xbf\x05\xae\x01\x0a\x1e\x99\x29\xea\x31\x33\x73\x9c\x9d\xb1\xb2\xb2\xb2\xb2\xfa\x1b\x95\xa6\x22\xe4\xbd\x1e\x69\x66\x3f\x26\x4b\xb1\x1a\xba\x20\xdb\x84\x42\x4d\x3f\x8c\x12\x43\x4d\x37\x12\x2d\x27\x4e\xb6\xa4\x6f\x1c\x6a\xc4\x2b\xa6\xe5\xac\x78\x2c\xdc\x16\x0e\xdd\x65\x41\x22\xaa\x65\xe1\xb6\xa2\xc2\x8e\xaf\x25\x5d\x1a\x0e\x10\xb1\x38\xde\x53\x9a\x3b\x34\x64\x32\x5b\xef\xf1\x45\xa7\xdd\xdc\xd2\x85\xd7\xba\xd8\xa3\x7d\x93\x3b\x70\x5d\x18\x70\xbd\x14\x70\xba\x71\x87\xae\x2a\xe0\xf0\x1e\x70\x6e\x7a\x67\xdb\xc5\xf6\xab\x18\xcd\x3a\xae\x91\x66\x56\x08\xca\x5c\xe3\xab\xb0\xe5\xb8\x5e\x16\xc9\xa1\x52\x18\x4f\x71\xc4\x55\xb1\x41\xbe\x69\xca\x45\xc7\x0f\x05\x75\x3a\x5a\x6e\x96\x46\x28\x63\x55\xe0\xfc\x11\x03\x35\x9d\x54\x57\x2d\x98\x19\xa8\x6b\xb1\x2c\x5c\xcb\x58\xb1\x08\x84\x6b\xf6\x13\xc8\xaf\xaa\x28\xdb\x66\xdf\x4d\xaa\xd0\x78\xb1\xd3\x5e\xcb\x3f\x9b\xf5\xe2\xee\x91\xe6\x9c\x75\x61\x7c\x01\xff\x0e\x9b\x36\x8b\x47\x95\x95\xe3\x22\x60\xdd\xcd\x6c\xd3\xe5\x7e\xae\x78\x22\xa4\xcf\xec\x0a\xdd\x1d\xa9\x79\x98\xc8\x2d\xa1\x51\x2b\x1f\x85\x5b\x70\x06\xfd\xab\xcc\xce\x97\x41\x2e\x1b\xa6\x0d\xbd\x80\x2c\x47\x82\xf0\xbc\x0e\x85\x6b\x9c\x19\x55\xae\xa8\x39\xee\xbd\xb0\xba\xd2\xeb\x95\x7d\xcc\x23\x6d\x24\x1a\x4d\x41\x98\xe1\x38\x59\x5d\xab\xb9\x29\x4c\x06\xba\xbf\x2c\x55\x12\x1a\xf8\xdc\x7c\xff\xd0\x14\x62\x23\xa2\x96\xd3\xa8\x35\x16\xca\x74\x1a\xfd\x58\x2c\xf7\x1c\x08\x75\x45\x2d\xd1\x34\xed\xff\x4a\x13\x03\x21\xa3\x4d\x16\x04\xcc\x75\x33\x43\x8c\x4e\xad\xd7\xab\x8c\x57\xb5\x92\x07\xcd\x65\x77\xc8\x7a\xbf\x5f\x98\xc7\x35\xb6\x23\x28\xcb\xea\x15\x72\x3f\xdc\xa6\x97\x34\x17\xba\x98\xd4\xdc\x64\x68\x5a\x19\xe7\x71\x69\x38\x61\x64\x2b\xb3\xbf\x30\xb4\x1b\xac\x4b\xd7\xd5\x5e\xd5\xa0\xfe\xba\xfd\x5f\xee\xcb\x91\xc9\x24\xb1\xd0\xd9\x37\x87\xe2\xf0\x72\x15\x06\xdd\xfd\xc1\xad\xad\x4a\x21\x31\xb6\xd4\xf3\x39\x17\x61\xbb\x3c\xd4\x23\x3d\x46\xfd\xa4\x08\xcd\x51\xcd\x8d\xb2\x63\x34\xb6\xa9\x99\x45\xd6\xcf\x91\x86\x96\x6f\x8e\xea\x91\x83\x77\x0f\x79\x2d\xa4\xe9\xdc\x6e\xed\x6a\x99\x4d\xaf\xb7\x94\xaf\xd7\xf3\xef\x4e\x7b\xcc\xcd\x83\xef\x9b\x34\xd5\xf9\x0b\x76\x6e\x67\x7e\x6e\x97\x2e\xb5\x68\x6d\x95\xc9\xda\x72\x59\xd3\xfe\xfe\x86\xde\x36\x46\x0d\x67\x35\xd2\x34\xf8\x1c\x4b\x6e\x4b\x59\xe4\xfc\x67\xd9\x14\xd7\x56\x12\xad\xd1\xa8\xf1\x29\xd3\x79\x5a\x24\xfd\x44\x9e\xf5\x73\x7e\x6c\xae\x69\xdf\x08\xa4\x2f\xe2\x98\xe6\x23\x71\xe6\xd0\x1a\x74\x30\x8c\x07\xaa\x30\x30\x8b\xe3\x8e\xec\x98\xe3\xba\xcc\x79\x75\x54\xb3\xef\x87\x38\x0c\xce\x73\xf9\xb8\x62\xa4\x23\x66\x0c\xea\xd2\x72\x6a\xe9\xb9\xf9\xc5\x46\x2f\x1b\xf2\x97\x13\x5f\x0b\x3e\x21\xca\x9f\x39\x15\xa4\x7f\x1e\xb0\x3b\x5a\x4e\xc9\x98\x37\x5d\xb9\xc1\x09\x67\x02\x86\x9b\x7d\x4b\xd4\xeb\x8f\x00\x00\x00\xff\xff\x3c\x75\x65\x78\x00\x30\x00\x00")

func assetsTemplatesFormsHtmlSwpBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesFormsHtmlSwp,
		"assets/templates/.forms.html.swp",
	)
}

func assetsTemplatesFormsHtmlSwp() (*asset, error) {
	bytes, err := assetsTemplatesFormsHtmlSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/.forms.html.swp", size: 12288, mode: os.FileMode(420), modTime: time.Unix(1489399557, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesFamilypageHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x53\xc1\x6e\x9c\x30\x10\xbd\xe7\x2b\x46\x73\x4a\xa4\x06\x1a\xa2\x5c\x22\x40\xaa\x22\x45\xca\x21\xd5\x4a\x55\x3f\xc0\xe0\xd9\x60\xd5\x36\xd4\x36\xda\x5d\x59\xfc\x7b\x0d\x86\x65\xe1\x52\x2e\xe0\xe1\xbd\x37\xf3\x9e\x6d\xef\x1d\xa9\x4e\x32\x47\x80\x0d\x31\x8e\xc3\x70\x07\xe1\xc9\x9b\xa7\xf2\x9d\x29\x21\x2f\x70\x60\x5f\xf4\x0a\xde\x27\x61\x9d\xc4\xda\x4f\xa6\x68\x18\xf2\x34\x80\x22\xba\x97\xf1\xc3\x7b\xc3\xf4\x17\xc1\x84\xfd\x24\x55\x91\xb1\xb3\xe2\x84\x93\xa2\xbc\x2e\x22\x3e\xf9\x6d\xc9\xe8\x49\x0f\x1e\x1f\x43\xa1\xfa\x45\x92\x6a\x07\xc9\x81\x19\xd2\x0e\x30\xbe\x11\xf0\xad\x11\x72\x1c\x30\xaf\xcc\xaa\x92\xa7\x8b\xa6\xf7\xa4\xf9\x32\x7e\xba\x4c\x34\x82\xaf\x04\xef\xc5\x11\xee\xa7\xe1\x3e\xec\xac\x9f\xbc\x2b\x52\xf0\xb0\x10\x8f\xad\x51\xc0\x6a\x27\x5a\x5d\x20\xe3\x5c\x4d\x26\x10\x14\xb9\xa6\xe5\x05\x76\xad\x75\x58\xc2\xdd\xea\x20\x48\x06\xab\x1b\x9b\xcd\x33\xd4\x92\x59\x5b\xa0\x22\x6b\x43\x7e\x58\x06\xa7\x01\x04\x53\x6a\xcf\xe5\x0d\x7d\x1d\x3a\x52\xb3\xf2\x07\xe7\x30\x67\x1f\x23\x0c\x94\x6c\xa5\x8c\xe1\xc3\x2b\xe4\x42\x77\xbd\x03\x77\xe9\xa8\x40\x47\xe7\x90\xd0\x18\x63\x81\xfd\x1c\x28\xae\x94\x0f\x0b\xd1\xed\x8e\x56\x37\x54\xff\xa9\xda\xf3\x42\xed\x62\xd4\xe5\x26\xe1\x43\x30\x72\x6a\x0d\xdf\xf7\xec\xe6\x3a\x42\xc7\x9c\x0b\x3d\x0b\x4c\xfc\xcb\xb7\xec\xfb\x80\x60\xe8\x6f\x2f\x0c\xf1\x45\xf7\xc4\x9f\x76\xaa\xf7\x9f\x42\x0b\xd5\x2b\x78\x01\x49\x23\xdd\x3e\x6c\xfe\xbf\xb5\xfa\x28\xc2\x56\xfc\xbf\xfb\xb5\x45\xb6\x6b\xb1\xc1\xdb\xbe\x52\xc2\xcd\x99\xe4\xe9\xb8\xcd\xdb\x63\x73\x7b\x13\x2a\x66\x69\xbc\x09\xff\x02\x00\x00\xff\xff\xfc\x4e\xf4\x67\x1e\x03\x00\x00")

func assetsTemplatesFamilypageHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesFamilypageHtml,
		"assets/templates/familypage.html",
	)
}

func assetsTemplatesFamilypageHtml() (*asset, error) {
	bytes, err := assetsTemplatesFamilypageHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/familypage.html", size: 798, mode: os.FileMode(420), modTime: time.Unix(1489399587, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesFormsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x55\xcb\x6e\xdb\x3a\x10\xdd\xfb\x2b\x08\x22\x8b\x7b\x81\x40\x71\x72\x2f\x50\xc0\xb0\x0d\x04\x4e\xbd\x6a\x1e\x68\x53\x74\x69\x30\xe6\x38\x12\x22\x92\x2a\x49\xd9\x15\x04\x7d\x4d\xff\xa4\x5f\xd6\x21\x45\xc9\x92\xe3\xd8\x2e\x90\x55\xb5\x48\xf8\x38\x73\x38\x73\xe6\xe1\xb2\xe4\xb0\x4a\x24\x10\xba\xd2\x62\xc1\x38\x5f\xb0\xe5\x52\xe5\xd2\xd2\xaa\x1a\x10\xfc\xc6\x2b\xa5\x05\x61\x4b\x9b\x28\x39\xa1\x08\x68\xee\x89\x00\x1b\x2b\x3e\xa1\x99\x32\x96\x4e\x6b\x70\xfc\xdf\xf4\x9a\x73\x72\x5d\x63\xc6\x17\xb8\xaf\x2f\x12\x99\xe5\x96\xd8\x22\x83\x09\xb5\xf0\x03\xcd\x25\x13\xb8\xce\x0d\x68\xb7\xa2\x44\x03\xe3\x4a\xa6\x05\x59\xb3\x34\xc7\x9b\xb2\x8c\xe6\x02\x44\x55\x51\x12\x27\x9c\x83\x3c\xc2\x14\xfc\xaa\xc9\x32\x66\x2d\x12\x4f\x68\x54\xfe\x7f\x7e\x35\xac\x1c\xfd\xf7\x3c\xd1\xc0\xf7\xb0\x98\xfc\x49\x24\xc8\xe3\xd8\x26\x14\xfd\xa7\x8d\x0f\x6e\x1d\x0c\x2e\x9c\x0e\xd3\x41\x59\x82\xe4\x28\xcd\xa0\x23\x9c\xc8\x16\xa2\x08\xcf\x9b\x56\x37\x03\x29\x2c\x6d\x70\x6e\xa5\x95\x08\x4c\xee\x2b\x4b\xcd\xe4\x33\x90\xb3\x17\x72\x4e\xce\xd6\x64\x34\x21\xff\x44\x73\x26\xa2\x4f\x89\xb1\xdf\x74\x62\x01\x15\x04\x63\x88\x97\xe0\xdf\x40\xe9\x69\x55\xe6\x32\xb1\x15\xe9\x6c\x1d\x7d\x0d\x1a\x56\xd5\xc8\xef\xef\xfc\x9a\x4e\x0f\x5c\x8e\x9c\x0f\x42\x49\x28\xf0\xf9\x68\x96\x6b\x0d\xd2\x56\xd5\xf8\xa2\xa6\xef\x7a\x5a\xc7\x5b\x6b\x50\xc7\xb4\x55\xa1\x2f\x02\x4b\xd3\xc3\x2a\x58\xb5\x57\x83\xf3\x5a\x01\x2f\x40\xa8\x1c\xf3\xfe\x21\xff\x69\x6c\xbd\x14\x63\x6f\x64\xac\xd8\xdf\x13\xee\x62\x5f\x33\x34\x0d\x71\xcb\x5e\x80\x30\xf2\xc0\x0a\x01\xef\xde\x13\x84\x78\xae\x39\xd6\xd7\x08\x03\xb2\x20\xb2\x94\xd9\xd7\x55\x49\xa2\xe0\xfb\xa3\x7a\x8d\xeb\x26\xce\x01\xc7\x4f\xba\x76\xf1\x5a\xb8\x43\x2c\x96\x5f\x3f\x7b\xde\xca\x5c\x3c\x81\xa6\xc4\x58\xc8\x26\x74\x18\x0d\x2f\x51\x81\x04\xb5\x18\xb6\xdd\xe8\x2d\xe9\xb4\xa5\x7a\xc8\x35\x6a\x03\xa3\x03\x71\x67\x35\xa4\x63\x74\xa4\x55\x51\x52\x72\xa7\x36\x6d\xbb\x36\xfb\xe3\x2d\x8b\xf9\x34\x96\x49\x9e\xc8\xe7\x37\x07\x5d\x0b\x38\x21\xb9\x5f\x02\x96\xdc\x6b\x0e\x7a\x9b\xe3\xbf\x30\x2f\xde\x0a\xe3\xd5\x96\xdc\xa0\xa7\xa3\xbe\x1d\xc7\xa3\xc6\xce\x38\x10\xdd\xd6\xae\xbb\xfb\x3c\x9f\xb9\x3e\x6d\x9f\x7f\x8c\x41\x92\x8f\x6b\xd0\xc5\x0e\x51\x13\x8a\x77\xff\xb2\xa1\xe4\x90\xba\x6e\x0b\x94\x1f\x9a\x4c\xf7\xa6\x8c\xc7\x2c\x1c\x4b\x37\x57\xfd\x21\xc2\x59\x61\xe8\xf4\x06\xff\xbe\x1e\x0b\x3b\x50\x9c\x92\x36\x46\xf0\xad\xff\xdf\x87\xb7\x53\xa3\x8d\xe7\x94\xb2\x9d\x61\x5b\x3b\x95\xc2\x03\x61\x7b\x52\xd1\x2e\xe3\x8c\x19\x3f\x5d\xfb\xe5\x1a\xce\xdf\xfa\x4d\x9e\xc5\x7e\xd4\x3e\x20\x66\xa3\x34\xdf\xd6\xe7\x7d\xca\xdb\x53\xb2\x93\x81\x2c\x9c\x37\xda\xab\x94\x67\x1b\xde\xc9\xdd\x1d\x6c\x48\x76\xa2\x31\x5a\x5e\x76\x4c\x67\x4a\xae\x12\xf4\xff\xb8\xd5\x55\xc7\xea\x90\xa6\x3e\xc2\xad\xa6\xf5\x76\x3a\xd8\xd5\xf3\x77\x00\x00\x00\xff\xff\x2d\x04\x7f\xae\xf0\x08\x00\x00")

func assetsTemplatesFormsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesFormsHtml,
		"assets/templates/forms.html",
	)
}

func assetsTemplatesFormsHtml() (*asset, error) {
	bytes, err := assetsTemplatesFormsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/forms.html", size: 2288, mode: os.FileMode(420), modTime: time.Unix(1489399553, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\xcd\xce\x9b\x30\x10\xbc\xf3\x14\x2b\x9f\x5a\xa9\xcd\x0f\x52\x2e\x15\x20\x55\x51\x7b\x0a\x55\x2e\x7d\x00\x03\x4b\xb1\x8a\x6d\x6a\x9b\xa6\x11\xe2\xdd\x6b\xc7\x90\x90\x84\x34\xcd\x97\x13\xbb\x9e\x19\xaf\x66\x36\xee\x3a\x83\xbc\xa9\xa9\x41\x20\x15\xd2\x82\xf4\x7d\x00\xc3\x2f\xaa\xd6\xc9\x5e\xe6\x3f\xd1\x40\x2a\x05\x1e\xa3\xa5\x6d\x04\xe7\xe3\xae\x63\x25\x2c\xa6\xf8\x2c\xe9\xba\x45\x8a\xba\xef\xa3\x65\x96\x4c\x80\x28\x0a\x8b\x0b\x2e\xdc\xa8\x94\x8a\x03\xcd\x0d\x93\x22\x26\xb5\xfc\xc1\x04\x01\x8e\xa6\x92\x45\x4c\x1a\xa9\x0d\xb9\xd0\xfd\x28\x61\xb2\x73\x28\x3b\x43\x78\x7d\xf4\x95\x72\x56\x1f\x3f\x41\xc4\x44\xd3\x1a\x30\xc7\x06\x63\x62\xf0\x8f\x21\x20\x28\xb7\xdf\xe5\x09\x40\xe0\x37\xad\x5b\x5b\xda\x11\x3d\xa5\xef\x49\x12\x65\xea\x5a\x2d\x45\x9e\xa1\x82\x6f\x96\x09\xff\xd0\x6c\x35\x2a\xf7\x35\x55\xfd\x3e\xf4\x66\x75\xf7\x54\xeb\x83\x54\xc5\xad\x68\x33\xf4\x47\xe1\xe6\x50\xcc\xb0\xaf\x28\xba\xcd\x38\xb3\x93\xb8\x79\x62\xb2\xf3\xde\x0d\x63\xf8\xea\x42\x8e\x96\xce\xe8\xe4\xa1\xf3\x02\x0f\xa3\x3d\x4f\xdc\xdf\x2a\x74\x4b\xe2\xad\x83\xcf\x79\x2e\x5b\x61\x1e\xa5\xf1\xd4\x3f\x7f\xe9\xc9\xc1\x99\x0c\x28\x13\xe0\xdc\xfc\xaf\x04\xee\xf9\x5f\x38\x65\xf5\x2d\x17\x5d\x73\x24\xfb\xe2\x2d\x29\x35\xd4\x18\x7b\x71\x4c\x16\xdd\xe6\x43\xb8\xea\x09\x28\xfc\xd5\x32\x85\x05\x18\x66\x6a\x8b\xdd\x7c\x0c\x57\x90\x57\x54\x59\x8f\x51\xe9\x49\xb0\xeb\x99\x1b\xdf\xa5\x4c\x30\xde\x72\xd8\x40\x8d\x4e\x5a\xbf\xbf\xc3\x6c\xa5\x28\x99\x0d\xed\x85\x1d\x0a\x5f\x5b\x22\x1f\xee\x79\x8b\x86\x72\xf2\x5f\x1f\xf7\x68\xfa\x5c\x64\x54\xa3\x7d\x2e\x46\x48\xf0\x37\x00\x00\xff\xff\xdf\x16\x24\x30\x4b\x04\x00\x00")

func assetsTemplatesIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIndexHtml,
		"assets/templates/index.html",
	)
}

func assetsTemplatesIndexHtml() (*asset, error) {
	bytes, err := assetsTemplatesIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/index.html", size: 1099, mode: os.FileMode(420), modTime: time.Unix(1489069089, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesLayoutHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x51\x3d\x73\xb3\x30\x0c\xde\xf9\x15\x7e\xb5\xbf\xf5\xda\xc1\x78\xe9\xc7\xd4\x5e\x18\xb2\x74\x54\x40\x04\x5f\x8c\x9d\x43\xa2\x57\x8e\xcb\x7f\xaf\xc1\x6d\x43\x87\xc6\x8b\xbe\x9e\x47\x96\xf4\xcc\x73\x43\xad\x0b\xa4\xa0\x23\x6c\xe0\x72\x29\xcc\xbf\xc7\xdd\xc3\xfe\xad\x7a\x52\x9d\xf4\xde\x16\x26\x1b\x95\x9e\x59\x30\xd9\x5d\xc3\x9e\x04\x55\xdd\xe1\xc0\x24\x25\x8c\xd2\xfe\xbf\x87\x4d\xd9\xbb\x70\x52\x03\xf9\x12\x58\x26\x4f\xdc\x11\x09\x28\x99\xce\x54\x82\xd0\x87\xe8\x9a\x19\x54\x37\x50\x5b\x82\x66\xdd\xa3\x0b\x77\x4b\x6a\xd3\x42\x9c\x78\xb2\x55\xac\x4f\x24\xea\x35\x06\x9a\x8c\xce\xb9\x3c\x90\xbe\x4e\x64\x0e\xb1\x99\x36\xd4\xc6\xbd\xab\xda\x23\x73\x09\x3d\x85\x71\xd3\x75\x2d\xe3\xf7\xc7\x2d\xf6\xce\x4f\x60\x9f\x57\x6b\x34\xfe\x05\x3c\xd3\xc0\x31\xa0\x07\x5b\x7d\x79\x37\xc0\x32\x60\x60\xac\xc5\xc5\x90\x16\xda\x6f\xa2\x1b\x24\x1f\x8f\x71\x14\xb0\x2f\xf1\xa8\x76\xa3\xfc\x42\x1a\x9d\x16\xb2\xc5\x3c\x53\x68\x92\x4a\xe9\x5d\xa5\x3b\x20\xd3\x22\x5d\xc6\xe5\x3b\xa4\xd3\xac\xba\xfd\x10\x3e\x03\x00\x00\xff\xff\x7a\x8a\x17\xb6\xea\x01\x00\x00")

func assetsTemplatesLayoutHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesLayoutHtml,
		"assets/templates/layout.html",
	)
}

func assetsTemplatesLayoutHtml() (*asset, error) {
	bytes, err := assetsTemplatesLayoutHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/layout.html", size: 490, mode: os.FileMode(420), modTime: time.Unix(1488553008, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesNewaccountHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xe2\xb2\x81\xd0\x0a\x40\x60\x93\x91\x9a\x98\x02\x61\x82\xb9\x25\x99\x25\x39\xa9\x76\x1e\xa9\x39\x39\xf9\x36\xfa\x10\x0e\x42\x32\x37\xb5\x24\x51\x21\x39\x23\xb1\xa8\x38\xb5\xc4\x56\xa9\xb4\x24\x4d\xd7\x42\x09\x6a\x8c\x3e\xc2\x1c\x9b\xa4\xfc\x94\x4a\x24\x5d\x19\x86\x76\x7e\xa9\xe5\x0a\xa1\xc5\xa9\x45\x40\x65\x86\x08\x99\xea\xea\x82\xa2\xcc\xbc\x92\x34\x05\x25\xd5\x62\x25\x05\xbd\xda\x5a\xa8\x51\x10\xfd\x40\xb5\x10\xd7\x02\x02\x00\x00\xff\xff\xd6\x4d\xae\x17\xbf\x00\x00\x00")

func assetsTemplatesNewaccountHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesNewaccountHtml,
		"assets/templates/newaccount.html",
	)
}

func assetsTemplatesNewaccountHtml() (*asset, error) {
	bytes, err := assetsTemplatesNewaccountHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/newaccount.html", size: 191, mode: os.FileMode(420), modTime: time.Unix(1488373318, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesNewuserHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xe2\xb2\x81\xd0\x0a\x40\x60\x93\x91\x9a\x98\x02\x61\x82\xb9\x25\x99\x25\x39\xa9\x76\x1e\xa9\x39\x39\xf9\x36\xfa\x10\x0e\x42\x32\x37\xb5\x24\x51\x21\x39\x23\xb1\xa8\x38\xb5\xc4\x56\xa9\xb4\x24\x4d\xd7\x42\x09\x6a\x8c\x3e\xc2\x1c\x9b\xa4\xfc\x94\x4a\x24\x5d\x19\x86\x76\x7e\xa9\xe5\x0a\xa1\xc5\xa9\x45\x40\x65\x86\x08\x99\xea\x6a\xbd\x50\xbf\xc4\xdc\xd4\xda\x5a\x9b\xa4\x22\x24\x0d\x89\x0a\x19\x45\xa9\x69\xb6\x4a\xfa\x40\x6d\x8e\xc9\xc9\xf9\xa5\x79\x25\x4a\x60\x23\xa0\x1c\x1b\xfd\x44\x98\xad\x10\xab\x80\xc6\x42\x3c\x06\x08\x00\x00\xff\xff\xa6\xb7\x94\xc4\xea\x00\x00\x00")

func assetsTemplatesNewuserHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesNewuserHtml,
		"assets/templates/newuser.html",
	)
}

func assetsTemplatesNewuserHtml() (*asset, error) {
	bytes, err := assetsTemplatesNewuserHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/newuser.html", size: 234, mode: os.FileMode(420), modTime: time.Unix(1488373372, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesTransactionsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x8f\x41\x0b\xc2\x30\x0c\x85\xef\xfd\x15\x61\xec\x28\x1b\x78\x94\x5a\x10\x64\x67\x0f\xfe\x81\xcc\x05\x27\xae\xed\x68\xb3\x81\x94\xfe\x77\x33\x45\x54\xb4\x87\x42\xde\xf7\x48\xde\x4b\x89\xc9\x8e\x03\x32\x41\xd1\x13\x76\x45\xce\x4a\xf7\x6b\x73\x0c\xe8\x22\x9e\xf8\xe2\x5d\xd4\xb5\x08\x4a\x33\xb6\x03\x19\x95\x92\xa0\x33\x41\x79\x5d\x95\x33\x6c\xb6\x50\x35\x68\xab\x4f\x3f\x2c\x3b\x38\x18\x05\xf2\x34\x77\x26\xa5\x72\xae\x9a\xe0\x6d\xce\xba\x96\xf9\x1b\xec\x29\xf2\x2f\xb0\xde\xd1\x0d\x04\xef\xac\x9f\xdc\x1f\x83\xa0\xc3\x14\x46\x1f\xe9\xc5\xe4\x97\xa3\x12\x90\x5c\xf7\x88\xf0\x0c\xbc\x28\xef\x92\x2d\x46\x5a\x4a\xde\x03\x00\x00\xff\xff\x81\x8f\xc0\x51\xf9\x00\x00\x00")

func assetsTemplatesTransactionsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesTransactionsHtml,
		"assets/templates/transactions.html",
	)
}

func assetsTemplatesTransactionsHtml() (*asset, error) {
	bytes, err := assetsTemplatesTransactionsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/transactions.html", size: 249, mode: os.FileMode(420), modTime: time.Unix(1489232941, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesUserhomeHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x92\x4f\x6b\xf2\x40\x10\xc6\xef\x7e\x8a\x61\x11\x0f\xf2\x92\xe0\xeb\xcd\x6e\x52\x4a\xa1\x87\x42\x4b\x41\x7a\x96\x31\x19\x4d\x68\x76\x93\x66\x13\xad\x2c\xf9\xee\x9d\x49\x4c\x95\xfe\xf1\x22\x3b\xbf\x67\xe6\x99\x67\x37\xde\x37\x64\xaa\x02\x1b\x02\x95\x11\xa6\xaa\xeb\x26\x3a\xfb\x1f\xbf\x3a\xaa\xe1\x05\xf7\x04\x2b\xf0\x3e\x78\x30\x64\xba\x4e\x87\x4c\x18\x2f\xe3\xbb\x24\x29\x5b\xdb\x38\xae\x2c\xe3\x89\xf7\xf9\x0e\x82\x27\x72\x7d\xf3\x12\x92\x02\x9d\x8b\x94\x21\xe7\x78\x82\x8a\x79\x40\x0f\x47\x35\xd9\x94\x95\xde\x87\xf3\x75\x56\x1e\x61\x1c\x36\x0f\xb9\x3a\xd1\x6d\x21\x9a\xa9\x58\xc2\x2a\x82\xb3\x37\x97\x6a\xb4\xbc\xcf\xf4\xed\x1f\x4c\x0f\x03\x41\x13\x8c\xcd\xac\x00\xfe\xf5\xab\xd0\x3b\x2b\x02\x89\x60\xd1\x70\xc7\x79\x82\x70\x5d\xe4\xb1\x46\xc8\x6a\xda\x45\x2a\x3c\xe4\x74\xbc\x6d\x45\x14\xb1\xe3\xa5\xa5\xeb\x66\x98\x0c\xa5\xe7\xfe\x28\x19\xbe\x0e\x3a\xc4\x78\x66\xb7\xae\xba\xf1\xde\x94\x96\x4e\xe2\x76\xdf\xd6\x35\xd9\x46\x28\x5b\x9c\x77\x19\x83\x0e\xff\x3a\x94\x68\x92\xed\x63\xb1\xe8\x03\xac\xa9\x79\x2c\xb7\xa0\x5c\x83\x36\x55\x57\x51\x2f\x8f\xd2\xa3\xdc\xee\x99\xca\xed\x5c\xa3\x5d\x6d\x36\x98\xa6\x1b\x1c\xae\xe0\x0f\x45\x85\xa7\x81\x7c\x07\x57\x93\xe1\x17\x9c\x64\x15\xbf\xe2\xcf\xd6\x2d\x3a\x92\xaf\xe4\x33\x00\x00\xff\xff\x8c\xcd\x4c\xd4\x3a\x02\x00\x00")

func assetsTemplatesUserhomeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesUserhomeHtml,
		"assets/templates/userhome.html",
	)
}

func assetsTemplatesUserhomeHtml() (*asset, error) {
	bytes, err := assetsTemplatesUserhomeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/userhome.html", size: 570, mode: os.FileMode(420), modTime: time.Unix(1489250177, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesViewHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8d\xcf\x8a\xc3\x20\x10\xc6\xef\x3e\xc5\x10\x72\x5c\x0c\xec\x71\x71\x85\x85\x25\x87\xbd\xec\xa1\x4f\x60\x70\x9a\xa6\x8d\xa6\xa8\x09\x2d\x92\x77\xef\x4c\xfe\x41\x05\x05\x7f\xf3\xcd\xef\xcb\xd9\xe2\xb9\xf3\x08\x45\x4c\xc6\xdb\xce\xb7\xc5\x3c\x8b\x9c\xcb\x6b\x84\xaf\x6f\x90\x7f\x43\xb3\x8d\x76\x9e\x98\xdf\x7b\x7c\x00\x67\xf8\xca\xda\xa1\x83\x75\xdc\x77\x71\x09\xec\xb6\xe6\x39\x46\x0c\x14\x31\x4e\x9e\x36\xb6\x2e\x50\x5e\x5d\x3e\xf5\x01\xff\x83\xc5\x10\x55\x45\x4c\xa8\x64\x9a\x1e\x35\x09\x83\xf1\x2d\x42\x79\xfb\x80\x72\x62\xef\x52\xc0\xab\x29\x68\x01\x74\x54\xb2\x9a\x7a\x27\x59\x87\x81\x9c\xaa\xa2\xff\xc1\x7e\x91\xc3\xef\xec\xc7\x0d\xa3\xdf\xa9\xa0\x37\x70\x0f\x7a\xcb\xd6\xea\x28\x5e\xc1\x2b\x00\x00\xff\xff\x90\xda\x0c\x23\x1f\x01\x00\x00")

func assetsTemplatesViewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesViewHtml,
		"assets/templates/view.html",
	)
}

func assetsTemplatesViewHtml() (*asset, error) {
	bytes, err := assetsTemplatesViewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/view.html", size: 287, mode: os.FileMode(420), modTime: time.Unix(1489250289, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesViewacHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x52\xd1\x6a\x83\x30\x14\x7d\xef\x57\x84\xe2\xc3\x06\xc3\x42\x1f\x47\x26\x14\x46\x61\x63\x6c\x63\x74\x1f\x10\xf5\xb6\xca\x4c\xe2\x92\x28\x14\xf1\xdf\x77\x93\xe8\x8c\x3a\xd6\x97\x5e\xcf\xb9\xf7\x9c\x93\xe4\x76\x9d\x01\x5e\x57\xcc\x00\xd9\x16\xc0\xf2\x6d\xdf\x6f\x08\xfe\xba\x2e\x32\xb2\x26\xf7\x0f\x24\x9e\x10\x96\x39\xe0\x59\xa6\x64\xcb\x32\xdb\x4a\x8b\x7d\xe2\x88\xbe\xa7\x3b\xac\x37\xd4\xb0\xb4\x82\xc4\x4d\x50\xa3\x7c\xe1\x3f\x8a\xe4\xa3\x11\xa2\x14\x17\xba\xc3\x7a\x46\x3c\xbd\xae\xb1\xb7\xcf\xd3\x1f\xa0\x29\x40\xad\xe1\xf7\x46\xd5\x52\xc3\x44\x60\x35\x78\x63\xba\x97\x52\x1b\x17\xfc\xc8\x78\x7c\xc8\xb2\x86\x37\xf6\xc0\x27\xc5\x84\x66\x99\x29\xa5\xd0\xc4\x1d\x61\x18\x40\xfc\x02\x24\xfa\x22\x77\x51\x6b\xe7\x9c\xc0\xc0\x2e\xce\x94\x27\x34\xc5\x0b\xe0\x52\xc0\x95\x44\x6d\x7c\x38\x1b\x50\xf6\x2e\xd2\x04\x23\xe4\x53\x2b\xde\xf3\xb5\x86\xc0\x26\x04\xdb\xf8\xa8\x24\x9f\x11\xe5\x99\xdc\xc0\xf7\xde\x0e\x8c\xfc\x6d\xd0\xe0\x9c\xad\x81\x2d\x42\x7f\x2e\x1b\x61\x6c\x80\x5f\x0e\xd1\x47\xd0\x23\x16\x58\x40\xa5\x61\x21\xf9\x9f\xd2\x5c\xd2\x07\x5e\x49\x8a\x7c\xa5\x88\xcd\xc3\xf3\x2c\xfb\x3d\x9f\xdb\xdd\xb3\x21\xf1\x7f\xec\x58\xbd\xa1\x17\x46\xc4\x6f\xd7\x26\x5c\xdb\x94\x69\xb0\xbb\xf8\x13\x00\x00\xff\xff\xc8\x79\xf6\xac\xcb\x02\x00\x00")

func assetsTemplatesViewacHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesViewacHtml,
		"assets/templates/viewac.html",
	)
}

func assetsTemplatesViewacHtml() (*asset, error) {
	bytes, err := assetsTemplatesViewacHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/viewac.html", size: 715, mode: os.FileMode(420), modTime: time.Unix(1489232941, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/s/main.css": assetsSMainCss,
	"assets/templates/.familypage.html.swp": assetsTemplatesFamilypageHtmlSwp,
	"assets/templates/.forms.html.swp": assetsTemplatesFormsHtmlSwp,
	"assets/templates/familypage.html": assetsTemplatesFamilypageHtml,
	"assets/templates/forms.html": assetsTemplatesFormsHtml,
	"assets/templates/index.html": assetsTemplatesIndexHtml,
	"assets/templates/layout.html": assetsTemplatesLayoutHtml,
	"assets/templates/newaccount.html": assetsTemplatesNewaccountHtml,
	"assets/templates/newuser.html": assetsTemplatesNewuserHtml,
	"assets/templates/transactions.html": assetsTemplatesTransactionsHtml,
	"assets/templates/userhome.html": assetsTemplatesUserhomeHtml,
	"assets/templates/view.html": assetsTemplatesViewHtml,
	"assets/templates/viewac.html": assetsTemplatesViewacHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"s": &bintree{nil, map[string]*bintree{
			"main.css": &bintree{assetsSMainCss, map[string]*bintree{}},
		}},
		"templates": &bintree{nil, map[string]*bintree{
			".familypage.html.swp": &bintree{assetsTemplatesFamilypageHtmlSwp, map[string]*bintree{}},
			".forms.html.swp": &bintree{assetsTemplatesFormsHtmlSwp, map[string]*bintree{}},
			"familypage.html": &bintree{assetsTemplatesFamilypageHtml, map[string]*bintree{}},
			"forms.html": &bintree{assetsTemplatesFormsHtml, map[string]*bintree{}},
			"index.html": &bintree{assetsTemplatesIndexHtml, map[string]*bintree{}},
			"layout.html": &bintree{assetsTemplatesLayoutHtml, map[string]*bintree{}},
			"newaccount.html": &bintree{assetsTemplatesNewaccountHtml, map[string]*bintree{}},
			"newuser.html": &bintree{assetsTemplatesNewuserHtml, map[string]*bintree{}},
			"transactions.html": &bintree{assetsTemplatesTransactionsHtml, map[string]*bintree{}},
			"userhome.html": &bintree{assetsTemplatesUserhomeHtml, map[string]*bintree{}},
			"view.html": &bintree{assetsTemplatesViewHtml, map[string]*bintree{}},
			"viewac.html": &bintree{assetsTemplatesViewacHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

