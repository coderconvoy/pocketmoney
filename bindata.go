// Code generated by go-bindata.
// sources:
// assets/s/main.css
// assets/templates/.forms.html.swp
// assets/templates/.standing.html.swp
// assets/templates/.userhome.html.swp
// assets/templates/.view.html.swp
// assets/templates/familypage.html
// assets/templates/forms.html
// assets/templates/index.html
// assets/templates/layout.html
// assets/templates/newaccount.html
// assets/templates/newuser.html
// assets/templates/standing.html
// assets/templates/transactions.html
// assets/templates/userhome.html
// assets/templates/view.html
// assets/templates/viewac.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsSMainCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x8f\x41\x0e\x82\x30\x10\x45\xf7\x3d\xc5\x24\x6e\x8d\x21\x31\x2c\x0a\xa7\x69\x9d\x0e\x69\x84\x0e\x0e\x6d\xa2\x31\xde\x5d\x0a\x65\x01\x2e\xec\xb2\xff\xff\x97\x37\x96\xf1\xf5\x56\x30\x3f\x6b\x6e\xf7\x4e\x38\x05\x6c\x4e\x5a\x13\x59\xdb\xaa\x8f\x52\x97\xc1\x85\x04\xbf\x95\xba\x26\x32\x66\xa9\x10\xcb\xb0\x35\x58\xd0\x49\x53\x8f\x4f\x98\xb8\xf7\x08\xb6\x9f\x37\xed\x92\x0d\x46\x3a\x1f\x72\xb6\x82\xc5\x3d\x92\x9b\xe2\x6e\x78\xfd\x37\x3c\x6a\x10\x69\xbd\x9a\x6e\x3c\xc8\x3a\x3b\x68\xb5\x0d\x0b\xa8\x2a\x06\xca\x87\x31\x45\x38\x83\x4d\x31\x72\x28\x27\x1c\x34\x23\x96\xff\xd1\x20\xfa\xd0\x65\xc5\x1c\x7c\x03\x00\x00\xff\xff\x8e\x9e\x69\x57\x39\x01\x00\x00")

func assetsSMainCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsSMainCss,
		"assets/s/main.css",
	)
}

func assetsSMainCss() (*asset, error) {
	bytes, err := assetsSMainCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/s/main.css", size: 313, mode: os.FileMode(420), modTime: time.Unix(1490276725, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesFormsHtmlSwp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9a\x4d\x8c\x14\x45\x14\xc7\x0b\x10\x11\x75\xc1\x48\xbc\x79\x28\xdb\x8d\xd1\x84\x74\xef\x2e\xc4\x4d\x26\xb3\x93\xe0\xc2\xa2\x89\x0b\xcb\xa7\x7a\xda\xd4\x4c\xd7\x4c\x77\xe8\xee\x6a\xba\x6a\x66\x9c\x74\x46\xbd\xc9\xcd\x83\xd1\x78\x01\x31\x1e\xfc\x8a\xf1\x60\xf0\xe8\xc1\xf8\x79\x31\x44\x8f\x78\xf3\xc0\xc9\xc4\x0b\x9e\xfd\xf7\xd7\x6c\xf7\xec\xb2\x03\xba\x01\x3f\xea\x9f\xfc\x9c\xfe\x78\xef\xf5\xeb\x57\xaf\xde\xb8\x61\x9a\x33\x67\x9f\x5b\xa6\xf3\xe6\x41\x02\x3d\x44\xc8\xa7\x3f\xfc\xfc\xe2\x87\x3b\xf7\x6f\x7f\x9d\x12\xe2\x33\xa5\x1c\xde\x27\x93\x74\x94\x47\x6a\x30\x37\xd1\x8c\xbc\x92\x07\xb4\x64\x2b\x72\x43\x25\xad\x8e\xf0\x58\xd0\xb1\x64\xd4\xb2\x3a\xae\x72\xba\x4d\xb3\x25\x7c\xab\x25\x6c\x1e\xb5\x44\xd0\x13\x03\x2b\x14\xad\x73\x5c\xf9\x22\xe0\x03\x8b\x49\xc9\xe1\xa4\xb8\x1f\x7a\x4c\x71\x69\xb5\x45\xe4\x4b\xd3\x51\xbe\x37\xf9\xd9\x5a\x5a\x5a\x53\xe4\xc0\xdc\xec\x4c\x72\xf4\xb8\xf1\x18\xdd\xf7\xf0\x99\xbb\x9d\x90\x96\x96\x96\x96\x96\x96\x96\x96\x96\x96\xd6\x1d\x94\x0a\xb7\x91\x57\xf1\xb9\x3d\x3f\x3f\x91\x7f\x6e\x1b\xfb\xd4\xd2\xd2\xd2\xd2\xd2\xd2\xd2\xd2\xd2\xd2\xd2\xd2\xd2\xd2\xfa\xf7\x8a\xd9\x84\x9c\xc5\x1f\xff\x5f\xec\x20\xe9\xbf\xff\x17\x7f\xff\xff\xba\x17\xd7\xc0\x45\x70\x0a\x4c\x81\x5f\xf6\x10\x72\x15\x7c\x0f\xbe\x03\x9f\x80\xf3\x60\x27\xb8\x31\x45\xc8\x6f\xe0\x2a\xb8\x0c\x8e\x82\x79\x60\x81\x47\xc0\xef\x0f\x12\xf2\x39\xf8\x00\xbc\x0b\x2e\x81\x8b\xe0\x02\x68\x82\x67\xc0\x1f\x0f\x10\xf2\x19\xe8\x80\x47\xc1\xf5\xfb\x09\xf9\x18\x5c\x02\x6f\x83\xb7\x40\x0c\x96\xc1\x13\xe0\xda\x6e\x42\xde\x00\x87\xc1\x5e\xb0\x07\x7c\x73\x1f\x21\xaf\x01\x06\x9e\x06\xbb\xc0\x8d\x5d\x78\x3e\xb8\x02\x3e\x02\xef\x81\xcb\xe0\x02\x68\x81\x25\xb0\x1b\xfc\x78\x2f\x21\xef\x00\x06\x5e\x02\x27\xc0\x0a\x98\x07\x53\xe0\xfa\x4e\x42\xbe\x06\x21\x98\x06\xd7\xee\x21\xe4\x4d\xf0\x2c\xd8\x07\x7e\x42\x0d\xbf\x05\x5f\xee\xc8\xea\x79\x65\xc7\xdd\x5c\x59\xad\xff\xae\xe2\x98\x07\xf6\x70\x48\xea\xe9\x6f\x60\x1a\x84\x42\xe5\xe3\xf4\xdc\x0d\xc2\xae\xa2\x6a\x10\xf2\x05\x43\x76\x9b\xbe\xab\x0c\xaa\xf8\xcb\x6a\xc1\x38\xc9\xcf\x77\xb9\x54\xf4\x98\xe8\x1b\xb4\xc7\xbc\x2e\x2c\x56\xd8\x20\x3d\xcf\x02\xac\x74\xa3\x50\x48\x5e\x1b\x0b\x93\xb8\x1b\x34\x60\x3e\x8e\xc3\xcc\xc4\x68\xd4\x9b\x51\xe6\x74\xc8\x17\xdd\x40\xc1\xe7\xab\xf7\x2b\x5e\x41\xd7\x6f\xf2\xc8\xa0\x52\xf1\x70\xc1\x98\x31\x67\x66\x0d\xea\xbb\x01\x0e\x8b\x58\x2c\xf5\x2c\x85\x3a\x2d\x6a\xb4\x2e\xb9\xc7\x5b\x2a\x37\x51\xc2\x68\xc4\x71\xf1\xe3\x1f\x6a\xb4\xfd\x70\x95\x79\x1e\x6b\xb5\x12\x57\x69\x50\x73\x38\xac\x5b\x99\xcb\x5a\x9c\xa5\x48\xf8\xe3\x91\xda\xb8\xd6\x95\x48\x68\xa3\x78\xc9\x8d\xb1\x60\x64\x5d\x35\xcb\x65\x48\x1c\x92\x23\x83\x46\x9c\xd9\x22\xf0\x06\x45\x45\xe3\xd8\x5c\xf2\xb9\x3f\x1c\x1a\xd4\x71\x6d\x9b\x07\x0d\x4a\xd7\x56\x27\x6c\x9c\x76\x38\x15\xfd\x80\x47\x54\xb4\xa9\xc2\x89\xc4\xa2\xba\x41\x87\xe6\xef\x44\xfb\xae\xe7\x51\x87\xf5\x38\x55\x82\xb2\xae\x72\x44\xe4\x4a\x9c\x38\xae\xa4\x21\x1b\xf8\x3c\x50\x75\x2b\x2c\xad\xb8\x73\xa0\x51\x2c\x2d\xa3\x2b\x85\x05\xae\x66\xaf\x90\xf4\x07\x82\x2b\x57\xa0\xf6\x08\x80\x55\xe0\x08\x6a\xe3\x44\x48\x54\x9f\x54\x2d\x7c\x76\x8e\x47\x59\xb8\x75\x96\x71\x6c\xf3\xb6\x1b\x24\x75\x8b\xfc\xd5\xc2\x0a\x1d\xb9\x71\x6b\xde\xbc\x15\x17\x1d\x16\x74\xf8\xa8\x0b\xf3\xd3\xcc\x6d\x51\x04\x6d\x17\x09\xd5\xaa\x01\x42\x26\x65\x5f\x44\xf6\xa8\x11\xfb\xf6\x5c\xa9\x75\x8e\xf1\x3e\x2d\x4c\x6e\xc1\x75\xb6\xe4\x7a\xdc\xb3\x51\xb6\x5b\x73\x15\x9e\x0d\xef\x92\x73\x52\xfd\x2c\xfd\x51\x8c\xac\xf6\xd5\xaa\xb6\x9c\x24\xd2\x84\x82\xe6\x46\xe5\x7a\xde\xe6\x16\x5f\x44\x37\xaa\x52\x5d\xb3\xd3\xcc\x35\x8f\x35\xbe\x57\xd2\xab\x22\x4c\xd2\x2c\xdc\x7c\x11\x28\x47\x1a\x8d\xe5\xf4\xb3\x6e\x65\x77\x6f\x6a\x6e\xb3\x01\x8c\x0f\xe3\xbf\x55\xd3\xea\xfe\xb3\xb9\xc7\x06\xab\x49\xd2\x79\x3e\xd8\x08\x01\x3d\xd2\xe3\xd1\x60\xac\xe6\xc5\xe0\x48\x87\xc5\xac\x51\xf6\x1f\xbd\xd9\x7c\x1e\xe4\x94\x62\x91\xa2\x87\xf1\x96\x63\x41\xec\xb4\x0e\x99\xab\x4c\x8c\x8c\xb5\x0d\x9a\xdc\x3b\xb9\xb4\x88\x2d\x9a\x95\xe1\x1f\x31\xfb\xb6\x72\xfe\x6d\x36\x03\xd7\xc7\xf3\x07\x1b\x87\xab\x4c\x98\x65\x8c\x05\x8c\x17\xd4\x3b\x9b\x56\xc7\x23\x9b\x47\x37\x9b\x32\xcc\xb6\x65\x6e\x38\xa1\xe5\x47\x66\x7f\xa3\xe9\x8b\xef\xb0\xff\xe7\x77\xda\x6d\xae\xe7\x96\x7f\xa3\xad\xf5\xc6\x5f\xf8\xea\xa9\x36\x43\x62\x91\xf4\x41\xa5\x11\x2a\x4d\x51\x1d\x3c\x71\x3c\xdd\x33\xcf\xe4\x79\x27\xbb\x79\xec\x42\x75\x1c\xc5\x71\x94\x8e\xe9\xe9\x73\xfb\xe9\x74\x8f\xd6\x16\xa8\xb9\xc4\x7c\x73\x99\x27\x4b\x2a\xf1\x84\x52\x32\xe5\xff\x2b\x48\xef\xac\xe5\x30\x9e\xd3\xe4\xbc\x6a\xe9\xf9\xb1\x8d\x73\x2c\xdf\x5c\x3f\x69\x4b\x39\x97\x52\x5e\xe1\x91\x2b\x6c\xf3\x50\xbe\xca\x1b\xa5\x3e\xea\x80\x3b\x97\x7d\x2d\x89\x9c\xfe\x66\x1b\xe5\x35\x8f\x24\x8f\xd8\xec\x85\x68\xb1\x0a\x4f\xa6\xef\xf4\xbc\x2b\xd5\x0b\x91\xab\x38\xde\x8a\x4b\x49\xd3\x96\x7b\x6a\xdd\xab\x95\x7a\x7b\xb3\x89\xb1\xc9\xb4\x38\x64\xdb\xa3\x49\x91\x1c\x4f\xd8\x16\xf9\xe3\xb2\x9d\x11\x32\xa5\xf0\xea\x0b\x86\x19\x1f\xdc\x3f\x37\x33\x4c\xf6\xca\xf9\xae\x1b\x71\x7b\x0b\x37\x17\x29\xb6\x15\xb2\xa3\xf9\x1a\x6f\x32\x68\xf3\x04\x27\x6c\x2d\x18\xae\x16\x96\xa8\xd7\x9f\x01\x00\x00\xff\xff\x23\xef\x86\xb0\x00\x30\x00\x00")

func assetsTemplatesFormsHtmlSwpBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesFormsHtmlSwp,
		"assets/templates/.forms.html.swp",
	)
}

func assetsTemplatesFormsHtmlSwp() (*asset, error) {
	bytes, err := assetsTemplatesFormsHtmlSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/.forms.html.swp", size: 12288, mode: os.FileMode(420), modTime: time.Unix(1490278271, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesStandingHtmlSwp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9a\x3d\x6c\x14\x47\x14\xc7\xc7\x96\x22\xc5\x49\x9c\x44\x49\x97\x6a\xb2\x71\x15\x25\xbb\x8e\x63\x29\x89\x75\x77\x92\x15\xcb\x96\xa5\x58\x8a\x2c\x39\x41\xa2\xb0\xc6\xbb\xef\xee\x16\x76\x66\xd6\x3b\xb3\x07\xab\x65\xa1\x00\x09\x0a\x0a\x97\x14\x14\x34\x54\x14\xb4\x08\x44\x85\x90\x68\x11\x05\x2d\x05\xee\x68\x28\xe9\x78\xbb\x7b\xe7\x2f\xc0\x36\x16\x02\x4e\xbc\x9f\xf4\xd7\xee\x9b\x7d\xf3\xde\xdb\x37\xb3\x96\xac\x9b\xb5\xc9\xff\x16\x97\xf8\x1f\xee\x34\x43\xbe\x65\xec\xc9\xe3\x47\xc7\x6e\x7f\xf6\xcb\xe8\x45\xce\x98\x14\xd6\x76\xe1\x14\x3b\x88\x05\x48\x6c\x36\x75\xa0\x1b\x3b\xdb\x0f\xe8\x19\x3f\x09\x63\x6b\xbc\x8e\x8e\x84\xea\x78\x26\xf1\xbd\x4e\x68\xbb\xe9\x9a\xeb\x6b\xe9\xf9\x3a\x80\xc4\xd7\xaa\xa7\x33\x2f\xd6\xfe\x49\xb0\x52\x2b\xc8\x3c\x61\x0c\xe0\x24\x0b\x32\x8e\x84\x05\xe3\x19\x2b\x54\x10\xaa\x8e\xdb\xb5\x32\x3a\x38\x3d\x41\x7c\xba\xa4\xb6\xfd\xeb\x9f\xe3\xec\xf7\xa9\xdf\x26\x4b\xf3\x27\xe7\x47\xfe\xfd\x77\x2b\x1f\xba\x2a\x82\x20\x08\x82\x20\x08\x82\x20\xde\x23\x36\x1e\x61\xe7\xf0\x3a\xda\xb7\x7f\xee\x5f\x47\xf6\x5c\x09\x82\x20\x08\x82\x20\x08\x82\x20\x08\x82\x18\x5e\x44\xc0\xd8\xcd\xcf\x19\x33\x63\xac\xfa\xfd\x7f\xf0\xff\xff\xe6\x37\x8c\x3d\x45\x3d\x44\xdd\x43\x5d\x45\x5d\x46\x29\xd4\x71\xd4\x34\xea\x07\xd4\xdd\xaf\x19\xbb\x84\x6a\xa1\x9e\x8f\x33\x76\x1d\x65\x51\x01\xca\x43\x6d\x7e\xc5\xd8\x15\x54\x07\xf5\x3f\xea\x1f\xd4\x0c\x8a\xa3\xee\x7f\xc9\xd8\x06\x6a\x1e\xf5\xe2\x0b\xc6\x1e\xa0\x6e\xa1\xce\xa3\xfe\x42\x3d\xc3\x9a\xee\xa0\x6e\xa0\xae\xa1\x36\x50\x17\x50\x67\x50\xf9\x58\x5d\x73\x55\x37\x41\x10\x04\x41\x10\xc4\xc7\x4d\x9e\x83\x0a\x8a\x62\xfb\x86\x23\x3b\xef\xf7\xda\x0d\x2f\x08\x7b\xad\xad\x47\x0d\xaf\xad\x13\xb9\x6d\x57\x63\xa1\x8a\x53\xcb\x6d\x16\x43\xd3\x31\xe9\x9a\x0c\xad\xc3\x7b\x22\x4a\xd1\xfc\x5b\x28\x1f\x22\x67\x9f\x09\x16\x4e\x6f\xbb\xfb\xb5\x3b\xef\x86\x41\x00\x8a\x27\x20\x02\xad\xa2\x8c\x2b\x21\xf1\xa9\xf0\x6d\xa8\xd5\xa1\x83\xe5\xb9\xbb\x38\x57\x14\x6f\x8a\x16\x06\x3b\x22\x35\xca\xd7\xe2\x75\x82\xa6\x93\x80\x89\xb5\x0a\x12\x58\x4f\xc1\x60\x40\x09\xb6\xab\x83\xa6\x13\x6b\xb4\x8e\xde\x8c\x45\x65\xc2\x5d\x01\xf6\xaf\x3f\xac\xdd\x87\xa4\x19\x98\x60\x3e\xd1\xd2\x5d\x31\x90\x94\x31\x8b\x82\x77\x85\xc1\x3c\x27\xc0\xb7\x10\xf0\x4c\xa7\x09\xef\x07\xe1\x98\x00\x27\x54\x47\x6b\xb9\x3b\x2b\x75\xaa\x2c\xfa\x87\xca\xea\x32\xce\x1c\xba\x14\x85\x5b\xef\x3f\xdc\x7e\xdc\x8f\x84\x31\x65\x25\x75\x09\x3b\x93\x42\x64\x80\xbf\x9b\xbd\xba\x5c\x95\x7a\xe8\x8e\xd6\x6f\x36\x2c\xcb\xf3\xb6\xcd\x98\xf5\x7d\x88\x5f\x69\x86\x81\x08\xdf\xb9\x5f\x54\x1b\x97\xdb\x69\xe5\xf9\xe0\x50\x34\x77\xda\x32\x5e\x95\x99\xf0\xfd\x72\x41\x8d\xc3\x27\xac\x8e\x8b\xa2\xe1\xd5\xd3\x0e\xdb\x0b\x51\xa7\x1e\x92\xc6\x62\x82\xe5\xda\x05\x92\xad\x3d\x5f\xdb\x01\x17\x3c\x16\x99\x04\x65\xb9\x6e\xbf\x66\xc3\x97\x1d\x2c\x3f\x8c\x23\xed\xfc\xb0\xcd\x61\x9d\xef\xfe\xe8\xf8\xc4\xbc\x04\xb9\xf5\x67\x3d\x11\xaa\x83\x63\x38\x7b\xf0\x85\x74\xa7\x5a\xff\x42\x75\x70\x9d\xf7\xab\x36\x0d\x0f\x07\x59\x15\x2f\xc2\x06\xf5\xbd\xf3\xbc\xbc\xe1\x33\x4d\xcc\x20\xa4\xbb\x00\x76\x29\x35\x76\x30\x07\x07\xeb\x3c\xe8\x86\x6b\x5c\xb9\xd5\x56\x39\x5e\xcf\xaa\x1d\x70\x2c\x80\x76\xa8\x70\x77\x44\x61\x0f\x56\x07\xe7\xe6\x1d\x7c\xf6\x32\x00\x00\xff\xff\x17\x8f\x66\x3a\x00\x30\x00\x00")

func assetsTemplatesStandingHtmlSwpBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesStandingHtmlSwp,
		"assets/templates/.standing.html.swp",
	)
}

func assetsTemplatesStandingHtmlSwp() (*asset, error) {
	bytes, err := assetsTemplatesStandingHtmlSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/.standing.html.swp", size: 12288, mode: os.FileMode(420), modTime: time.Unix(1490278374, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesUserhomeHtmlSwp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9a\x4f\x6b\xd4\x40\x14\xc0\xa7\x05\x6f\x56\x45\xef\x76\x8c\xa5\x42\x69\x33\xed\x56\x50\x6b\x76\x45\xd4\x8a\x42\xa5\x50\x2a\x82\x42\x99\x4d\xde\x6e\x62\x93\x4c\x9a\x99\xec\xba\x84\xd5\xa3\x07\xc1\xa3\x07\x3f\x81\x07\x8f\x7e\x04\x6f\x1e\x3d\x78\xd3\x83\x57\x3f\x82\x8a\x2f\x7f\x56\xb6\x75\xa1\x37\x45\x7d\x3f\xf8\x91\xbe\x79\x6f\xfe\xbc\x69\x2e\xa5\x69\x2f\xdf\xbd\xb5\xc1\x2f\xd8\xe7\x19\x72\x82\xb1\x17\x1f\xde\xdf\x7b\x73\x64\x71\xfa\x29\x67\x2c\x92\xc6\xf8\xd0\x67\x87\x71\x13\x52\x33\x68\x1c\x5a\xc6\x1e\xd7\x0b\x0a\xed\xa6\x41\x62\xb4\xe8\xaa\x50\xc6\x5d\xa1\x53\x57\x74\x03\xe3\x67\x6d\xdb\x55\x91\x70\x95\x07\xa9\xab\xe2\x9e\x1a\x88\x44\xb9\xbb\x60\x22\x15\xc3\x40\x48\xad\x01\x27\x19\x88\x92\x50\x1a\xd0\x22\xd3\x90\xfa\x2a\x02\xdb\x37\x51\x78\xf8\xf6\x04\xf1\xff\x92\x99\xce\xd2\xc5\x19\xb6\xda\x58\x59\x2e\xc2\xb3\xd6\x19\x7e\xea\xe4\xf6\x9f\x3e\x15\x41\x10\x04\x41\x10\x04\x41\x10\xbf\x11\x93\x4c\xb1\x27\xf8\x9c\xae\xe3\xd9\xfa\x39\x75\xe0\x49\x10\x04\x41\x10\x04\x41\x10\x04\x41\x10\xc4\xdf\x8b\xf4\x18\xfb\x74\x94\xb1\xfe\x0c\x2b\xff\xff\x3f\xfa\xfb\xff\xcb\x71\xc6\x3e\xa2\xef\xd0\xd7\xe8\x4b\xf4\x39\x1a\xa2\x1e\xea\xa2\xd7\xd1\x6b\xe8\x12\xba\x88\x9e\x43\xbf\x1f\xc3\x79\x68\x0f\x7d\x88\xb6\xd1\x07\xe8\x7d\xf4\x12\x3a\x8b\x9e\x46\xbf\xe1\x7e\x5f\xd1\xcf\xe8\x5b\xf4\x15\xfa\x6c\xa6\x3a\x47\x79\x16\x82\x20\x08\x82\x20\x08\x82\x20\x88\x7f\x83\x3c\x1f\x7d\xc6\xcc\xad\xb6\xd4\x60\x0d\x87\xfb\xc6\x3a\x69\xb4\x93\xc2\x5e\x06\xda\x58\xdc\x9e\x90\x74\xfd\x44\x6a\x3d\x39\xa7\x8d\x8c\xbd\x20\xee\x62\x96\x4f\x48\x27\x72\x50\xcd\xfb\x25\x23\x3d\x6f\x47\xba\xae\xca\x62\x33\xa1\x62\x6c\xd9\x72\xd5\xb9\x47\x2b\x2b\x7c\xad\xc9\xed\x2d\x30\xb7\x55\xbb\x2e\xc0\xec\x7a\x04\x51\x31\xd9\x11\x59\xd8\xc2\x42\x88\x3d\x0c\x39\x32\xfe\xb3\x13\x06\x2d\x47\x72\x3f\x85\x4e\xd3\x12\xbd\x00\xfa\x57\xb2\x58\x46\xd0\xc4\x95\x7b\xf6\xb6\x86\xb4\x88\x86\xc3\x79\xe9\x56\x43\x77\xca\xd0\x6a\x8d\x05\x8e\x90\xad\xf9\xb8\xad\x93\xcb\x79\x5e\x7e\x24\xce\x31\x75\xa3\xd8\xc2\x11\xb8\x7c\xbd\x67\xd0\xe1\xb0\xc7\xc7\x16\xe5\x73\xf5\x11\xf3\x3c\x95\x71\x17\xe3\xdd\x45\xcc\x97\xcd\xac\xcb\xc8\xde\x84\x34\x50\x9e\x7d\xb5\xba\x0a\x8d\x85\x4e\xd1\x09\x96\x8b\x85\x2d\x5f\xf5\xf9\x28\xb3\x20\x0e\x5e\x52\x18\xf4\x60\x67\xff\x4d\xfd\xbc\x01\xc7\x5f\xe5\x6e\x88\xbf\xb6\xa6\x15\x81\xd6\xb2\x0b\x45\x33\xf6\x06\xe8\xe2\xbc\xfe\x6a\x71\x57\x78\xd6\x6a\xa0\xa8\x6e\x8d\xf6\xa9\xb2\x8e\xdf\x68\x15\x2d\xf0\x4d\x9c\xca\xd7\xb0\xb3\xfa\xaa\x31\xdd\x28\x26\x97\x6d\x55\x5d\x8c\xfa\x9b\x33\x2a\x29\x47\x0e\xbc\x08\x3e\x48\xaf\x78\xe9\x7e\x04\x00\x00\xff\xff\x39\xcb\x55\x68\x00\x30\x00\x00")

func assetsTemplatesUserhomeHtmlSwpBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesUserhomeHtmlSwp,
		"assets/templates/.userhome.html.swp",
	)
}

func assetsTemplatesUserhomeHtmlSwp() (*asset, error) {
	bytes, err := assetsTemplatesUserhomeHtmlSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/.userhome.html.swp", size: 12288, mode: os.FileMode(420), modTime: time.Unix(1490278378, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesViewHtmlSwp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\xda\x41\x6f\xd3\x30\x14\x07\x70\x6f\x12\xc7\x15\x34\x6e\x9c\x4c\xc9\x71\x8b\x47\x01\x81\xa6\xb4\x08\x18\x45\x43\x4c\x1c\xa0\x88\x03\x42\x72\x93\xd7\x36\x5b\x62\x57\xb6\xdb\xad\x8a\x02\x47\x10\x1f\x83\x6f\xb2\x3b\x5f\x80\x8f\x00\xe2\x43\xf0\xe2\x26\x13\x70\xe9\x09\x26\xb4\xf7\x93\xfe\x4a\xeb\xf7\xfc\xec\xec\x36\x6d\xc3\x9d\x57\xfb\x07\xfc\x6e\x78\x9b\xa1\x2b\x8c\x7d\xba\xf6\xe5\xf5\xc9\xa5\xad\xf5\x0f\x9c\xb1\x5c\x3a\x37\x81\x63\xb6\xca\x13\x30\x6e\xd1\x59\xd9\xc6\xde\xd5\x03\x85\x8d\x4d\x3a\x75\x56\x8c\x75\x26\xd5\x58\x58\x13\x8b\x71\xea\x26\xb3\x61\x18\xeb\x5c\xc4\x3a\x01\x13\x6b\x35\xd7\x0b\x31\xd5\xf1\x11\xb8\x5c\x2b\x58\x08\x69\x2d\xe0\x26\x07\xf9\x34\x93\x0e\xac\x98\xa7\x70\x1c\x4e\x5c\x9e\xad\x3e\x9a\x90\x8b\x6d\xe6\x46\xdb\xf7\x36\x06\xb7\x3a\x37\x77\xaa\xaf\x37\xda\xd7\xf9\xd5\xcd\xc1\x79\xdf\x8a\x10\x42\x08\x21\x84\x10\xf2\x0f\xb9\xe9\x1a\x7b\x8f\xcf\xf5\xfa\xfb\x66\xfd\x5c\xfb\xe3\x49\x08\x21\x84\x10\x42\x08\x21\x84\x90\xff\x97\x4c\x18\xfb\xb6\xc1\xd8\x41\x8b\xf9\xbf\xff\x37\xbf\xff\x7f\xbf\xcc\xd8\x57\xcc\x29\xe6\x33\x66\x86\x79\x83\x79\x89\xd9\xc5\xdc\xc1\xfc\xc0\x3d\xa7\x98\x8f\x98\x39\x26\xc3\x8c\x30\x6f\x31\x83\xd6\x72\xe6\xb3\xd6\x79\xbe\x1d\x21\x84\x10\x42\x08\x21\x84\x90\xbf\xa1\x28\x0a\x50\x49\x59\xb2\x48\x38\x39\xcc\xa0\xc7\x7e\x59\x30\x3d\xc6\x11\x7e\x4a\x96\x9f\x2a\xbe\xce\xb7\xb1\xa3\x59\x89\x24\x9f\x18\x18\x75\xdb\xb1\x54\x31\x64\xd6\x49\x95\xa4\x6a\x7c\x3f\x4d\xba\x45\x11\xcc\xc3\xfd\xbd\xb2\x6c\xf7\x1e\xf9\x62\x24\x64\x3d\x14\x67\x16\x45\x3a\xe2\x41\x5f\xe6\x21\x16\x1f\x27\xa9\x7b\x51\x6f\xe5\xc1\x9c\x07\x87\xae\x3e\x63\xd9\x8a\x83\xfa\x46\xe7\x65\xe9\xaf\x73\xb6\xb6\x07\xd6\xfd\xb6\xe6\xff\xf1\x1c\x07\x84\x0f\x72\x3d\x53\x4d\x8d\x45\xd5\xdb\x14\x85\x91\x6a\x0c\x3c\x38\xda\xaa\x8e\xd8\xed\xf2\x20\x4b\xab\xfd\x58\x5e\xbe\x7d\x34\xe9\xf4\xce\x6e\xf1\xdc\x24\x60\x6c\x24\x70\x0d\xb7\xfa\xd6\x6a\x4f\x58\xdd\xb8\x9f\x66\x0e\x4c\xd3\xfa\x70\x31\xb0\x60\xb0\x92\x03\xde\xb0\x6a\x3e\xf4\xad\xd3\x0c\x4e\xf0\x4d\xac\x8f\xaf\xf2\xba\x6c\xfd\xa4\xa7\x7a\xc8\xdb\xfe\x07\xd6\x5e\xae\xe3\xe8\xe6\x08\xbf\x90\xc0\x28\x55\x50\xf7\xe0\x41\x55\xdb\xcf\x00\x00\x00\xff\xff\x47\x5d\x12\x56\x00\x30\x00\x00")

func assetsTemplatesViewHtmlSwpBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesViewHtmlSwp,
		"assets/templates/.view.html.swp",
	)
}

func assetsTemplatesViewHtmlSwp() (*asset, error) {
	bytes, err := assetsTemplatesViewHtmlSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/.view.html.swp", size: 12288, mode: os.FileMode(420), modTime: time.Unix(1490278241, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesFamilypageHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x53\x4d\x6b\xdc\x30\x10\xbd\xef\xaf\x18\x86\x1e\x36\xd0\x78\x9b\x0d\xb9\x04\xdb\x10\x42\x03\x39\xa4\x2c\x94\xfe\x00\xd9\x9a\x8d\x45\x2d\xc9\x95\x64\x92\xc5\xf8\xbf\x57\xb2\xbc\xfe\x82\xd2\xbd\xac\x2d\xbf\x99\xf7\xde\xbc\x51\xd7\x39\x92\x4d\xcd\x1c\x01\x56\xc4\x38\xf6\xfd\x0e\xfc\x2f\xad\xee\xf2\x17\x26\x45\x7d\x81\x13\x7b\xa7\x47\xe8\xba\xc4\xbf\x27\xf1\xec\x07\x93\xd4\xf7\xe9\xc1\x83\x22\xba\xad\xe3\x43\xd7\x19\xa6\xde\x09\x06\xec\x1b\xc9\x82\x8c\x1d\x3b\x0e\xb8\x5a\xe4\xd3\x4b\xc4\x27\xbf\x2c\x19\x35\xf4\x83\xdb\x5b\x7f\x50\xfc\xa4\x9a\x4a\x07\xc9\x89\x19\x52\x0e\x30\xfe\x23\xe0\x73\x25\xea\x20\x30\x2d\xcc\xba\xcb\x44\xbf\x6e\x1d\xa5\xec\xbf\x0c\x62\x4e\x64\x84\xe6\x03\xdb\x53\x59\xea\x56\x39\x0b\x13\xf7\xcd\x42\xe3\x52\xab\x97\x17\xad\xfa\x6e\x52\x2b\xba\x40\xf2\x5d\xf1\xe0\x7c\x6b\x24\x32\x52\xf8\xb8\x96\x76\x58\x6a\x9b\xeb\x96\xd8\x19\x13\x9c\x4d\xee\xba\x4e\x9c\x61\x3f\x88\x7f\xb5\xe3\x30\x92\x17\x49\xf2\xaa\x36\x3d\x6b\x23\x81\x95\x4e\x68\x95\x21\xe3\x5c\x0e\x03\x47\x90\xe4\x2a\xcd\x33\x6c\xb4\x75\x98\xc3\x6e\x16\xe8\x3b\xfa\x58\x56\x91\x54\xf7\x50\xd6\xcc\xda\x0c\x25\x59\xeb\xb3\xc6\x60\xdb\x83\x60\x48\xf8\x3e\xdf\xfd\xcb\x5f\x5a\x1d\xf3\x27\xce\x61\xdc\x93\x18\xb7\x2f\x39\xce\x25\x61\x7a\xf0\x08\xa9\x50\x4d\xeb\xc0\x5d\x1a\xca\xd0\xd1\xa7\x4f\x33\x8c\x3d\xc3\x76\x0c\x00\xe7\x92\x57\x0b\xd1\xec\xa6\xac\xac\xa8\xfc\x5d\xe8\xcf\x6b\x69\x13\xd7\x22\x5f\x6d\xc3\xc9\x1b\xf9\xd0\x86\x6f\x39\x9b\xf1\x1c\xa1\x61\xce\x79\xce\x0c\x93\xee\xe1\xeb\xf1\x5b\x8f\x60\xe8\x4f\x2b\x0c\xf1\x6b\xdf\x0f\x7e\xb7\xe9\xba\x7f\x13\x4a\xc8\x56\xc2\x03\xd4\x14\xca\xed\xcd\xea\xfb\xb3\x56\x67\xe1\xa3\xf8\x3f\xfb\x44\x71\xdc\x50\xac\xf0\xb6\x2d\xa4\x70\xe3\x4c\xd2\x43\x88\x79\xbd\x35\xcb\x5b\x5b\x30\x4b\xe1\xd6\xfe\x0d\x00\x00\xff\xff\xc7\x53\xf5\xaa\xca\x03\x00\x00")

func assetsTemplatesFamilypageHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesFamilypageHtml,
		"assets/templates/familypage.html",
	)
}

func assetsTemplatesFamilypageHtml() (*asset, error) {
	bytes, err := assetsTemplatesFamilypageHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/familypage.html", size: 970, mode: os.FileMode(420), modTime: time.Unix(1490271959, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesFormsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x56\xcd\x6e\xe3\x36\x10\xbe\xfb\x29\x06\x44\x0e\x2d\x10\x28\xce\xb6\x40\x01\xc3\x16\x10\x78\xd7\xa7\x26\x6b\x6c\xb7\xe8\xd1\x60\xcc\x71\x24\x44\xfc\x29\x49\xd9\x15\x04\x3f\x4d\xdf\xa4\x4f\xd6\xa1\x7e\x6c\xc9\x76\x6c\xb7\x08\x7a\xe8\xfa\x60\x89\xe4\xcc\xc7\x6f\xbe\x19\x0e\x55\x96\x02\x57\xa9\x42\x60\x2b\x2b\x17\x5c\x88\x05\x5f\x2e\x75\xae\x3c\xdb\x6e\x07\x40\xbf\xf1\x4a\x5b\x09\x7c\xe9\x53\xad\x26\x8c\x0c\xda\x75\x90\xe8\x13\x2d\x26\xcc\x68\xe7\x59\x5c\x1b\x27\x3f\xc4\x0f\x42\xc0\x43\x6d\x33\xbe\xa3\x71\xbd\x90\x2a\x93\x7b\xf0\x85\xc1\x09\xf3\xf8\x07\xb9\x2b\x2e\xe9\x3d\x77\x68\xc3\x1b\x03\x8b\x5c\x68\x95\x15\xb0\xe6\x59\x4e\x2b\x65\x19\xcd\x24\xca\xed\x96\x41\x92\x0a\x81\xea\x02\x52\xc3\xab\x06\x33\xdc\x7b\x02\x9e\xb0\xa8\xfc\xf1\xf6\xc3\x70\x1b\xe0\x7f\xcf\x53\x8b\xe2\x04\x8a\xcb\x9f\x65\x4a\x38\x01\x6d\xc2\x88\x3f\x6b\x39\x84\xf7\xc6\xe1\x2e\xe8\x10\x0f\xca\x12\x95\x20\x69\x06\x1d\xe1\xa4\x59\xc8\xa2\xd9\xde\xb5\xba\x85\x5f\x59\x5a\xae\x5e\x10\x6e\x5e\xe1\x16\x6e\xd6\x30\x9a\xc0\x77\xd1\x8c\xcb\xe8\xe7\xd4\xf9\xdf\x6c\xea\x91\x84\x42\xe7\xa0\x8a\xf4\xfb\x8e\xe7\x58\x9b\x20\xf8\x5e\x8b\x9b\x75\xf4\x6b\x23\xd5\x76\x3b\xaa\xc6\x4f\xd5\x3b\x8b\xcf\x2c\x8e\x02\x07\xa9\x15\x16\xb4\x7d\xf4\x29\x30\x1f\xdf\xd5\xd0\x71\x87\x65\x1d\xd2\xfe\xd9\x8d\x8c\x67\xd9\xf9\xd0\x6e\xeb\xc0\xaa\xb8\xe6\x68\x53\x2d\xa2\x26\xfd\xee\xfd\x03\xfa\x17\xec\x43\x85\xed\xa8\x77\x68\x43\x87\xf7\x23\xca\x67\xb2\x6a\x4b\xfe\x2c\xd7\x23\x7e\x7d\x4e\x87\x7c\x7a\x95\x42\x47\xcc\xf0\xe2\xf4\xd1\x0a\x0b\xa7\xce\x54\x7b\xae\x1e\xf9\x2b\x02\x87\x39\x2f\x24\xbe\xfb\xd1\x02\xa8\xb0\x66\x56\xcb\x11\x8c\x1d\x66\xb8\xf4\x0d\xcc\x8a\xe6\x42\xcc\x1e\xa5\xc9\xb8\x3f\x2e\x78\x88\x82\x06\xb5\x4f\x4d\xe9\xab\x3e\x04\xf1\xfa\x18\xa2\x5b\x59\x3d\x8c\xf1\xb3\xad\x71\x1e\x64\x58\xa5\x22\xfe\xeb\xcf\x5e\x94\x2a\x0f\xe9\x62\xe0\x3c\x9a\x09\x1b\x46\xc3\x7b\x52\x2e\x25\x0d\x87\xbb\x66\x50\x79\xb2\x3d\xd4\x3c\xb7\xa4\x29\x8e\xce\xe8\x65\x6a\x93\x8e\xd3\x85\x4e\x41\xa9\x80\x27\xbd\xd9\x75\x8b\x76\x7c\xb9\x63\x50\x1d\x38\xcf\x95\x48\xd5\xcb\x9b\x7d\x76\x67\x70\x45\x51\xfc\xd2\xd8\xc2\x67\x2b\xd0\xee\x6b\xe3\x1d\x73\xfa\x7f\xc9\x6b\xe5\x45\x7a\x59\x0f\x1f\x89\xf2\xa8\xef\x27\x68\xaa\xf5\x73\xc1\x88\xed\xcf\x4c\x58\xfb\x32\x9b\x86\x0e\xb0\xdb\xfe\x6b\x82\x0a\x3e\xad\xd1\x16\x07\x40\x6d\x28\x15\xfd\xfb\x16\x52\x60\x16\x4e\x79\x03\xf9\x53\x5b\x29\x3d\x49\x2b\x9b\x45\x40\xe9\xe6\xba\xdf\x92\x04\x2f\x1c\x8b\x3f\xd2\xff\x71\x43\x3c\x30\xa5\xee\xef\x13\x32\x7e\xac\x9e\x7d\xf3\xe3\xcc\x5c\x53\xf6\x53\x6a\x27\x41\xa5\x66\x83\x66\x78\x55\xd1\x2f\x13\xc3\x5d\xd5\x8c\xfb\xe5\xde\xcc\xbf\xf5\x49\x31\x4d\xaa\xa6\x3d\x27\x9b\x8d\xb6\x62\x5f\xdf\x9f\x33\xb1\x9b\x85\x83\x0c\x98\x66\xbe\xd5\x5e\x67\xc2\x6c\x44\x27\x77\x4f\xb8\x01\x73\xa5\x33\x79\xde\x77\x5c\xa7\x5a\xad\x52\xe2\x7f\xd9\xeb\x43\xc7\xeb\x9c\xa6\x55\x84\x7b\x4d\xeb\x61\x3c\xb8\xa0\x67\xf8\xa8\x41\xe7\x8f\x05\x95\xd4\x17\xda\xc5\x93\xaa\xfe\xa3\xab\xe7\x4b\x8d\x74\xea\xf6\xa9\x4c\x4c\x4c\xe7\x00\xf4\x46\xa1\x05\xbd\x02\x4f\x03\x87\x75\x43\x6a\x3a\x01\x6c\xd2\x2c\x83\x84\xaf\x11\xbc\x06\x9e\xd3\x56\x36\x75\x34\x48\x52\x47\x49\x68\x40\xcd\x7f\x77\xa3\x05\xa8\x93\xad\xab\xfe\x5c\xf8\x66\xef\xb4\x36\xd5\x97\xef\xb5\xc3\xd2\xfc\x3b\x00\x00\xff\xff\xc1\x14\xb4\xc1\x4a\x0c\x00\x00")

func assetsTemplatesFormsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesFormsHtml,
		"assets/templates/forms.html",
	)
}

func assetsTemplatesFormsHtml() (*asset, error) {
	bytes, err := assetsTemplatesFormsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/forms.html", size: 3146, mode: os.FileMode(420), modTime: time.Unix(1490274733, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\xcd\xce\x9b\x30\x10\xbc\xf3\x14\x2b\x9f\x5a\xa9\xcd\x0f\x52\x2e\x15\x20\x55\x51\x7b\x0a\x55\x2e\x7d\x00\x03\x4b\xb1\x8a\x6d\x6a\x9b\xa6\x11\xe2\xdd\x6b\xc7\x90\x90\x84\x34\xcd\x97\x13\xbb\x9e\x19\xaf\x66\x36\xee\x3a\x83\xbc\xa9\xa9\x41\x20\x15\xd2\x82\xf4\x7d\x00\xc3\x2f\xaa\xd6\xc9\x5e\xe6\x3f\xd1\x40\x2a\x05\x1e\xa3\xa5\x6d\x04\xe7\xe3\xae\x63\x25\x2c\xa6\xf8\x2c\xe9\xba\x45\x8a\xba\xef\xa3\x65\x96\x4c\x80\x28\x0a\x8b\x0b\x2e\xdc\xa8\x94\x8a\x03\xcd\x0d\x93\x22\x26\xb5\xfc\xc1\x04\x01\x8e\xa6\x92\x45\x4c\x1a\xa9\x0d\xb9\xd0\xfd\x28\x61\xb2\x73\x28\x3b\x43\x78\x7d\xf4\x95\x72\x56\x1f\x3f\x41\xc4\x44\xd3\x1a\x30\xc7\x06\x63\x62\xf0\x8f\x21\x20\x28\xb7\xdf\xe5\x09\x40\xe0\x37\xad\x5b\x5b\xda\x11\x3d\xa5\xef\x49\x12\x65\xea\x5a\x2d\x45\x9e\xa1\x82\x6f\x96\x09\xff\xd0\x6c\x35\x2a\xf7\x35\x55\xfd\x3e\xf4\x66\x75\xf7\x54\xeb\x83\x54\xc5\xad\x68\x33\xf4\x47\xe1\xe6\x50\xcc\xb0\xaf\x28\xba\xcd\x38\xb3\x93\xb8\x79\x62\xb2\xf3\xde\x0d\x63\xf8\xea\x42\x8e\x96\xce\xe8\xe4\xa1\xf3\x02\x0f\xa3\x3d\x4f\xdc\xdf\x2a\x74\x4b\xe2\xad\x83\xcf\x79\x2e\x5b\x61\x1e\xa5\xf1\xd4\x3f\x7f\xe9\xc9\xc1\x99\x0c\x28\x13\xe0\xdc\xfc\xaf\x04\xee\xf9\x5f\x38\x65\xf5\x2d\x17\x5d\x73\x24\xfb\xe2\x2d\x29\x35\xd4\x18\x7b\x71\x4c\x16\xdd\xe6\x43\xb8\xea\x09\x28\xfc\xd5\x32\x85\x05\x18\x66\x6a\x8b\xdd\x7c\x0c\x57\x90\x57\x54\x59\x8f\x51\xe9\x49\xb0\xeb\x99\x1b\xdf\xa5\x4c\x30\xde\x72\xd8\x40\x8d\x4e\x5a\xbf\xbf\xc3\x6c\xa5\x28\x99\x0d\xed\x85\x1d\x0a\x5f\x5b\x22\x1f\xee\x79\x8b\x86\x72\xf2\x5f\x1f\xf7\x68\xfa\x5c\x64\x54\xa3\x7d\x2e\x46\x48\xf0\x37\x00\x00\xff\xff\xdf\x16\x24\x30\x4b\x04\x00\x00")

func assetsTemplatesIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIndexHtml,
		"assets/templates/index.html",
	)
}

func assetsTemplatesIndexHtml() (*asset, error) {
	bytes, err := assetsTemplatesIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/index.html", size: 1099, mode: os.FileMode(420), modTime: time.Unix(1489069089, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesLayoutHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x51\x3d\x73\xb3\x30\x0c\xde\xf9\x15\x7e\xb5\xbf\xf5\xda\xc1\x78\xe9\xc7\xd4\x5e\x18\xb2\x74\x54\x40\x04\x5f\x8c\x9d\x43\xa2\x57\x8e\xcb\x7f\xaf\xc1\x6d\x43\x87\xc6\x8b\xbe\x9e\x47\x96\xf4\xcc\x73\x43\xad\x0b\xa4\xa0\x23\x6c\xe0\x72\x29\xcc\xbf\xc7\xdd\xc3\xfe\xad\x7a\x52\x9d\xf4\xde\x16\x26\x1b\x95\x9e\x59\x30\xd9\x5d\xc3\x9e\x04\x55\xdd\xe1\xc0\x24\x25\x8c\xd2\xfe\xbf\x87\x4d\xd9\xbb\x70\x52\x03\xf9\x12\x58\x26\x4f\xdc\x11\x09\x28\x99\xce\x54\x82\xd0\x87\xe8\x9a\x19\x54\x37\x50\x5b\x82\x66\xdd\xa3\x0b\x77\x4b\x6a\xd3\x42\x9c\x78\xb2\x55\xac\x4f\x24\xea\x35\x06\x9a\x8c\xce\xb9\x3c\x90\xbe\x4e\x64\x0e\xb1\x99\x36\xd4\xc6\xbd\xab\xda\x23\x73\x09\x3d\x85\x71\xd3\x75\x2d\xe3\xf7\xc7\x2d\xf6\xce\x4f\x60\x9f\x57\x6b\x34\xfe\x05\x3c\xd3\xc0\x31\xa0\x07\x5b\x7d\x79\x37\xc0\x32\x60\x60\xac\xc5\xc5\x90\x16\xda\x6f\xa2\x1b\x24\x1f\x8f\x71\x14\xb0\x2f\xf1\xa8\x76\xa3\xfc\x42\x1a\x9d\x16\xb2\xc5\x3c\x53\x68\x92\x4a\xe9\x5d\xa5\x3b\x20\xd3\x22\x5d\xc6\xe5\x3b\xa4\xd3\xac\xba\xfd\x10\x3e\x03\x00\x00\xff\xff\x7a\x8a\x17\xb6\xea\x01\x00\x00")

func assetsTemplatesLayoutHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesLayoutHtml,
		"assets/templates/layout.html",
	)
}

func assetsTemplatesLayoutHtml() (*asset, error) {
	bytes, err := assetsTemplatesLayoutHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/layout.html", size: 490, mode: os.FileMode(420), modTime: time.Unix(1488553008, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesNewaccountHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xe2\xb2\x81\xd0\x0a\x40\x60\x93\x91\x9a\x98\x02\x61\x82\xb9\x25\x99\x25\x39\xa9\x76\x1e\xa9\x39\x39\xf9\x36\xfa\x10\x0e\x42\x32\x37\xb5\x24\x51\x21\x39\x23\xb1\xa8\x38\xb5\xc4\x56\xa9\xb4\x24\x4d\xd7\x42\x09\x6a\x8c\x3e\xc2\x1c\x9b\xa4\xfc\x94\x4a\x24\x5d\x19\x86\x76\x7e\xa9\xe5\x0a\xa1\xc5\xa9\x45\x40\x65\x86\x08\x99\xea\xea\x82\xa2\xcc\xbc\x92\x34\x05\x25\xd5\x62\x25\x05\xbd\xda\x5a\xa8\x51\x10\xfd\x40\xb5\x10\xd7\x02\x02\x00\x00\xff\xff\xd6\x4d\xae\x17\xbf\x00\x00\x00")

func assetsTemplatesNewaccountHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesNewaccountHtml,
		"assets/templates/newaccount.html",
	)
}

func assetsTemplatesNewaccountHtml() (*asset, error) {
	bytes, err := assetsTemplatesNewaccountHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/newaccount.html", size: 191, mode: os.FileMode(420), modTime: time.Unix(1488373318, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesNewuserHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xe2\xb2\x81\xd0\x0a\x40\x60\x93\x91\x9a\x98\x02\x61\x82\xb9\x25\x99\x25\x39\xa9\x76\x1e\xa9\x39\x39\xf9\x36\xfa\x10\x0e\x42\x32\x37\xb5\x24\x51\x21\x39\x23\xb1\xa8\x38\xb5\xc4\x56\xa9\xb4\x24\x4d\xd7\x42\x09\x6a\x8c\x3e\xc2\x1c\x9b\xa4\xfc\x94\x4a\x24\x5d\x19\x86\x76\x7e\xa9\xe5\x0a\xa1\xc5\xa9\x45\x40\x65\x86\x08\x99\xea\x6a\xbd\x50\xbf\xc4\xdc\xd4\xda\x5a\x9b\xa4\x22\x24\x0d\x89\x0a\x19\x45\xa9\x69\xb6\x4a\xfa\x40\x6d\x8e\xc9\xc9\xf9\xa5\x79\x25\x4a\x60\x23\xa0\x1c\x1b\xfd\x44\x98\xad\x10\xab\x80\xc6\x42\x3c\x06\x08\x00\x00\xff\xff\xa6\xb7\x94\xc4\xea\x00\x00\x00")

func assetsTemplatesNewuserHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesNewuserHtml,
		"assets/templates/newuser.html",
	)
}

func assetsTemplatesNewuserHtml() (*asset, error) {
	bytes, err := assetsTemplatesNewuserHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/newuser.html", size: 234, mode: os.FileMode(420), modTime: time.Unix(1488373372, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesStandingHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x53\x4d\x6b\x1b\x31\x10\xbd\xe7\x57\x0c\xa2\xe7\x35\xf4\x58\xd6\x86\xd0\x90\x92\x43\xa1\x04\x7a\x0e\xea\x6a\x36\x56\xd1\x57\xa4\x59\xd3\x65\xd1\x7f\xef\x68\xb5\xeb\x38\x25\x0d\x0e\xe4\x62\x5f\x2c\x8d\xe6\xbd\x37\x7a\xfb\x34\x4d\x0a\x7b\xed\x10\x84\xd1\x07\x7c\x48\x24\x9d\xd2\xee\x51\xe4\x7c\x75\x35\x4d\x9f\x6e\x2d\x5a\xf8\xb2\x85\xa6\x2c\xb8\xc6\x25\xf2\x61\xae\xd4\x5d\xc4\xa7\x7a\x2e\x6d\xf3\x0d\xe9\xfb\x90\xe8\x1e\x9f\x06\x4c\x94\x4e\x40\xba\x07\x83\x0e\x4a\x37\xef\x81\x7f\xed\xfe\xf3\xee\x07\xce\x5a\xb0\x02\xda\x0d\x17\xe7\xd3\x69\x8a\xd2\x3d\xe2\x29\xa0\x96\x99\x88\x05\x9b\xdb\xe8\x6d\xf3\x33\x61\x74\xd2\x72\xd7\xa2\x33\xf3\x2a\x7d\x80\xce\xc8\x94\xb6\x22\x56\x5e\xb1\x3b\x21\x68\x16\x31\x8c\x39\xc3\x5e\x26\x58\x9a\x50\x81\x84\x20\x47\x8b\x8e\xc0\xf7\xdc\x69\xbd\xc3\x11\x9a\x6b\xeb\x07\x47\xdc\xdc\xb3\x26\x8c\x7e\x00\xed\xc8\x17\xa6\x1b\x86\xe5\xdc\x1c\xc9\xdb\xde\x47\x0b\xb2\x23\xed\x5d\x11\x4f\xc1\x3b\xb5\xce\x00\x16\x69\xef\xd5\x56\x04\xff\x62\xa2\x19\xa8\x5d\x18\x08\x68\x0c\xb8\x15\x84\x7f\xb8\xfb\x20\xcd\xc0\x1b\x56\xb9\xbb\xc9\x59\xc0\x5e\x2b\xc5\x06\x46\x94\xca\x3b\x33\x42\xb9\xf7\x56\x68\x75\x36\x93\xec\x3a\x0c\xf4\x3f\xa2\x3a\xf4\xbf\x64\x09\x0d\x76\xb4\xb4\x94\xeb\x8b\xdd\x34\x11\xda\x60\x24\x71\x60\x7a\x1b\x1e\xec\xc8\xc4\xc5\xa0\x24\xa0\x24\x23\xe7\x76\x53\x61\x6f\x0c\x96\x86\x5f\x56\x3f\x8f\x76\x5d\x47\x7b\x06\xb4\x9b\xe2\xe4\xee\x32\x8c\x8d\xf8\x9b\x6f\xfb\x3e\x63\xdf\x30\xe3\xbe\xd2\xbd\x6e\x46\xbb\xe1\x74\x9f\xa6\x19\x4d\x42\x38\x37\xf9\x2f\x1e\xcd\x31\xfd\x45\x8e\xc3\xcf\xc1\x8e\xeb\x5b\x00\x56\x7c\xe5\x01\x5c\x64\xee\xb5\x4b\x3a\x7d\xdc\xe7\xb9\xab\x74\x17\x9a\xd5\x4e\xba\x0e\xcd\x87\x99\xf1\xb5\xd2\x9d\x9b\x55\xa7\x96\xa4\xae\xeb\xf5\xff\xb8\xf8\x1b\x00\x00\xff\xff\xde\xa0\x6f\x8d\x8d\x06\x00\x00")

func assetsTemplatesStandingHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesStandingHtml,
		"assets/templates/standing.html",
	)
}

func assetsTemplatesStandingHtml() (*asset, error) {
	bytes, err := assetsTemplatesStandingHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/standing.html", size: 1677, mode: os.FileMode(420), modTime: time.Unix(1490278382, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesTransactionsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x8f\xcd\xaa\xc2\x30\x10\x85\xf7\x79\x8a\x50\xba\xbc\xa4\x70\x97\x97\xdc\x80\x20\x5d\x77\xe1\x0b\x4c\xcd\x60\x8b\x4d\x52\x92\x69\x41\x42\xde\xdd\xa9\x22\x2a\x9a\x45\x60\xce\x37\x3f\xe7\xe4\x4c\xe8\xe6\x09\x08\x65\x35\x20\xd8\xaa\x14\xa1\x87\x5f\x73\x88\xe0\x13\x1c\x69\x0c\x3e\xe9\x86\x05\xa1\x09\xfa\x09\x8d\xc8\x99\xd1\x09\x65\x7d\xfe\xa9\x57\xf9\xf7\x2f\x55\x0b\x4e\x75\x18\xc7\x60\xd5\xeb\x98\xdc\x56\x51\x34\x42\xf2\xd3\x64\x4d\xce\xf5\xaa\xda\x18\x5c\x29\xba\xe1\xfa\x1d\xec\x31\xd1\x27\x70\xc1\xe3\x45\x32\xde\xb9\xb0\xf8\x2f\x0d\x8c\xba\x25\xce\x21\xe1\x83\xf1\xcf\x47\xd9\x27\x7a\x7b\xb3\x70\xf7\xbd\x29\xcf\xac\x3d\x24\xdc\xb2\x5e\x03\x00\x00\xff\xff\x71\x3a\xcc\xd7\x00\x01\x00\x00")

func assetsTemplatesTransactionsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesTransactionsHtml,
		"assets/templates/transactions.html",
	)
}

func assetsTemplatesTransactionsHtml() (*asset, error) {
	bytes, err := assetsTemplatesTransactionsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/transactions.html", size: 256, mode: os.FileMode(420), modTime: time.Unix(1489659020, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesUserhomeHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x52\xc1\x6e\xc2\x30\x0c\xbd\xf3\x15\x51\x84\x38\xa0\xa9\x15\xe3\xc6\xd2\x4e\x3b\x6c\x87\x49\x9b\x90\xd0\xce\xc8\xb4\x86\x56\x6b\xd2\xd2\xa4\x30\x14\xf5\xdf\xe7\xa4\x2d\x30\xc1\xb8\x80\xfd\x9e\x5f\xde\xb3\xb1\xd6\xa0\xac\x0a\x30\xc8\x78\x86\x90\xf2\xb6\x1d\x59\x3b\x36\x65\xc5\x16\x11\x0b\xba\xea\x4d\xa2\xf4\xa5\xfb\x41\x2d\x91\x3d\xc6\x5f\x1a\x6b\xb6\x84\x1d\xb2\x05\xb3\xb6\x47\x44\x48\x08\xc1\xf3\xf8\x25\x49\xca\x46\x19\x4d\x9d\x79\x4c\x1a\xf9\x96\x05\x1f\xa8\xfd\xf0\x9c\x25\x05\x68\x1d\x71\x89\x5a\x93\x02\x8f\x49\xc0\x83\x03\x1b\x55\x4a\xcc\xd1\xb5\xb9\x22\x3f\xe0\x5a\x1b\x50\x69\xae\x76\xdc\x3b\x23\x3c\x9c\xae\xb2\xf2\xc8\x86\xd7\xa6\xa1\x6b\x8b\xa6\x70\x22\x35\x28\x72\x37\xfe\x7e\x60\xe3\x43\xe7\x1e\x64\xb0\xc4\x3a\x2f\xd3\x60\x18\x20\x3a\xa3\x8f\xf7\x87\x7b\x22\x06\x2e\x97\x02\x49\x83\x7d\x58\x87\x8b\x22\x8f\x05\xb0\xac\xc6\x6d\xc4\xc3\x43\x8e\xc7\xe7\xc6\x91\x22\x5a\xce\x65\xa4\x6d\x27\x90\x74\xad\x4f\x5f\xba\x60\xe7\x42\x84\x10\x4f\xd4\x46\x57\x4f\xd6\xca\x52\xe1\xc9\xbd\xf6\xea\x82\x8a\x90\xe4\x7b\x1f\x5d\xf2\xe1\x5b\x84\x2e\x8a\x3b\xc1\xcf\x6c\xe6\x33\xac\xd0\xbc\x97\x1b\xc6\xfd\x26\xf8\xf9\x22\xd7\x9b\xba\x59\xd2\x05\xda\xd6\x72\x0d\x69\xba\x86\x2e\xfe\x3f\x8c\x0a\x4e\xbc\x3f\xfd\x5f\xe0\x4a\x99\xdd\x81\x93\xac\xa2\xb3\xde\x1f\xad\x71\xdf\xa0\x36\xb7\xe0\x06\x34\xba\x3f\xdd\x6f\x00\x00\x00\xff\xff\xed\x18\x2b\x53\x89\x02\x00\x00")

func assetsTemplatesUserhomeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesUserhomeHtml,
		"assets/templates/userhome.html",
	)
}

func assetsTemplatesUserhomeHtml() (*asset, error) {
	bytes, err := assetsTemplatesUserhomeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/userhome.html", size: 649, mode: os.FileMode(420), modTime: time.Unix(1490278378, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesViewHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x90\x51\x4f\xc3\x20\x14\x85\xdf\xf7\x2b\x6e\x9a\x3e\x2a\x4d\x7c\x34\x14\xa3\x9b\x4d\xf4\xc5\x07\xe3\x0f\x60\xe3\x76\x63\x16\x6a\x00\x17\x17\xd2\xff\xee\xa5\xd0\x66\x24\x6d\xc3\x39\x87\xef\xf4\x12\xa3\xc2\x5e\x5b\x84\xca\x07\x69\x95\xb6\xc7\x6a\x9a\x36\x31\xd6\x9d\x34\xf0\xd8\x02\xa3\x6f\x16\xce\x7e\xde\xbf\x8f\xfb\x92\x2d\xc1\x73\x48\xfa\xcf\x80\x7f\x90\x32\xe9\x61\x9d\x41\x03\xd9\x1e\xb4\x0f\x0b\x88\x75\x7a\x08\xe8\x3e\x4b\xd3\xcb\xf5\xcb\xa3\xcb\x69\x0a\xf3\xd3\x83\x58\x2c\xf8\x70\x0a\x9d\xe7\x0d\x69\x1b\x1e\xe4\x7e\x40\x41\x34\x27\xed\x11\xa1\xfe\xbe\x83\xfa\x92\xa0\x33\x3d\x1d\x0d\x4e\x6c\x80\x16\x0f\x4a\x50\xe9\x85\x75\x6e\x24\x26\x6f\x68\xbf\x6a\x3b\x4c\xe1\x1b\xcd\x8c\x16\xaf\x84\x62\xcf\x66\xfc\xb5\x8b\x77\x03\xd2\x3d\xa4\x8b\x60\x5b\x69\x5f\x95\x0e\xeb\xdf\x51\x3b\xcd\x4d\xc5\x50\x16\x97\x70\x72\xd8\xb7\xd5\x41\xda\x03\x0e\xcb\x5d\x3e\x69\xd5\xce\xd5\x6f\xbb\x69\xaa\xc4\x76\x36\x79\x23\xc5\x7a\x30\x46\xb4\x0a\xee\x0b\x2a\xf7\xd3\xdb\xa5\x69\xc9\x49\xb3\x35\xeb\xf8\x59\xf8\x0f\x00\x00\xff\xff\x2a\xd6\x03\x2f\xb3\x01\x00\x00")

func assetsTemplatesViewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesViewHtml,
		"assets/templates/view.html",
	)
}

func assetsTemplatesViewHtml() (*asset, error) {
	bytes, err := assetsTemplatesViewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/view.html", size: 435, mode: os.FileMode(420), modTime: time.Unix(1489771146, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesViewacHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x52\x5d\x6b\x83\x30\x14\x7d\xef\xaf\x08\xe2\xc3\x06\xc3\x42\x1f\x47\x26\x14\x46\x61\x63\x6c\x63\x74\x3f\x20\xea\x6d\x95\x99\xc4\x25\x71\x30\x82\xff\x7d\xf7\x46\x5b\xad\x96\xf9\xe2\xf5\x9c\x73\xcf\xfd\xf0\x7a\xef\x40\x36\xb5\x70\xc0\xa2\x12\x44\x11\x75\xdd\x8a\xe1\xe3\x7d\xec\x74\xc3\xee\x1f\x58\x32\x22\x22\x0f\xc0\xb3\xce\x58\x24\x72\x92\xf2\x72\x93\x06\xa2\xeb\xf8\x1a\xe3\x15\x77\x22\xab\x21\x0d\x19\xdc\x99\x3e\xe8\x3f\xca\xf4\xa3\x55\xaa\x52\x47\xbe\xc6\xf8\x82\x78\x7a\x5d\x62\x6f\x9f\xfb\x2b\xa0\x2b\xc1\x2c\xe1\xf7\xd6\x34\xda\xc2\x48\x60\x34\xd4\xc6\xee\x5e\x2a\xeb\x42\xe3\x3b\x21\x93\x6d\x9e\xb7\xb2\xa5\x81\xf7\x46\x28\x2b\x72\x57\x69\x65\x59\x18\x61\x48\x40\xfc\x08\x2c\xfe\xba\x63\xf1\x0f\xe5\x05\x83\x81\x9d\xcd\x54\xa4\x3c\xc3\x05\x48\xad\xe0\x17\xd5\xc9\xf6\xe0\xc0\xd0\x2e\xb2\x14\x5b\x28\x46\xa9\xf7\xd5\x81\xdd\xc0\xf7\x86\x2a\x91\x72\x67\xb4\xbc\x1d\x4c\xcf\x5e\x94\x42\xc1\xd4\x51\xea\x56\x39\xb2\x3c\x73\x88\x3e\x82\x3d\x61\x93\x12\x50\x5b\x98\x59\xfe\xe7\x74\x69\x49\x0d\x5d\xb1\x54\xc5\xc2\x11\xc5\xc3\xc2\xe7\xfa\x9e\x2f\xe8\x9a\xa8\x49\x7c\x9f\x14\x8b\xbf\xd2\x1b\x23\xd2\xdf\xcb\x6a\x7a\x88\x99\xb0\x40\xd7\xf5\x17\x00\x00\xff\xff\x60\xe4\x1a\x0d\x9d\x02\x00\x00")

func assetsTemplatesViewacHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesViewacHtml,
		"assets/templates/viewac.html",
	)
}

func assetsTemplatesViewacHtml() (*asset, error) {
	bytes, err := assetsTemplatesViewacHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/viewac.html", size: 669, mode: os.FileMode(420), modTime: time.Unix(1489660347, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/s/main.css": assetsSMainCss,
	"assets/templates/.forms.html.swp": assetsTemplatesFormsHtmlSwp,
	"assets/templates/.standing.html.swp": assetsTemplatesStandingHtmlSwp,
	"assets/templates/.userhome.html.swp": assetsTemplatesUserhomeHtmlSwp,
	"assets/templates/.view.html.swp": assetsTemplatesViewHtmlSwp,
	"assets/templates/familypage.html": assetsTemplatesFamilypageHtml,
	"assets/templates/forms.html": assetsTemplatesFormsHtml,
	"assets/templates/index.html": assetsTemplatesIndexHtml,
	"assets/templates/layout.html": assetsTemplatesLayoutHtml,
	"assets/templates/newaccount.html": assetsTemplatesNewaccountHtml,
	"assets/templates/newuser.html": assetsTemplatesNewuserHtml,
	"assets/templates/standing.html": assetsTemplatesStandingHtml,
	"assets/templates/transactions.html": assetsTemplatesTransactionsHtml,
	"assets/templates/userhome.html": assetsTemplatesUserhomeHtml,
	"assets/templates/view.html": assetsTemplatesViewHtml,
	"assets/templates/viewac.html": assetsTemplatesViewacHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"s": &bintree{nil, map[string]*bintree{
			"main.css": &bintree{assetsSMainCss, map[string]*bintree{}},
		}},
		"templates": &bintree{nil, map[string]*bintree{
			".forms.html.swp": &bintree{assetsTemplatesFormsHtmlSwp, map[string]*bintree{}},
			".standing.html.swp": &bintree{assetsTemplatesStandingHtmlSwp, map[string]*bintree{}},
			".userhome.html.swp": &bintree{assetsTemplatesUserhomeHtmlSwp, map[string]*bintree{}},
			".view.html.swp": &bintree{assetsTemplatesViewHtmlSwp, map[string]*bintree{}},
			"familypage.html": &bintree{assetsTemplatesFamilypageHtml, map[string]*bintree{}},
			"forms.html": &bintree{assetsTemplatesFormsHtml, map[string]*bintree{}},
			"index.html": &bintree{assetsTemplatesIndexHtml, map[string]*bintree{}},
			"layout.html": &bintree{assetsTemplatesLayoutHtml, map[string]*bintree{}},
			"newaccount.html": &bintree{assetsTemplatesNewaccountHtml, map[string]*bintree{}},
			"newuser.html": &bintree{assetsTemplatesNewuserHtml, map[string]*bintree{}},
			"standing.html": &bintree{assetsTemplatesStandingHtml, map[string]*bintree{}},
			"transactions.html": &bintree{assetsTemplatesTransactionsHtml, map[string]*bintree{}},
			"userhome.html": &bintree{assetsTemplatesUserhomeHtml, map[string]*bintree{}},
			"view.html": &bintree{assetsTemplatesViewHtml, map[string]*bintree{}},
			"viewac.html": &bintree{assetsTemplatesViewacHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

