// Code generated by go-bindata.
// sources:
// assets/s/main.css
// assets/templates/familypage.html
// assets/templates/forms.html
// assets/templates/index.html
// assets/templates/layout.html
// assets/templates/newaccount.html
// assets/templates/newuser.html
// assets/templates/transactions.html
// assets/templates/userhome.html
// assets/templates/view.html
// assets/templates/viewac.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsSMainCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8b\xb1\xae\xc2\x30\x0c\x45\xf7\x7c\x85\xa5\xb7\x3e\xb1\xa0\x0c\x4d\xbf\x26\xc6\x75\x14\xd1\xd8\x91\x49\x24\x10\xe2\xdf\x29\xa1\x2c\x70\xc7\x7b\xce\x41\xa5\xdb\xdd\xc1\x36\x8c\xa7\x73\x32\xed\x42\xe1\x6f\x9a\x98\x11\x67\xf7\x70\xee\x50\x16\xe9\xf0\xab\x78\xcf\x1c\xe3\x50\x58\xad\x7c\x0c\x35\x5a\x2c\xf8\x7a\x85\x8b\xae\x99\x00\xd7\xad\x99\x07\x2b\xd1\x52\x96\x17\x1b\x55\x96\xda\x1b\xfc\x03\xf6\xd6\x54\xf6\xfe\xcb\x69\xb4\xff\x35\x12\x65\x49\xe1\xf8\x06\xcf\x00\x00\x00\xff\xff\x54\x41\xbd\xbe\xb6\x00\x00\x00")

func assetsSMainCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsSMainCss,
		"assets/s/main.css",
	)
}

func assetsSMainCss() (*asset, error) {
	bytes, err := assetsSMainCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/s/main.css", size: 182, mode: os.FileMode(420), modTime: time.Unix(1489057121, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesFamilypageHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x53\x4d\x6b\xdc\x30\x10\xbd\xef\xaf\x18\x86\x1e\x36\xd0\x78\x9b\x0d\xb9\x04\xdb\x10\x42\x03\x39\xa4\x2c\x94\xfe\x00\xd9\x9a\x8d\x45\x2d\xc9\x95\x64\x92\xc5\xf8\xbf\x57\xb2\xbc\xfe\x82\xd2\xbd\xac\x2d\xbf\x99\xf7\xde\xbc\x51\xd7\x39\x92\x4d\xcd\x1c\x01\x56\xc4\x38\xf6\xfd\x0e\xfc\x2f\xad\xee\xf2\x17\x26\x45\x7d\x81\x13\x7b\xa7\x47\xe8\xba\xc4\xbf\x27\xf1\xec\x07\x93\xd4\xf7\xe9\xc1\x83\x22\xba\xad\xe3\x43\xd7\x19\xa6\xde\x09\x06\xec\x1b\xc9\x82\x8c\x1d\x3b\x0e\xb8\x5a\xe4\xd3\x4b\xc4\x27\xbf\x2c\x19\x35\xf4\x83\xdb\x5b\x7f\x50\xfc\xa4\x9a\x4a\x07\xc9\x89\x19\x52\x0e\x30\xfe\x23\xe0\x73\x25\xea\x20\x30\x2d\xcc\xba\xcb\x44\xbf\x6e\x1d\xa5\xec\xbf\x0c\x62\x4e\x64\x84\xe6\x03\xdb\x53\x59\xea\x56\x39\x0b\x13\xf7\xcd\x42\xe3\x52\xab\x97\x17\xad\xfa\x6e\x52\x2b\xba\x40\xf2\x5d\xf1\xe0\x7c\x6b\x24\x32\x52\xf8\xb8\x96\x76\x58\x6a\x9b\xeb\x96\xd8\x19\x13\x9c\x4d\xee\xba\x4e\x9c\x61\x3f\x88\x7f\xb5\xe3\x30\x92\x17\x49\xf2\xaa\x36\x3d\x6b\x23\x81\x95\x4e\x68\x95\x21\xe3\x5c\x0e\x03\x47\x90\xe4\x2a\xcd\x33\x6c\xb4\x75\x98\xc3\x6e\x16\xe8\x3b\xfa\x58\x56\x91\x54\xf7\x50\xd6\xcc\xda\x0c\x25\x59\xeb\xb3\xc6\x60\xdb\x83\x60\x48\xf8\x3e\xdf\xfd\xcb\x5f\x5a\x1d\xf3\x27\xce\x61\xdc\x93\x18\xb7\x2f\x39\xce\x25\x61\x7a\xf0\x08\xa9\x50\x4d\xeb\xc0\x5d\x1a\xca\xd0\xd1\xa7\x4f\x33\x8c\x3d\xc3\x76\x0c\x00\xe7\x92\x57\x0b\xd1\xec\xa6\xac\xac\xa8\xfc\x5d\xe8\xcf\x6b\x69\x13\xd7\x22\x5f\x6d\xc3\xc9\x1b\xf9\xd0\x86\x6f\x39\x9b\xf1\x1c\xa1\x61\xce\x79\xce\x0c\x93\xee\xe1\xeb\xf1\x5b\x8f\x60\xe8\x4f\x2b\x0c\xf1\x6b\xdf\x0f\x7e\xb7\xe9\xba\x7f\x13\x4a\xc8\x56\xc2\x03\xd4\x14\xca\xed\xcd\xea\xfb\xb3\x56\x67\xe1\xa3\xf8\x3f\xfb\x44\x71\xdc\x50\xac\xf0\xb6\x2d\xa4\x70\xe3\x4c\xd2\x43\x88\x79\xbd\x35\xcb\x5b\x5b\x30\x4b\xe1\xd6\xfe\x0d\x00\x00\xff\xff\xc7\x53\xf5\xaa\xca\x03\x00\x00")

func assetsTemplatesFamilypageHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesFamilypageHtml,
		"assets/templates/familypage.html",
	)
}

func assetsTemplatesFamilypageHtml() (*asset, error) {
	bytes, err := assetsTemplatesFamilypageHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/familypage.html", size: 970, mode: os.FileMode(420), modTime: time.Unix(1489659020, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesFormsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x56\xdd\x8a\xeb\x36\x10\xbe\xcf\x53\x0c\x62\x2f\x5a\x58\xbc\xd9\xd3\x42\x21\x24\x86\x25\xe7\xe4\xaa\xbb\x27\x9c\x9e\xd2\xcb\xa0\x8d\x26\x6b\xb3\xd6\x4f\x25\x39\xa9\x31\x79\x9a\xbe\x49\x9f\xac\x23\xff\x24\x76\x92\x4d\xd2\xb2\x50\x28\x27\x17\xb1\x25\xcd\x7c\xfa\xe6\x9b\xd1\xc8\x65\x29\x70\x95\x2a\x04\xb6\xb2\x72\xc1\x85\x58\xf0\xe5\x52\xe7\xca\xb3\xed\x76\x00\xf4\x1b\xaf\xb4\x95\xc0\x97\x3e\xd5\x6a\xc2\xc8\xa0\x5d\x07\x89\x3e\xd1\x62\xc2\x8c\x76\x9e\xc5\xb5\x71\xf2\x43\xfc\x20\x04\x3c\xd4\x36\xe3\x3b\x1a\xd7\x0b\xa9\x32\xb9\x07\x5f\x18\x9c\x30\x8f\x7f\x90\xbb\xe2\x92\xde\x73\x87\x36\xbc\x31\xb0\xc8\x85\x56\x59\x01\x6b\x9e\xe5\xb4\x52\x96\xd1\x4c\xa2\xdc\x6e\x19\x24\xa9\x10\xa8\x2e\x20\x35\xbc\x6a\x30\xc3\xbd\x27\xe0\x09\x8b\xca\x1f\x6f\x3f\x0c\xb7\x01\xfe\xf7\x3c\xb5\x28\x4e\xa0\xb8\xfc\x59\xa6\x84\x13\xd0\x26\x8c\xf8\xb3\x96\x43\x78\x6f\x1c\xee\x82\x0e\xf1\xa0\x2c\x51\x09\x92\x66\xd0\x11\x4e\x9a\x85\x2c\x9a\xed\x5d\xab\x5b\xf8\x95\xa5\xe5\xea\x05\xe1\xe6\x15\x6e\xe1\x66\x0d\xa3\x09\x7c\x17\xcd\xb8\x8c\x7e\x4e\x9d\xff\xcd\xa6\x1e\x49\x28\x74\x0e\xaa\x48\xbf\xef\x78\x8e\xb5\x09\x82\xef\xb5\xb8\x59\x47\xbf\x36\x52\x6d\xb7\xa3\x6a\xfc\x54\xbd\xb3\xf8\xcc\xe2\x28\x70\x90\x5a\x61\x41\xdb\x47\x9f\x02\xf3\xf1\x5d\x0d\x1d\x77\x58\xd6\x21\xed\x9f\xdd\xc8\x78\x96\x9d\x0f\xed\xb6\x0e\xac\x8a\x6b\x8e\x36\xd5\x22\x6a\xd2\xef\xde\x3f\xa0\x7f\xc1\x3e\x54\xd8\x8e\x7a\x87\x36\x74\x78\x3f\xa2\x7c\x26\xab\xb6\xe4\xcf\x72\x3d\xe2\xd7\xe7\x74\xc8\xa7\x57\x29\x74\xc4\x0c\x2f\x4e\x1f\xad\xb0\x70\xea\x4c\xb5\xe7\xea\x91\xbf\x22\x70\x98\xf3\x42\xe2\xbb\x1f\x2d\x80\x0a\x6b\x66\xb5\x1c\xc1\xd8\x61\x86\x4b\xdf\xc0\xac\x68\x2e\xc4\xec\x51\x9a\x8c\xfb\xe3\x82\x87\x28\x68\x50\xfb\xd4\x94\xbe\xea\x43\x10\xaf\x8f\x21\xba\x95\xd5\xc3\x18\x3f\xdb\x1a\xe7\x41\x86\x55\x2a\xe2\xbf\xfe\xec\x45\xa9\xf2\x90\x2e\x06\xce\xa3\x99\xb0\x61\x34\xbc\x27\xe5\x52\xd2\x70\xb8\x6b\x06\x95\x27\xdb\x43\xcd\x73\x4b\x9a\xe2\xe8\x8c\x5e\xa6\x36\xe9\x38\x5d\xe8\x14\x94\x0a\x78\xd2\x9b\x5d\xb7\x68\xc7\x97\x3b\x06\xd5\x81\xf3\x5c\x89\x54\xbd\xbc\xd9\x67\x77\x06\x57\x14\xc5\x2f\x8d\x2d\x7c\xb6\x02\xed\xbe\x36\xde\x31\xa7\xff\x97\xbc\x56\x5e\xa4\x97\xf5\xf0\x91\x28\x8f\xfa\x7e\x82\xa6\x5a\x3f\x17\x8c\xd8\xfe\xcc\x84\xb5\x2f\xb3\x69\xe8\x00\xbb\xed\xbf\x26\xa8\xe0\xd3\x1a\x6d\x71\x00\xd4\x86\x52\xd1\xbf\x6f\x21\x05\x66\xe1\x94\x37\x90\x3f\xb5\x95\xd2\x93\xb4\xb2\x59\x04\x94\x6e\xae\xfb\x2d\x49\xf0\xc2\xb1\xf8\x23\xfd\x1f\x37\xc4\x03\x53\xea\xfe\x3e\x21\xe3\xc7\xea\xd9\x37\x3f\xce\xcc\x35\x65\x3f\xa5\x76\x12\x54\x6a\x36\x68\x86\x57\x15\xfd\x32\x31\xdc\x55\xcd\xb8\x5f\xee\xcd\xfc\x5b\x9f\x14\xd3\xa4\x6a\xda\x73\xb2\xd9\x68\x2b\xf6\xf5\xfd\x39\x13\xbb\x59\x38\xc8\x80\x69\xe6\x5b\xed\x75\x26\xcc\x46\x74\x72\xf7\x84\x1b\x30\x57\x3a\x93\xe7\x7d\xc7\x75\xaa\xd5\x2a\x25\xfe\x97\xbd\x3e\x74\xbc\xce\x69\x5a\x45\xb8\xd7\xb4\x1e\xc6\x83\x0b\x7a\x86\x8f\x1a\x74\xfe\x58\x50\x49\x7d\xa1\x5d\x3c\xa9\xea\x3f\xba\x7a\xbe\xd4\x48\xa7\x6e\x9f\xca\xc4\xc4\x74\x0e\x40\x6f\x14\x5a\xd0\x2b\xf0\x34\x70\x58\x37\xa4\xa6\x13\xc0\x26\xcd\x32\x48\xf8\x1a\xc1\x6b\xe0\x39\x6d\x65\x53\x47\x83\x24\x75\x94\x84\x06\xd4\xfc\x97\x37\xda\xee\x53\xe1\xdb\x7d\x76\xf6\x3e\x3b\x2c\xc9\xbf\x03\x00\x00\xff\xff\x97\xd0\xf7\x89\x42\x0c\x00\x00")

func assetsTemplatesFormsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesFormsHtml,
		"assets/templates/forms.html",
	)
}

func assetsTemplatesFormsHtml() (*asset, error) {
	bytes, err := assetsTemplatesFormsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/forms.html", size: 3138, mode: os.FileMode(420), modTime: time.Unix(1490018363, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\xcd\xce\x9b\x30\x10\xbc\xf3\x14\x2b\x9f\x5a\xa9\xcd\x0f\x52\x2e\x15\x20\x55\x51\x7b\x0a\x55\x2e\x7d\x00\x03\x4b\xb1\x8a\x6d\x6a\x9b\xa6\x11\xe2\xdd\x6b\xc7\x90\x90\x84\x34\xcd\x97\x13\xbb\x9e\x19\xaf\x66\x36\xee\x3a\x83\xbc\xa9\xa9\x41\x20\x15\xd2\x82\xf4\x7d\x00\xc3\x2f\xaa\xd6\xc9\x5e\xe6\x3f\xd1\x40\x2a\x05\x1e\xa3\xa5\x6d\x04\xe7\xe3\xae\x63\x25\x2c\xa6\xf8\x2c\xe9\xba\x45\x8a\xba\xef\xa3\x65\x96\x4c\x80\x28\x0a\x8b\x0b\x2e\xdc\xa8\x94\x8a\x03\xcd\x0d\x93\x22\x26\xb5\xfc\xc1\x04\x01\x8e\xa6\x92\x45\x4c\x1a\xa9\x0d\xb9\xd0\xfd\x28\x61\xb2\x73\x28\x3b\x43\x78\x7d\xf4\x95\x72\x56\x1f\x3f\x41\xc4\x44\xd3\x1a\x30\xc7\x06\x63\x62\xf0\x8f\x21\x20\x28\xb7\xdf\xe5\x09\x40\xe0\x37\xad\x5b\x5b\xda\x11\x3d\xa5\xef\x49\x12\x65\xea\x5a\x2d\x45\x9e\xa1\x82\x6f\x96\x09\xff\xd0\x6c\x35\x2a\xf7\x35\x55\xfd\x3e\xf4\x66\x75\xf7\x54\xeb\x83\x54\xc5\xad\x68\x33\xf4\x47\xe1\xe6\x50\xcc\xb0\xaf\x28\xba\xcd\x38\xb3\x93\xb8\x79\x62\xb2\xf3\xde\x0d\x63\xf8\xea\x42\x8e\x96\xce\xe8\xe4\xa1\xf3\x02\x0f\xa3\x3d\x4f\xdc\xdf\x2a\x74\x4b\xe2\xad\x83\xcf\x79\x2e\x5b\x61\x1e\xa5\xf1\xd4\x3f\x7f\xe9\xc9\xc1\x99\x0c\x28\x13\xe0\xdc\xfc\xaf\x04\xee\xf9\x5f\x38\x65\xf5\x2d\x17\x5d\x73\x24\xfb\xe2\x2d\x29\x35\xd4\x18\x7b\x71\x4c\x16\xdd\xe6\x43\xb8\xea\x09\x28\xfc\xd5\x32\x85\x05\x18\x66\x6a\x8b\xdd\x7c\x0c\x57\x90\x57\x54\x59\x8f\x51\xe9\x49\xb0\xeb\x99\x1b\xdf\xa5\x4c\x30\xde\x72\xd8\x40\x8d\x4e\x5a\xbf\xbf\xc3\x6c\xa5\x28\x99\x0d\xed\x85\x1d\x0a\x5f\x5b\x22\x1f\xee\x79\x8b\x86\x72\xf2\x5f\x1f\xf7\x68\xfa\x5c\x64\x54\xa3\x7d\x2e\x46\x48\xf0\x37\x00\x00\xff\xff\xdf\x16\x24\x30\x4b\x04\x00\x00")

func assetsTemplatesIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIndexHtml,
		"assets/templates/index.html",
	)
}

func assetsTemplatesIndexHtml() (*asset, error) {
	bytes, err := assetsTemplatesIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/index.html", size: 1099, mode: os.FileMode(420), modTime: time.Unix(1489069089, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesLayoutHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x51\x3d\x73\xb3\x30\x0c\xde\xf9\x15\x7e\xb5\xbf\xf5\xda\xc1\x78\xe9\xc7\xd4\x5e\x18\xb2\x74\x54\x40\x04\x5f\x8c\x9d\x43\xa2\x57\x8e\xcb\x7f\xaf\xc1\x6d\x43\x87\xc6\x8b\xbe\x9e\x47\x96\xf4\xcc\x73\x43\xad\x0b\xa4\xa0\x23\x6c\xe0\x72\x29\xcc\xbf\xc7\xdd\xc3\xfe\xad\x7a\x52\x9d\xf4\xde\x16\x26\x1b\x95\x9e\x59\x30\xd9\x5d\xc3\x9e\x04\x55\xdd\xe1\xc0\x24\x25\x8c\xd2\xfe\xbf\x87\x4d\xd9\xbb\x70\x52\x03\xf9\x12\x58\x26\x4f\xdc\x11\x09\x28\x99\xce\x54\x82\xd0\x87\xe8\x9a\x19\x54\x37\x50\x5b\x82\x66\xdd\xa3\x0b\x77\x4b\x6a\xd3\x42\x9c\x78\xb2\x55\xac\x4f\x24\xea\x35\x06\x9a\x8c\xce\xb9\x3c\x90\xbe\x4e\x64\x0e\xb1\x99\x36\xd4\xc6\xbd\xab\xda\x23\x73\x09\x3d\x85\x71\xd3\x75\x2d\xe3\xf7\xc7\x2d\xf6\xce\x4f\x60\x9f\x57\x6b\x34\xfe\x05\x3c\xd3\xc0\x31\xa0\x07\x5b\x7d\x79\x37\xc0\x32\x60\x60\xac\xc5\xc5\x90\x16\xda\x6f\xa2\x1b\x24\x1f\x8f\x71\x14\xb0\x2f\xf1\xa8\x76\xa3\xfc\x42\x1a\x9d\x16\xb2\xc5\x3c\x53\x68\x92\x4a\xe9\x5d\xa5\x3b\x20\xd3\x22\x5d\xc6\xe5\x3b\xa4\xd3\xac\xba\xfd\x10\x3e\x03\x00\x00\xff\xff\x7a\x8a\x17\xb6\xea\x01\x00\x00")

func assetsTemplatesLayoutHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesLayoutHtml,
		"assets/templates/layout.html",
	)
}

func assetsTemplatesLayoutHtml() (*asset, error) {
	bytes, err := assetsTemplatesLayoutHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/layout.html", size: 490, mode: os.FileMode(420), modTime: time.Unix(1488553008, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesNewaccountHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xe2\xb2\x81\xd0\x0a\x40\x60\x93\x91\x9a\x98\x02\x61\x82\xb9\x25\x99\x25\x39\xa9\x76\x1e\xa9\x39\x39\xf9\x36\xfa\x10\x0e\x42\x32\x37\xb5\x24\x51\x21\x39\x23\xb1\xa8\x38\xb5\xc4\x56\xa9\xb4\x24\x4d\xd7\x42\x09\x6a\x8c\x3e\xc2\x1c\x9b\xa4\xfc\x94\x4a\x24\x5d\x19\x86\x76\x7e\xa9\xe5\x0a\xa1\xc5\xa9\x45\x40\x65\x86\x08\x99\xea\xea\x82\xa2\xcc\xbc\x92\x34\x05\x25\xd5\x62\x25\x05\xbd\xda\x5a\xa8\x51\x10\xfd\x40\xb5\x10\xd7\x02\x02\x00\x00\xff\xff\xd6\x4d\xae\x17\xbf\x00\x00\x00")

func assetsTemplatesNewaccountHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesNewaccountHtml,
		"assets/templates/newaccount.html",
	)
}

func assetsTemplatesNewaccountHtml() (*asset, error) {
	bytes, err := assetsTemplatesNewaccountHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/newaccount.html", size: 191, mode: os.FileMode(420), modTime: time.Unix(1488373318, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesNewuserHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xe2\xb2\x81\xd0\x0a\x40\x60\x93\x91\x9a\x98\x02\x61\x82\xb9\x25\x99\x25\x39\xa9\x76\x1e\xa9\x39\x39\xf9\x36\xfa\x10\x0e\x42\x32\x37\xb5\x24\x51\x21\x39\x23\xb1\xa8\x38\xb5\xc4\x56\xa9\xb4\x24\x4d\xd7\x42\x09\x6a\x8c\x3e\xc2\x1c\x9b\xa4\xfc\x94\x4a\x24\x5d\x19\x86\x76\x7e\xa9\xe5\x0a\xa1\xc5\xa9\x45\x40\x65\x86\x08\x99\xea\x6a\xbd\x50\xbf\xc4\xdc\xd4\xda\x5a\x9b\xa4\x22\x24\x0d\x89\x0a\x19\x45\xa9\x69\xb6\x4a\xfa\x40\x6d\x8e\xc9\xc9\xf9\xa5\x79\x25\x4a\x60\x23\xa0\x1c\x1b\xfd\x44\x98\xad\x10\xab\x80\xc6\x42\x3c\x06\x08\x00\x00\xff\xff\xa6\xb7\x94\xc4\xea\x00\x00\x00")

func assetsTemplatesNewuserHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesNewuserHtml,
		"assets/templates/newuser.html",
	)
}

func assetsTemplatesNewuserHtml() (*asset, error) {
	bytes, err := assetsTemplatesNewuserHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/newuser.html", size: 234, mode: os.FileMode(420), modTime: time.Unix(1488373372, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesTransactionsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x8f\xcd\xaa\xc2\x30\x10\x85\xf7\x79\x8a\x50\xba\xbc\xa4\x70\x97\x97\xdc\x80\x20\x5d\x77\xe1\x0b\x4c\xcd\x60\x8b\x4d\x52\x92\x69\x41\x42\xde\xdd\xa9\x22\x2a\x9a\x45\x60\xce\x37\x3f\xe7\xe4\x4c\xe8\xe6\x09\x08\x65\x35\x20\xd8\xaa\x14\xa1\x87\x5f\x73\x88\xe0\x13\x1c\x69\x0c\x3e\xe9\x86\x05\xa1\x09\xfa\x09\x8d\xc8\x99\xd1\x09\x65\x7d\xfe\xa9\x57\xf9\xf7\x2f\x55\x0b\x4e\x75\x18\xc7\x60\xd5\xeb\x98\xdc\x56\x51\x34\x42\xf2\xd3\x64\x4d\xce\xf5\xaa\xda\x18\x5c\x29\xba\xe1\xfa\x1d\xec\x31\xd1\x27\x70\xc1\xe3\x45\x32\xde\xb9\xb0\xf8\x2f\x0d\x8c\xba\x25\xce\x21\xe1\x83\xf1\xcf\x47\xd9\x27\x7a\x7b\xb3\x70\xf7\xbd\x29\xcf\xac\x3d\x24\xdc\xb2\x5e\x03\x00\x00\xff\xff\x71\x3a\xcc\xd7\x00\x01\x00\x00")

func assetsTemplatesTransactionsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesTransactionsHtml,
		"assets/templates/transactions.html",
	)
}

func assetsTemplatesTransactionsHtml() (*asset, error) {
	bytes, err := assetsTemplatesTransactionsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/transactions.html", size: 256, mode: os.FileMode(420), modTime: time.Unix(1489659020, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesUserhomeHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\x51\x4f\xdc\x3e\x0c\x7f\xff\x7f\x0a\x2b\x42\x3c\xa0\xbf\x5a\x31\xde\x58\x5b\x84\xc6\x98\x98\xc4\x84\x40\x7b\x46\xb9\xc6\xa5\xd9\x9a\xa4\x34\xe9\xc1\xa9\xea\x77\x9f\x93\xa6\xd7\x3b\xc4\x49\xd7\x97\xd4\xb1\xfd\xb3\x1d\xff\xec\x61\x70\xa8\xda\x86\x3b\x04\x56\x23\x17\x6c\x1c\xff\x1b\x86\x13\x67\x5a\xb8\xcc\x21\x99\xa4\x5b\x85\x2a\x88\xfe\x87\xae\xb2\xfa\x4b\xf1\xdb\x62\x07\x0f\xfc\x05\xe1\x12\x86\x21\x6a\xb2\x94\x34\xa4\xbe\x28\xae\xcb\xd2\xf4\xda\x59\xba\xb9\x28\x08\x43\x56\x90\xdc\xa3\x0d\xce\x17\x50\x36\xdc\xda\x9c\x29\xb4\x96\x10\x58\x41\x00\x41\x39\x5b\xa3\x16\x53\xe4\x0e\x5f\xa7\xc0\x5c\x25\x3f\xd0\xdd\xf7\xd6\x3d\xe2\x6b\x8f\xd6\xd9\x6d\x36\x01\xbc\x41\x0d\xde\x9a\x64\xa0\xcf\x67\xf8\x40\x28\x52\xbf\xc0\xec\x30\x25\xe7\xb5\xc3\xd0\x71\x4d\x99\xef\x38\x04\x10\x0a\x96\xdc\x76\x46\x25\xbe\x38\xcd\x15\x59\xc4\x18\x01\xb3\x32\x9d\x9a\x53\xef\x26\x50\x06\xbc\x74\xd2\x68\x7f\x61\x5b\xa3\xc5\xf6\x5e\xa1\xab\x8d\xc8\x59\x6b\x48\x9a\xc2\x06\x10\xa9\xdb\xde\x81\xdb\xb4\x98\x33\x87\xef\x64\xb9\xe6\x4d\x4f\x02\xbd\xc1\xdd\xcd\x38\x32\xa8\xa5\x10\x54\x4d\x47\xdd\x30\xba\xd9\x80\x4f\x24\x67\x52\x1c\x85\xd2\xe1\x1f\x2c\xdd\x21\x90\x29\xd9\x1d\x20\x0a\x1a\x9f\x07\xbb\x71\x84\x9a\x5b\x88\x15\xa0\x00\x0e\x2d\xdf\x28\xd4\x0e\x4c\x45\x96\xca\x68\xdc\x40\x72\xad\x7c\x63\xc9\xb8\xa2\x97\x82\x8d\xe9\x41\x6a\x67\x3c\xd2\x0d\xb9\x8d\x63\xb2\x64\x69\xb1\xa1\x64\x62\x6c\x6f\xee\x3b\xbd\xf0\xad\x52\xed\xb3\xda\xf0\xc8\x14\x06\x9e\x75\x9e\x03\x93\xdb\x81\x6a\x6d\xbf\x52\x72\xa9\x97\x78\x86\xed\xde\x03\x73\xa8\x3b\xac\x72\x96\xee\x77\xe4\x4a\x8a\x3c\x3e\xf1\x69\xec\x59\x7c\xab\xe2\x31\x9c\x59\xca\x27\x94\x2c\xf5\x8d\x9e\x99\x82\x8d\x45\x98\x19\x70\x3c\x76\xc9\x75\x89\x0d\x2b\xbe\x85\x73\xc1\x3e\x1e\x41\x6a\x2b\x3d\x75\xee\xc2\xb9\x45\x98\x87\x63\xf7\x7f\x3e\xe9\x1b\x86\xf4\xec\xa9\x36\x6f\x30\x0f\xe0\x59\xea\x15\x59\xdf\xf8\xb9\x8a\xb4\xff\xfb\x3f\x9c\xac\xb7\x73\xf5\x80\x9d\x34\x22\x99\x1d\x3e\x0c\xc4\xc9\xfa\xc0\x34\x34\xb2\x58\xaa\x59\x4b\x7c\xbb\xea\x43\xa3\x69\x6a\x17\x97\x50\xce\x74\xf5\x2b\x88\x9e\x01\x5b\xc1\x17\x75\xaa\x57\xb6\xfd\x3a\xb3\x8b\x54\xdf\x7d\x29\x59\x4a\xf0\x9f\xd6\x98\xa5\xbe\x14\xbf\x1b\xde\xcf\xcf\x43\x0d\x4f\xe8\x7e\x9a\x15\x30\xeb\xb8\x16\x6c\x67\x2d\x2c\x4c\x0b\x2a\xda\x05\x2c\x6c\xb4\x3d\x55\xd5\xa9\x67\x2e\xc4\x73\xa4\xe1\x01\x0b\x1a\x04\x16\xb7\xe1\xbe\x62\x07\x19\x3e\x51\x97\x75\x4b\xeb\xe2\x73\xd7\xed\xaa\xf8\xa8\x5c\x71\x8b\x7e\x0f\xff\x0b\x00\x00\xff\xff\xcb\xbd\x1c\x8b\x9c\x05\x00\x00")

func assetsTemplatesUserhomeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesUserhomeHtml,
		"assets/templates/userhome.html",
	)
}

func assetsTemplatesUserhomeHtml() (*asset, error) {
	bytes, err := assetsTemplatesUserhomeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/userhome.html", size: 1436, mode: os.FileMode(420), modTime: time.Unix(1490017617, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesViewHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x90\x51\x4f\xc3\x20\x14\x85\xdf\xf7\x2b\x6e\x9a\x3e\x2a\x4d\x7c\x34\x14\xa3\x9b\x4d\xf4\xc5\x07\xe3\x0f\x60\xe3\x76\x63\x16\x6a\x00\x17\x17\xd2\xff\xee\xa5\xd0\x66\x24\x6d\xc3\x39\x87\xef\xf4\x12\xa3\xc2\x5e\x5b\x84\xca\x07\x69\x95\xb6\xc7\x6a\x9a\x36\x31\xd6\x9d\x34\xf0\xd8\x02\xa3\x6f\x16\xce\x7e\xde\xbf\x8f\xfb\x92\x2d\xc1\x73\x48\xfa\xcf\x80\x7f\x90\x32\xe9\x61\x9d\x41\x03\xd9\x1e\xb4\x0f\x0b\x88\x75\x7a\x08\xe8\x3e\x4b\xd3\xcb\xf5\xcb\xa3\xcb\x69\x0a\xf3\xd3\x83\x58\x2c\xf8\x70\x0a\x9d\xe7\x0d\x69\x1b\x1e\xe4\x7e\x40\x41\x34\x27\xed\x11\xa1\xfe\xbe\x83\xfa\x92\xa0\x33\x3d\x1d\x0d\x4e\x6c\x80\x16\x0f\x4a\x50\xe9\x85\x75\x6e\x24\x26\x6f\x68\xbf\x6a\x3b\x4c\xe1\x1b\xcd\x8c\x16\xaf\x84\x62\xcf\x66\xfc\xb5\x8b\x77\x03\xd2\x3d\xa4\x8b\x60\x5b\x69\x5f\x95\x0e\xeb\xdf\x51\x3b\xcd\x4d\xc5\x50\x16\x97\x70\x72\xd8\xb7\xd5\x41\xda\x03\x0e\xcb\x5d\x3e\x69\xd5\xce\xd5\x6f\xbb\x69\xaa\xc4\x76\x36\x79\x23\xc5\x7a\x30\x46\xb4\x0a\xee\x0b\x2a\xf7\xd3\xdb\xa5\x69\xc9\x49\xb3\x35\xeb\xf8\x59\xf8\x0f\x00\x00\xff\xff\x2a\xd6\x03\x2f\xb3\x01\x00\x00")

func assetsTemplatesViewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesViewHtml,
		"assets/templates/view.html",
	)
}

func assetsTemplatesViewHtml() (*asset, error) {
	bytes, err := assetsTemplatesViewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/view.html", size: 435, mode: os.FileMode(420), modTime: time.Unix(1489771146, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesViewacHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x52\x5d\x6b\x83\x30\x14\x7d\xef\xaf\x08\xe2\xc3\x06\xc3\x42\x1f\x47\x26\x14\x46\x61\x63\x6c\x63\x74\x3f\x20\xea\x6d\x95\x99\xc4\x25\x71\x30\x82\xff\x7d\xf7\x46\x5b\xad\x96\xf9\xe2\xf5\x9c\x73\xcf\xfd\xf0\x7a\xef\x40\x36\xb5\x70\xc0\xa2\x12\x44\x11\x75\xdd\x8a\xe1\xe3\x7d\xec\x74\xc3\xee\x1f\x58\x32\x22\x22\x0f\xc0\xb3\xce\x58\x24\x72\x92\xf2\x72\x93\x06\xa2\xeb\xf8\x1a\xe3\x15\x77\x22\xab\x21\x0d\x19\xdc\x99\x3e\xe8\x3f\xca\xf4\xa3\x55\xaa\x52\x47\xbe\xc6\xf8\x82\x78\x7a\x5d\x62\x6f\x9f\xfb\x2b\xa0\x2b\xc1\x2c\xe1\xf7\xd6\x34\xda\xc2\x48\x60\x34\xd4\xc6\xee\x5e\x2a\xeb\x42\xe3\x3b\x21\x93\x6d\x9e\xb7\xb2\xa5\x81\xf7\x46\x28\x2b\x72\x57\x69\x65\x59\x18\x61\x48\x40\xfc\x08\x2c\xfe\xba\x63\xf1\x0f\xe5\x05\x83\x81\x9d\xcd\x54\xa4\x3c\xc3\x05\x48\xad\xe0\x17\xd5\xc9\xf6\xe0\xc0\xd0\x2e\xb2\x14\x5b\x28\x46\xa9\xf7\xd5\x81\xdd\xc0\xf7\x86\x2a\x91\x72\x67\xb4\xbc\x1d\x4c\xcf\x5e\x94\x42\xc1\xd4\x51\xea\x56\x39\xb2\x3c\x73\x88\x3e\x82\x3d\x61\x93\x12\x50\x5b\x98\x59\xfe\xe7\x74\x69\x49\x0d\x5d\xb1\x54\xc5\xc2\x11\xc5\xc3\xc2\xe7\xfa\x9e\x2f\xe8\x9a\xa8\x49\x7c\x9f\x14\x8b\xbf\xd2\x1b\x23\xd2\xdf\xcb\x6a\x7a\x88\x99\xb0\x40\xd7\xf5\x17\x00\x00\xff\xff\x60\xe4\x1a\x0d\x9d\x02\x00\x00")

func assetsTemplatesViewacHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesViewacHtml,
		"assets/templates/viewac.html",
	)
}

func assetsTemplatesViewacHtml() (*asset, error) {
	bytes, err := assetsTemplatesViewacHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/viewac.html", size: 669, mode: os.FileMode(420), modTime: time.Unix(1489660347, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/s/main.css": assetsSMainCss,
	"assets/templates/familypage.html": assetsTemplatesFamilypageHtml,
	"assets/templates/forms.html": assetsTemplatesFormsHtml,
	"assets/templates/index.html": assetsTemplatesIndexHtml,
	"assets/templates/layout.html": assetsTemplatesLayoutHtml,
	"assets/templates/newaccount.html": assetsTemplatesNewaccountHtml,
	"assets/templates/newuser.html": assetsTemplatesNewuserHtml,
	"assets/templates/transactions.html": assetsTemplatesTransactionsHtml,
	"assets/templates/userhome.html": assetsTemplatesUserhomeHtml,
	"assets/templates/view.html": assetsTemplatesViewHtml,
	"assets/templates/viewac.html": assetsTemplatesViewacHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"s": &bintree{nil, map[string]*bintree{
			"main.css": &bintree{assetsSMainCss, map[string]*bintree{}},
		}},
		"templates": &bintree{nil, map[string]*bintree{
			"familypage.html": &bintree{assetsTemplatesFamilypageHtml, map[string]*bintree{}},
			"forms.html": &bintree{assetsTemplatesFormsHtml, map[string]*bintree{}},
			"index.html": &bintree{assetsTemplatesIndexHtml, map[string]*bintree{}},
			"layout.html": &bintree{assetsTemplatesLayoutHtml, map[string]*bintree{}},
			"newaccount.html": &bintree{assetsTemplatesNewaccountHtml, map[string]*bintree{}},
			"newuser.html": &bintree{assetsTemplatesNewuserHtml, map[string]*bintree{}},
			"transactions.html": &bintree{assetsTemplatesTransactionsHtml, map[string]*bintree{}},
			"userhome.html": &bintree{assetsTemplatesUserhomeHtml, map[string]*bintree{}},
			"view.html": &bintree{assetsTemplatesViewHtml, map[string]*bintree{}},
			"viewac.html": &bintree{assetsTemplatesViewacHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

