// Code generated by go-bindata.
// sources:
// assets/s/main.css
// assets/templates/.forms.html.swp
// assets/templates/.index.html.swp
// assets/templates/.userhome.html.swp
// assets/templates/familypage.html
// assets/templates/forms.html
// assets/templates/index.html
// assets/templates/layout.html
// assets/templates/newaccount.html
// assets/templates/newuser.html
// assets/templates/transactions.html
// assets/templates/userhome.html
// assets/templates/viewac.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsSMainCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8b\xb1\xae\xc2\x30\x0c\x45\xf7\x7c\x85\xa5\xb7\x3e\xb1\xa0\x0c\x4d\xbf\x26\xc6\x75\x14\xd1\xd8\x91\x49\x24\x10\xe2\xdf\x29\xa1\x2c\x70\xc7\x7b\xce\x41\xa5\xdb\xdd\xc1\x36\x8c\xa7\x73\x32\xed\x42\xe1\x6f\x9a\x98\x11\x67\xf7\x70\xee\x50\x16\xe9\xf0\xab\x78\xcf\x1c\xe3\x50\x58\xad\x7c\x0c\x35\x5a\x2c\xf8\x7a\x85\x8b\xae\x99\x00\xd7\xad\x99\x07\x2b\xd1\x52\x96\x17\x1b\x55\x96\xda\x1b\xfc\x03\xf6\xd6\x54\xf6\xfe\xcb\x69\xb4\xff\x35\x12\x65\x49\xe1\xf8\x06\xcf\x00\x00\x00\xff\xff\x54\x41\xbd\xbe\xb6\x00\x00\x00")

func assetsSMainCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsSMainCss,
		"assets/s/main.css",
	)
}

func assetsSMainCss() (*asset, error) {
	bytes, err := assetsSMainCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/s/main.css", size: 182, mode: os.FileMode(420), modTime: time.Unix(1489057121, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesFormsHtmlSwp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9a\xcb\x6b\x24\x45\x1c\xc7\x2b\x0b\xd9\xf8\x8a\x8a\xe2\xc9\x4b\xd9\x06\x51\x08\x33\x49\x76\x41\x08\x33\x03\x21\xd9\x88\x87\x64\x83\xfb\x40\x4f\xa1\xd2\x55\x93\x69\xd2\xd5\xd5\x5b\x5d\x93\xd8\x34\xed\xe3\x6f\x70\x2f\x0a\x5e\xf4\xb0\x8a\x08\x7b\xf2\xa4\xa2\x1e\x7c\xdc\x44\x3c\x89\x78\xd1\x93\x8f\xe3\x1e\x05\xbf\xfd\x98\x4e\xcf\xec\x4c\x26\x8b\xa0\xec\x52\x5f\xf8\x6c\xbf\x7e\xbf\x5f\xd7\xef\x51\x0d\x4b\x66\x6f\xe9\xea\x8b\x5b\xf4\xf9\xc6\x79\x02\x3d\x4a\xc8\x4d\xf7\xcb\x97\xdf\x9a\x5b\x3c\xf3\xe4\x33\x84\x48\x66\x4c\x4f\x1c\x91\x69\x7a\x41\x68\x13\xaf\x4c\x35\x23\xaf\x95\x01\x9b\x91\xab\xbd\xd0\x44\xcd\x7d\xe5\xb3\x60\xbf\x19\x69\xb7\xb9\xef\x99\x5e\x7f\xaf\xe1\x2a\xd9\x74\x15\x17\xda\x55\xc1\xa1\x8a\x9b\xa1\x72\x0f\x84\x91\x2a\x10\x71\x93\x45\x91\x80\x93\x11\x32\xf4\x99\x11\x51\xb3\xab\xb4\x8c\x1a\x3d\x23\xfd\xe9\xef\xb6\xb2\xb2\x9a\x27\xe7\x56\x96\x97\xb2\xb3\xa7\x9d\xa7\xe8\xe3\x8f\x5d\xf9\xbf\x17\x64\x65\x65\x65\x65\x65\x65\x65\x65\x65\x65\xf5\x1f\xca\x84\x33\xe4\x75\x1c\xcf\x94\xd7\x1b\xe5\x71\x66\xe4\x68\x65\x65\x65\x65\x65\x65\x65\x65\x65\x65\x65\x65\x65\x65\x75\xf7\x8a\x71\x42\xbe\x9b\x25\xe4\xd6\x59\x92\xff\xfd\x7f\xf0\xff\xff\x5f\x1f\x21\xe4\x13\xf0\x2e\xb8\x04\xe6\xc1\xcf\x0f\x13\xf2\x3d\xf8\x16\x7c\x03\x3e\x02\xd7\x41\x02\x76\xc0\xb3\xe0\xc7\x79\x42\xbe\x00\x37\xc1\x7b\xe0\x1d\x90\x82\x2e\x68\x83\xdf\x1e\x82\x0d\xf8\x1a\x7c\x0e\x3e\x03\x9f\x82\x1b\xe0\x4d\xc0\xc0\x13\xe0\x8f\x07\xf1\x1c\x44\xa0\x03\x66\xc0\xad\x07\x08\xf9\x0b\xfc\x09\x7e\x00\x37\xc0\x1b\xe0\x2a\x78\x0e\xfc\x72\x3f\x21\x1f\x82\x0f\xc0\x2e\x58\x00\xb3\xe0\xa7\xfb\xb0\x56\xf0\x36\xb8\x0e\x5e\x01\x5b\xe0\x02\xd8\x00\x8b\x60\x0e\xfc\x3e\x47\xc8\xc7\x40\x83\x16\x98\x05\x7f\x9f\x2d\x6b\x63\x65\x65\x65\x65\x75\xf7\x2b\x49\x44\xc0\xd3\x94\xb4\xf2\x9f\x90\x75\x08\x85\x5a\x5e\x10\xf6\x0d\x35\x71\x28\xda\x4e\xd4\xdf\x93\x9e\x71\xa8\x11\xaf\x9a\xb6\xb3\xde\x63\xc1\xbe\x70\xe8\x21\xf3\xfb\xa2\xba\x2c\xdc\xd6\x55\xd0\xf5\xb4\xa4\xab\xc3\x01\x42\x16\x45\x47\x4a\x73\x87\x06\x4c\x66\xd7\x47\x7c\xc5\xe9\xb4\xf6\x74\xe1\xb5\x2d\x8e\xe8\xc0\xe4\x14\xae\xcb\x35\xd7\x8b\x3e\xa7\x3b\xa7\x74\x55\x3e\x87\x77\xcd\xb9\xd5\x3b\xd7\x29\x96\x5f\xc5\x68\x35\x71\x8f\xb4\xb2\x42\x50\xe6\x1a\x4f\x05\x6d\xc7\xed\x65\x91\x1c\x2a\x85\xe9\x29\x8e\xb8\x2a\x32\xc8\x37\x49\xb8\xe8\x7a\x81\xa0\x4e\x57\xcb\xdd\xd2\x08\x65\xac\xea\x99\xbf\xa2\x56\xd3\x69\x75\xd5\x82\x99\x5a\x5d\x8b\xcb\xc2\xb5\x8c\x15\x09\x5f\xb8\xe6\x38\x81\xfc\xae\x0a\xb3\x65\x0e\xdc\xa4\x0a\x4c\x2f\x72\x3a\x5b\xf9\xb1\xd5\x2c\x9e\x4e\x34\xe7\x2c\x86\xf1\x06\xfe\x1d\x36\x6d\x15\xaf\x2a\x2b\xc7\x85\xcf\xe2\xdd\x6c\xd1\xe5\x7a\x2e\xf7\x44\x40\x2f\x1c\x0a\x1d\x8f\xd4\x3c\xe8\xcb\x3d\xa1\x51\x2b\x0f\x85\x5b\x72\xea\xfe\xa5\xeb\x25\xc3\xb4\xa1\x1b\xc8\x6d\xc4\x95\xe7\xd9\x17\x0e\x51\x66\x54\x95\x02\x95\xc6\xb3\x97\x36\xd7\xd3\xb4\xec\x5e\x1e\x69\xa7\xaf\xd1\x0a\x84\x19\x8e\x93\x55\xb3\x9a\x96\xc2\xa4\xd6\xf3\x35\xa9\xfa\x81\x81\xcf\x57\xef\x8f\x5d\x78\x64\x44\x88\x95\x37\x96\x96\x47\x93\x60\xb9\x67\x2d\xd4\x65\xb5\x4a\x93\x64\xf0\x03\x4c\x8c\x81\x0c\x77\x99\xef\x33\xd7\xcd\x0c\x31\x30\x8d\x34\xad\x8c\x37\xb5\x92\xb7\x9b\xcb\x78\xc8\xfa\xb8\x4b\x98\xc2\x2d\x76\x20\x28\xcb\xea\x15\x70\x2f\xd8\xa7\x17\x35\x17\xba\x98\xcf\xdc\x64\x68\x46\xa3\xd2\x6a\xca\x94\x56\x66\xff\x62\x4e\x77\x58\x4c\xb7\xd5\x51\xd5\x9d\xc1\x75\xe7\x5e\x6e\xca\xc4\x64\xfa\x91\xd0\xd9\x99\x43\xb1\x5f\xb9\x0a\xfc\xf8\x78\x6a\x1b\x9b\x52\x48\xcc\x2c\xed\x79\x9c\x8b\xa0\x53\xee\xe3\x91\x06\xa3\x7e\x52\x04\x66\x52\x67\x43\xec\x9c\x93\x9b\x9a\x59\x64\xfd\x1c\x69\x68\xf9\xb1\xa8\x5e\x59\x7f\x3a\xe6\x4b\x90\x24\x0b\x87\x8d\x2b\x65\x36\x69\xba\x9a\x5f\x6f\xe7\xe7\x4e\xe7\x84\x87\xb7\x7f\x62\x92\x44\xe7\xdf\xd4\x85\x83\xc5\x85\x43\xba\xda\xa6\x8d\x4d\x26\x1b\x6b\x65\x4d\x07\xeb\x1b\xfa\xc0\x18\x35\x9c\xd5\x48\xd3\xe0\x73\x67\xb9\x4d\xba\x37\x2e\xe7\xa1\x1c\x8b\x8b\xd5\xcc\x3b\xff\x99\x35\xc5\xbd\xf5\xbe\xd6\x68\xd0\xb8\x54\x8b\xf7\x78\x5d\x2a\xae\xd1\x5a\x85\xe8\x42\xd1\xf9\x31\x25\xa1\x8b\xf4\xb4\x45\xe9\x62\x3a\xcb\x5d\x85\xb5\x65\x11\x0b\xbf\x22\xf4\x70\xb5\x6a\x33\x7b\xd2\xd6\x3e\x61\x5b\xaf\x71\x5e\x6d\xe9\xec\x7c\x8c\x43\x7d\xee\xcb\xd7\x15\xa3\x1f\x32\x63\x90\x79\xdb\x69\x24\xe7\x17\x57\x96\xd2\x6c\x33\x5c\xeb\x7b\x5a\xf0\x29\x51\xee\x64\xf7\x90\xc1\xbe\xc1\xea\x68\x59\xb8\x49\x9b\x86\x71\x5e\x2e\x70\xca\xde\x81\xe1\xee\xc0\x12\xf5\xfa\x27\x00\x00\xff\xff\x1f\x54\xc3\x1e\x00\x30\x00\x00")

func assetsTemplatesFormsHtmlSwpBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesFormsHtmlSwp,
		"assets/templates/.forms.html.swp",
	)
}

func assetsTemplatesFormsHtmlSwp() (*asset, error) {
	bytes, err := assetsTemplatesFormsHtmlSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/.forms.html.swp", size: 12288, mode: os.FileMode(384), modTime: time.Unix(1489069137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIndexHtmlSwp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9a\x4f\x6b\x13\x41\x18\xc6\xa7\xbd\x78\xd0\xaa\xe8\x41\x45\x90\xc9\x0a\x62\xa1\xcd\x26\xd1\x62\x91\x74\x41\x8a\x8a\x62\xa4\x97\x8a\xd7\xd9\xdd\x49\x76\x70\x67\x67\xdd\x99\x6d\x1a\x96\xd5\x2f\xe0\xc5\x3f\x77\x2f\x7e\x05\x6f\x5e\xfc\x00\x0a\x7e\x04\xbd\x78\xf1\x23\x88\xf8\x6e\x92\x4d\x93\x26\x6d\xf4\xa2\x88\xef\x0f\x1e\x76\x67\xe6\x7d\xdf\x99\x3e\x33\x2c\x94\x8c\x5b\x7b\x70\xa7\x45\xaf\x55\xaf\x12\xe0\x24\x21\x15\xff\xfd\xc3\xd7\x47\x56\x16\xcf\x5f\x22\x44\x32\x63\x02\xde\x25\xf3\xb8\xcd\x13\xd3\x6b\xcc\x0d\x23\x4f\x86\x05\x6d\xed\x25\x22\x36\xda\xee\xa8\x90\x45\x1d\x5b\x27\x9e\xdd\x11\x26\x48\xdd\xaa\xa7\xa4\xed\x29\x9f\x27\x9e\x8a\x76\x54\xcf\x8e\x95\xf7\x88\x1b\xa9\x22\xde\xb3\x99\xd6\x1c\x92\x0c\x97\x71\xc8\x0c\xd7\xb6\x88\x7c\xbe\x5b\x0d\x8c\x0c\xe7\xcf\x8d\x20\xff\x35\xa9\x69\xaf\xae\x2f\x91\x2b\x8d\x7a\xad\x68\x5e\xb4\x2a\xf4\xf4\xa9\xed\xbf\xbd\x2a\x04\x41\x10\x04\x41\x10\x04\x41\xfe\x20\x26\x5e\x20\x4f\xe1\xb9\x38\x6c\x5f\x18\x3e\x17\xf6\x3d\x11\x04\x41\x10\x04\x41\x10\x04\x41\x10\x04\xf9\x77\x61\x3e\x21\x95\xa3\x84\xbc\x05\x15\xbf\xff\x97\xff\xff\x7f\x3b\x41\xc8\x47\xd0\x07\xd0\x3b\xd0\x1b\xd0\x2b\xd0\x4b\xd0\x0b\xd0\x73\x10\x07\xdd\x05\x7d\x3f\x0e\xe3\xa0\x36\x68\x19\x74\x0e\x74\x16\x74\x06\xf4\x75\x09\xf2\x41\xbb\xa0\x75\xd0\x8f\x63\x84\x3c\x03\x05\xa0\x0a\xe8\x0b\xcc\xfb\x19\xf4\xa9\x5c\x03\x82\x20\x08\x82\x20\x08\x82\x20\x13\x64\x59\x56\x5e\x82\xa5\x96\xcb\x34\xb7\xf2\x9c\x0e\x21\xe5\x4b\xd3\x6e\xab\x44\x3a\x64\xd4\xd1\xef\x14\x51\x9c\x1a\x6a\x7a\x31\xdf\xb0\x74\xea\x4a\x61\x2c\x6a\xf8\xae\xd9\xb0\x36\x13\x0e\xf5\x2c\xba\xc3\xc2\x94\x8f\x9a\xce\x44\xfa\xa6\x8a\xda\x22\x91\x74\x8b\x69\xdd\x55\x89\x4f\xaf\x4f\x56\x8c\x87\xfd\x16\x8d\x98\x2c\xda\x5d\xbf\x61\x39\x4d\x37\x99\x2c\x73\xb9\x25\x22\x21\x53\x49\xd7\x68\xc8\x8d\xe1\x89\x5e\x9e\x8a\x99\x3f\x45\xcc\x8a\xd4\x68\xc3\xaa\x66\x6b\x2b\x8d\x5a\x6e\xd1\x84\x3f\x4e\x45\xc2\x7d\x6a\x84\x09\x21\x76\x6d\xb5\x51\xa3\x5e\xc0\x12\xe6\x15\x93\x8c\xad\xaa\x3e\x63\x55\x37\x25\x13\xe1\xfe\xe9\x78\xd1\x59\x26\x0e\x1a\xd3\x99\x2d\x26\x22\xba\xad\x79\xb2\x3f\xbb\x70\xb6\x4c\x4e\x61\xbc\x78\x9b\x91\x7f\x8b\x49\x11\xf6\xe8\x7d\x18\x3d\xac\x42\xbb\x1f\x76\x40\x8d\x66\xd0\x70\x06\x7b\x56\x96\xbb\xe1\x79\x2a\x8d\x4c\xd3\x86\x91\xbd\x53\x51\x1c\x0a\x0a\x7e\x08\x05\xce\x45\xbc\x3b\x28\x6a\x51\xc9\x4d\xa0\x7c\x30\x47\x69\x03\xbb\x4e\xa6\xce\xd1\x2f\x1e\xa3\x7b\xaa\x23\xa2\xd1\x29\x1a\xb4\x7e\x77\x67\x47\xdb\x34\xcb\x6b\x2e\x5d\x30\x7a\x9e\x57\x23\xb7\xcb\x95\x64\x59\x75\x7b\xd8\x97\xe7\x07\xee\xc1\x5c\xf7\xc7\xeb\x0d\x52\x66\x56\x2b\x76\xa3\xff\xb7\x1f\xe6\x7e\x38\xb0\x6a\xca\xf9\x51\x78\x96\xf1\xc8\xcf\xf3\xbd\x74\xd7\x81\x69\x5b\x5c\xe7\x79\xd3\x76\x9d\xb1\x38\xd1\xa6\x55\x08\xdc\x8b\x0c\xea\xce\x56\xff\xea\x3c\x6d\x15\x77\xe7\x61\x19\x75\x87\x8c\x7f\x36\x02\xce\x7c\xf8\x6c\x90\x9f\x01\x00\x00\xff\xff\x29\x28\xe0\x6c\x00\x30\x00\x00")

func assetsTemplatesIndexHtmlSwpBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIndexHtmlSwp,
		"assets/templates/.index.html.swp",
	)
}

func assetsTemplatesIndexHtmlSwp() (*asset, error) {
	bytes, err := assetsTemplatesIndexHtmlSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/.index.html.swp", size: 12288, mode: os.FileMode(420), modTime: time.Unix(1489069093, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesUserhomeHtmlSwp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9a\x4f\x6b\x3b\x45\x18\xc7\xa7\x55\x90\xaa\xad\x5a\x85\x1e\xbc\x8c\x6b\x29\x5a\xea\x6e\x9b\x54\x2a\x75\x13\x91\x40\xc5\x43\x45\xaa\x2d\xe2\xc1\x32\xd9\x9d\x64\x97\x64\xff\xb8\x33\xdb\x18\x43\x14\x04\x2f\x4a\x0b\x42\x0f\x82\x7d\x01\x7a\xd2\xbb\x27\x3d\x79\xd0\x9b\x17\x0f\x1e\xf4\x2c\xf8\x16\xfc\xee\x6e\x4a\x63\x8d\x4d\x6a\xaa\xc5\xdf\xef\xf9\xc0\x87\xcd\xec\xf3\x3c\x33\xcf\xec\x1f\x68\x49\xea\xeb\x07\x2f\xef\xf2\x2d\x73\x93\x81\x87\x19\xfb\xe8\xcd\x6f\xde\xf8\xec\xbe\xb5\xd9\xc7\x57\x18\x0b\x84\xd6\x9e\xec\xb0\x71\xbc\x24\x13\xdd\x2d\x8d\x4d\x63\xef\x0d\x26\xb4\x94\x93\xf8\xb1\x56\x56\x33\x6a\x8b\xb0\x69\xa9\xc4\xb1\x9a\xbe\xf6\xd2\xba\xe9\x44\x81\xe5\x44\xae\x4c\x9c\x28\x3c\x8a\xba\x56\x1c\x39\x2d\xa9\x83\x28\x94\x5d\x4b\x28\x25\x51\xa4\x65\x10\xb7\x85\x96\xca\x4a\x95\x4c\xbc\x28\x90\xa6\xa7\x83\xf6\xf8\xe5\x09\xe2\xee\x25\xd5\x8d\x67\x9e\x9b\x67\xe5\xd2\xc6\x7a\x36\x7c\xd2\x78\x82\x3f\xba\xb8\x7f\xdb\x5d\x11\x04\x41\x10\x04\x41\x10\x04\xf1\x1f\xa2\xe3\x19\xf6\x3e\x8e\xb3\x83\xf1\xd2\xe0\x38\x73\xe9\x48\x10\x04\x41\x10\x04\x41\x10\x04\x41\x10\xc4\xff\x17\xe1\x32\xf6\xf1\x3c\x63\xf7\x2c\xb0\xfc\xfb\xff\xf3\xff\xff\x7f\x7b\x88\xb1\x1f\xe0\xd7\xf0\x4b\x78\x0c\x3f\x84\x11\x0c\xa1\x0f\x0f\xe0\x26\x7c\x0c\x7e\x8e\xfa\x33\x78\x0a\x4f\xe0\x31\x6c\xc3\x16\xdc\x83\x65\xb8\xb4\x50\xac\xb3\x0a\x67\xe1\xf7\x58\xf7\x13\xf8\x3a\xdc\x82\x8b\xf0\x11\x38\x07\x7f\x7d\x90\xb1\x5f\xe0\x4f\xf0\x2b\x58\x83\xcf\xc2\xa7\xe1\x8f\x0f\xa0\x27\x78\x06\x3f\x85\x27\xf0\x03\x98\xc0\xa7\xe0\xbd\xf0\xe7\xfb\x19\xfb\x0e\x7e\x0b\xdf\x85\x6f\x41\x1b\xee\xc1\x0d\xf8\xfb\x1c\x63\x5f\xc0\x53\xd8\x9a\xbb\xcd\x3b\x40\x10\x04\x41\x10\xc4\x1d\x4a\xaf\xa7\x65\x66\xf1\xd3\x45\x6e\xd4\x85\x92\x46\xbf\x8f\xbf\x49\xac\x46\x94\x04\x55\xc6\x81\xed\x87\x71\xaa\xb9\x1e\x99\x38\x71\x75\x37\x96\x15\x43\xa5\xf5\xc0\xd7\x06\xd7\xf2\x1d\x5d\x31\x6a\x9e\x08\x9b\xd2\x40\xde\xf4\xb3\x0c\xcd\x30\x7e\xb2\xab\x32\x6e\x66\x43\x7c\xd0\xc5\x34\xd7\x6c\x92\xb4\x9b\xea\x96\xd7\x2e\xcf\x34\x3c\xbe\xf8\xfc\x37\x0f\xcc\x44\x6d\xdc\x5c\xaf\x51\xd8\xf0\x93\x80\x6f\xa3\x62\x74\x9b\xd9\x02\xff\xca\x72\x43\x15\xb1\x50\xaa\x13\x25\xae\xc1\x43\x11\x5c\xfb\x25\xea\x5d\xf3\x21\x98\x2c\xff\xca\xa4\xa9\x2e\xc8\x14\xc5\xff\xac\x74\xe4\x86\x87\xcf\x35\x92\xe0\xd0\xf1\xb2\xbb\x60\x70\x73\x44\x4c\x69\x11\xba\x7e\xd8\x44\x94\x8f\x08\xc7\xa2\x5b\xd4\xfd\x25\x22\x5c\xf7\x50\x38\x4e\x94\x86\x7a\x90\x61\x5b\x69\x3b\xbb\x7e\x32\x74\x31\xe4\xf9\xdb\x7d\xf1\xd9\x6e\xfb\x55\x5b\x70\x2f\x91\x8d\x8a\x61\x1d\xf9\xb2\xf3\x42\x8a\x47\x42\x62\xe3\xcb\x47\xe6\xbe\x92\x49\x36\xea\xf7\x57\x84\x53\x9c\x7a\x25\x1f\x1a\xd5\xa1\x81\x6d\x89\xea\x4a\x58\x57\xf1\xf3\xbd\x5e\xfe\xb3\x72\x8e\x50\x2d\x4d\x12\x19\xea\x2c\x8a\x25\x06\xeb\xfa\x0d\x2e\xdf\xe6\x43\x13\xf3\xe5\x9d\x40\x06\xf9\x0e\x93\xec\xa9\xe5\xcb\xad\x35\xc4\xf9\x76\x85\x9b\x3b\x22\x30\x5f\x2c\xb6\xa2\xf2\x8c\x3c\xb7\x08\x15\x45\x76\xb6\x33\x04\xac\xd5\xd7\xbc\xa8\xc3\xcf\x93\x57\xad\x3c\xbd\xd8\xa4\xed\x95\xb9\xd3\xc6\x85\xae\x18\x81\x54\x4a\x64\x6f\x46\xaf\x67\xee\x4a\x95\xb5\xe6\x95\xb3\x4b\x83\xb6\x8a\x13\x59\x76\xf5\x7c\x9a\x22\x6a\x7b\xa5\x6a\xd6\x2d\x7f\x15\xa5\x78\x8d\x50\x5b\xac\x8e\x70\xe9\xcf\xcf\xa5\x27\x85\x9b\xdd\xe8\x3f\x02\x00\x00\xff\xff\x4a\xe1\xb1\x3c\x00\x30\x00\x00")

func assetsTemplatesUserhomeHtmlSwpBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesUserhomeHtmlSwp,
		"assets/templates/.userhome.html.swp",
	)
}

func assetsTemplatesUserhomeHtmlSwp() (*asset, error) {
	bytes, err := assetsTemplatesUserhomeHtmlSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/.userhome.html.swp", size: 12288, mode: os.FileMode(420), modTime: time.Unix(1489066638, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesFamilypageHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x93\xc1\x6e\x9c\x30\x10\x86\xef\x79\x8a\xd1\x9c\x12\xa9\x81\x86\x28\x97\x08\x90\xaa\x48\x91\x7a\x48\xb5\x52\xd5\x07\x30\x78\x36\x58\xb5\x0d\xb5\x8d\x76\x57\x16\xef\x5e\x83\x61\x59\xb8\x64\x2f\x8b\xcd\xff\xff\x33\xf3\x19\x7b\xef\x48\x75\x92\x39\x02\x6c\x88\x71\x1c\x86\x3b\x08\xbf\xbc\x79\x2a\xdf\x99\x12\xf2\x02\x07\xf6\x49\xaf\xe0\x7d\x12\xd6\x49\xdc\xfb\xc5\x14\x0d\x43\x9e\x06\x51\x54\xf7\x32\x3e\x78\x6f\x98\xfe\x24\x98\xb4\x1f\xa4\x2a\x32\x76\x4e\x9c\x74\x52\x94\xd7\x45\xd4\x27\x7f\x2c\x19\x3d\xe5\xc1\xe3\x63\xd8\xa8\x7e\x93\xa4\xda\x41\x72\x60\x86\xb4\x03\x8c\xff\x08\xf8\xd6\x08\x39\x36\x98\x57\x66\x4d\xc9\xd3\x25\xd3\x7b\xd2\x7c\x69\x3f\x5d\x3a\x1a\xc5\x57\x83\xf7\xe2\x08\xf7\xc2\x76\x31\x3a\x79\x57\xa4\xa6\x5e\x1f\x16\xdf\xb1\x35\x0a\x58\xed\x44\xab\x0b\x64\x9c\xab\x69\x06\x04\x45\xae\x69\x79\x81\x5d\x6b\x1d\x96\x70\xb7\x0e\x10\x12\xc3\xa4\x9b\x29\x9b\x67\xa8\x25\xb3\xb6\x40\x45\xd6\x06\x7c\x58\x86\x41\x83\x08\x26\x68\xcf\xe5\x8d\x7d\xed\x39\x5a\xb3\xf2\x07\xe7\x30\xa3\x8f\x04\x83\x25\x5b\x2d\x23\x7b\x78\x85\x5c\xe8\xae\x77\xe0\x2e\x1d\x15\xe8\xe8\x1c\x00\x8d\x14\x0b\xec\x67\x9e\xb8\x5a\x7e\x5a\x88\x10\x77\xb6\xba\xa1\xfa\x6f\xd5\x9e\x17\x6b\xc4\x82\xe5\x06\xf0\x21\x0c\x72\x6a\x0d\xdf\xd7\xec\xe6\x7d\x84\x8e\x39\x17\x6a\x16\x98\xf8\x97\x6f\xd9\xf7\x01\xc1\xd0\xbf\x5e\x18\xe2\x4b\xee\x89\x3f\xed\x52\xef\x3f\x84\x16\xaa\x57\xf0\x02\x92\x46\xbb\x7d\xd8\xbc\x7f\x6b\xf5\x51\x84\xa3\xf8\xba\xfa\xb5\x44\xb6\x2b\xb1\xd1\xdb\xbe\x52\xc2\xcd\x4c\xf2\x74\x3c\xe6\xed\x57\x73\x7b\x11\x2a\x66\x69\xbc\x08\xff\x03\x00\x00\xff\xff\x3b\xe2\xc7\x9e\x1d\x03\x00\x00")

func assetsTemplatesFamilypageHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesFamilypageHtml,
		"assets/templates/familypage.html",
	)
}

func assetsTemplatesFamilypageHtml() (*asset, error) {
	bytes, err := assetsTemplatesFamilypageHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/familypage.html", size: 797, mode: os.FileMode(420), modTime: time.Unix(1488902512, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesFormsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x55\xcf\x6e\xe2\x3e\x10\xbe\xf3\x14\x23\x8b\x63\x05\xb4\xbf\xdf\x09\x41\xa4\x8a\x6e\x6f\xfd\xa3\xdd\xee\x19\xb9\x78\x28\x51\xe3\x3f\x75\x9c\xb2\x51\xc4\xd3\xec\x9b\xec\x93\xed\x38\x71\x42\x02\x59\xe0\xb0\xa7\xcd\xa1\xb5\x3d\xdf\x37\x9e\xf9\x66\xc6\x14\x85\xc0\x75\xac\x10\xd8\xda\xca\x25\x17\x62\xc9\x57\x2b\x9d\x29\xc7\x76\xbb\x01\xd0\x37\x5b\x6b\x2b\x81\xaf\x5c\xac\xd5\x9c\x11\xa0\xb6\x83\x44\xb7\xd1\x62\xce\x8c\x4e\x1d\x8b\x2a\xf0\xe6\xbf\xe8\x56\x08\xb8\xad\x30\xb3\x31\xed\x2b\x43\xac\x4c\xe6\xc0\xe5\x06\xe7\xcc\xe1\x0f\xa2\x2b\x2e\x69\x9d\xa5\x68\xfd\x8a\x81\x45\x2e\xb4\x4a\x72\xf8\xe4\x49\x46\x96\xa2\x18\xdd\x4b\x94\xbb\x1d\x83\x4d\x2c\x04\xaa\x33\x9e\x42\x5c\x95\x33\xc3\x9d\x23\xc7\x73\x36\x2a\xfe\xbf\xba\x99\xec\xbc\xfb\x8f\x2c\xb6\x28\x7a\xbc\xa4\xd9\xab\x8c\xc9\x8f\xf7\x36\x67\x14\x3f\xab\x63\xf0\xeb\x40\x18\x7b\x1d\xa2\x41\x51\xa0\x12\x24\xcd\xa0\x25\x9c\x34\x4b\x99\x87\xeb\xd3\x5a\xb7\xa2\x18\xfa\xf0\x61\x3a\x87\x90\x47\xe5\x27\xc5\x04\x57\x2e\xc4\xbc\xb6\x5a\x86\x0b\x2a\x8e\xe5\xea\x0d\x61\xf8\x0e\x57\x30\xfc\xac\xb8\x5c\x8e\x82\x9c\x69\xf0\xb1\x87\xc7\x6b\xc0\x0f\x42\x8e\xbe\x07\x19\x61\xd8\xba\xab\xfe\x66\xda\xf8\xea\xed\x85\x25\xc2\x23\x81\x49\xda\xa8\xb5\x99\x7a\x8f\x52\x2b\xcc\xbd\xc7\x45\x66\x2d\x2a\xb7\xdb\xcd\xc6\x15\x3d\x3a\xb8\xbb\xd2\xa1\x6f\x3f\x1b\x57\x49\xee\xd5\xea\x8a\xc5\x93\xe4\x50\xad\xae\x2c\x4e\xf7\x8a\x72\x75\x5a\x92\xbe\x34\x6b\x5d\x28\xbb\xe3\xb4\xfb\x8d\xc7\xf9\x9e\xce\xad\xd3\x0a\x34\x43\x86\xe7\xfd\xb3\xe3\x0d\x7d\x43\x53\x0f\xce\x03\x7f\x47\xe0\xf0\xcc\x73\x89\x7f\x7d\x76\x00\x4a\x5f\xf7\xd4\x70\x53\x4a\xc8\xa1\x34\x09\x77\xc7\xdd\x0b\xa3\x10\xfb\x8b\x3e\xc6\xb5\x0b\xe7\x81\xb3\x57\x5b\x85\x78\x2b\xfd\x21\x35\xd0\xaf\x9f\x9d\x68\x55\x26\x5f\xd1\x32\x48\x1d\x9a\x39\x9b\x8c\x26\xd7\xa4\x40\x4c\x5a\x4c\x9a\xa9\x2d\x99\x2c\x6a\x5c\x3d\x67\x96\xb4\xc1\xe9\x89\xbc\x4d\x05\x69\x91\xce\x8c\x34\x49\x0a\x8f\x7a\xdb\x8c\x75\xbd\x3f\x3f\xda\x54\xcf\xd4\x71\x25\x62\xf5\xd6\x5f\xd4\xc6\x7a\x41\x65\xbf\x05\x2c\x3c\x59\x81\x76\x5f\xe0\x7f\xb0\x28\x25\x8b\xf2\xb5\x0e\xee\x28\xd2\x69\x97\x27\xe8\xa8\xe6\xa5\x1e\xc4\xf6\x8d\xeb\x6d\x5f\xef\x17\x7e\x48\x9b\xeb\x5f\x36\xa8\xe0\xcb\x27\xda\xfc\xc0\x51\x9d\x4a\x37\x7c\x81\x09\x8d\x5a\xd4\xf3\xb0\x94\x96\xa5\xe7\xb6\x2b\xd4\x7d\x37\x04\xcf\x53\x16\xdd\xd1\xdf\xe3\x97\xe0\x00\x4a\x8f\xa5\xdb\x10\xf8\xa1\xfc\xdf\x85\x37\x0f\x45\x93\xc5\x25\x9d\xba\xa0\x49\xf6\xda\x84\x0b\xc2\xf6\xa2\x3e\x5d\x6d\x0c\x4f\xcb\x07\xb5\xdb\xa1\xe1\xfc\x4f\x3f\xd7\x8b\x4d\xf9\xba\x3e\x13\x66\xab\xad\xd8\x77\xe5\x53\x22\x9a\x53\x38\xd0\xdd\x84\xf3\x5a\x71\x9d\x08\xb3\x15\xad\x8a\x3d\xe2\x16\xcc\x85\x64\x62\x5e\xb7\xa8\x0b\xad\xd6\x31\xc5\x7f\x9e\x75\xd3\x62\x9d\xd2\xb4\xcc\x70\xaf\x69\xb5\x8d\x06\x87\x7a\xfe\x0e\x00\x00\xff\xff\x5f\xb3\xa2\x61\x0b\x09\x00\x00")

func assetsTemplatesFormsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesFormsHtml,
		"assets/templates/forms.html",
	)
}

func assetsTemplatesFormsHtml() (*asset, error) {
	bytes, err := assetsTemplatesFormsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/forms.html", size: 2315, mode: os.FileMode(420), modTime: time.Unix(1489069137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\xcd\xce\x9b\x30\x10\xbc\xf3\x14\x2b\x9f\x5a\xa9\xcd\x0f\x52\x2e\x15\x20\x55\x51\x7b\x0a\x55\x2e\x7d\x00\x03\x4b\xb1\x8a\x6d\x6a\x9b\xa6\x11\xe2\xdd\x6b\xc7\x90\x90\x84\x34\xcd\x97\x13\xbb\x9e\x19\xaf\x66\x36\xee\x3a\x83\xbc\xa9\xa9\x41\x20\x15\xd2\x82\xf4\x7d\x00\xc3\x2f\xaa\xd6\xc9\x5e\xe6\x3f\xd1\x40\x2a\x05\x1e\xa3\xa5\x6d\x04\xe7\xe3\xae\x63\x25\x2c\xa6\xf8\x2c\xe9\xba\x45\x8a\xba\xef\xa3\x65\x96\x4c\x80\x28\x0a\x8b\x0b\x2e\xdc\xa8\x94\x8a\x03\xcd\x0d\x93\x22\x26\xb5\xfc\xc1\x04\x01\x8e\xa6\x92\x45\x4c\x1a\xa9\x0d\xb9\xd0\xfd\x28\x61\xb2\x73\x28\x3b\x43\x78\x7d\xf4\x95\x72\x56\x1f\x3f\x41\xc4\x44\xd3\x1a\x30\xc7\x06\x63\x62\xf0\x8f\x21\x20\x28\xb7\xdf\xe5\x09\x40\xe0\x37\xad\x5b\x5b\xda\x11\x3d\xa5\xef\x49\x12\x65\xea\x5a\x2d\x45\x9e\xa1\x82\x6f\x96\x09\xff\xd0\x6c\x35\x2a\xf7\x35\x55\xfd\x3e\xf4\x66\x75\xf7\x54\xeb\x83\x54\xc5\xad\x68\x33\xf4\x47\xe1\xe6\x50\xcc\xb0\xaf\x28\xba\xcd\x38\xb3\x93\xb8\x79\x62\xb2\xf3\xde\x0d\x63\xf8\xea\x42\x8e\x96\xce\xe8\xe4\xa1\xf3\x02\x0f\xa3\x3d\x4f\xdc\xdf\x2a\x74\x4b\xe2\xad\x83\xcf\x79\x2e\x5b\x61\x1e\xa5\xf1\xd4\x3f\x7f\xe9\xc9\xc1\x99\x0c\x28\x13\xe0\xdc\xfc\xaf\x04\xee\xf9\x5f\x38\x65\xf5\x2d\x17\x5d\x73\x24\xfb\xe2\x2d\x29\x35\xd4\x18\x7b\x71\x4c\x16\xdd\xe6\x43\xb8\xea\x09\x28\xfc\xd5\x32\x85\x05\x18\x66\x6a\x8b\xdd\x7c\x0c\x57\x90\x57\x54\x59\x8f\x51\xe9\x49\xb0\xeb\x99\x1b\xdf\xa5\x4c\x30\xde\x72\xd8\x40\x8d\x4e\x5a\xbf\xbf\xc3\x6c\xa5\x28\x99\x0d\xed\x85\x1d\x0a\x5f\x5b\x22\x1f\xee\x79\x8b\x86\x72\xf2\x5f\x1f\xf7\x68\xfa\x5c\x64\x54\xa3\x7d\x2e\x46\x48\xf0\x37\x00\x00\xff\xff\xdf\x16\x24\x30\x4b\x04\x00\x00")

func assetsTemplatesIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIndexHtml,
		"assets/templates/index.html",
	)
}

func assetsTemplatesIndexHtml() (*asset, error) {
	bytes, err := assetsTemplatesIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/index.html", size: 1099, mode: os.FileMode(420), modTime: time.Unix(1489069089, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesLayoutHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x51\x3d\x73\xb3\x30\x0c\xde\xf9\x15\x7e\xb5\xbf\xf5\xda\xc1\x78\xe9\xc7\xd4\x5e\x18\xb2\x74\x54\x40\x04\x5f\x8c\x9d\x43\xa2\x57\x8e\xcb\x7f\xaf\xc1\x6d\x43\x87\xc6\x8b\xbe\x9e\x47\x96\xf4\xcc\x73\x43\xad\x0b\xa4\xa0\x23\x6c\xe0\x72\x29\xcc\xbf\xc7\xdd\xc3\xfe\xad\x7a\x52\x9d\xf4\xde\x16\x26\x1b\x95\x9e\x59\x30\xd9\x5d\xc3\x9e\x04\x55\xdd\xe1\xc0\x24\x25\x8c\xd2\xfe\xbf\x87\x4d\xd9\xbb\x70\x52\x03\xf9\x12\x58\x26\x4f\xdc\x11\x09\x28\x99\xce\x54\x82\xd0\x87\xe8\x9a\x19\x54\x37\x50\x5b\x82\x66\xdd\xa3\x0b\x77\x4b\x6a\xd3\x42\x9c\x78\xb2\x55\xac\x4f\x24\xea\x35\x06\x9a\x8c\xce\xb9\x3c\x90\xbe\x4e\x64\x0e\xb1\x99\x36\xd4\xc6\xbd\xab\xda\x23\x73\x09\x3d\x85\x71\xd3\x75\x2d\xe3\xf7\xc7\x2d\xf6\xce\x4f\x60\x9f\x57\x6b\x34\xfe\x05\x3c\xd3\xc0\x31\xa0\x07\x5b\x7d\x79\x37\xc0\x32\x60\x60\xac\xc5\xc5\x90\x16\xda\x6f\xa2\x1b\x24\x1f\x8f\x71\x14\xb0\x2f\xf1\xa8\x76\xa3\xfc\x42\x1a\x9d\x16\xb2\xc5\x3c\x53\x68\x92\x4a\xe9\x5d\xa5\x3b\x20\xd3\x22\x5d\xc6\xe5\x3b\xa4\xd3\xac\xba\xfd\x10\x3e\x03\x00\x00\xff\xff\x7a\x8a\x17\xb6\xea\x01\x00\x00")

func assetsTemplatesLayoutHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesLayoutHtml,
		"assets/templates/layout.html",
	)
}

func assetsTemplatesLayoutHtml() (*asset, error) {
	bytes, err := assetsTemplatesLayoutHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/layout.html", size: 490, mode: os.FileMode(420), modTime: time.Unix(1488553008, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesNewaccountHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xe2\xb2\x81\xd0\x0a\x40\x60\x93\x91\x9a\x98\x02\x61\x82\xb9\x25\x99\x25\x39\xa9\x76\x1e\xa9\x39\x39\xf9\x36\xfa\x10\x0e\x42\x32\x37\xb5\x24\x51\x21\x39\x23\xb1\xa8\x38\xb5\xc4\x56\xa9\xb4\x24\x4d\xd7\x42\x09\x6a\x8c\x3e\xc2\x1c\x9b\xa4\xfc\x94\x4a\x24\x5d\x19\x86\x76\x7e\xa9\xe5\x0a\xa1\xc5\xa9\x45\x40\x65\x86\x08\x99\xea\xea\x82\xa2\xcc\xbc\x92\x34\x05\x25\xd5\x62\x25\x05\xbd\xda\x5a\xa8\x51\x10\xfd\x40\xb5\x10\xd7\x02\x02\x00\x00\xff\xff\xd6\x4d\xae\x17\xbf\x00\x00\x00")

func assetsTemplatesNewaccountHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesNewaccountHtml,
		"assets/templates/newaccount.html",
	)
}

func assetsTemplatesNewaccountHtml() (*asset, error) {
	bytes, err := assetsTemplatesNewaccountHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/newaccount.html", size: 191, mode: os.FileMode(420), modTime: time.Unix(1488373318, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesNewuserHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xe2\xb2\x81\xd0\x0a\x40\x60\x93\x91\x9a\x98\x02\x61\x82\xb9\x25\x99\x25\x39\xa9\x76\x1e\xa9\x39\x39\xf9\x36\xfa\x10\x0e\x42\x32\x37\xb5\x24\x51\x21\x39\x23\xb1\xa8\x38\xb5\xc4\x56\xa9\xb4\x24\x4d\xd7\x42\x09\x6a\x8c\x3e\xc2\x1c\x9b\xa4\xfc\x94\x4a\x24\x5d\x19\x86\x76\x7e\xa9\xe5\x0a\xa1\xc5\xa9\x45\x40\x65\x86\x08\x99\xea\x6a\xbd\x50\xbf\xc4\xdc\xd4\xda\x5a\x9b\xa4\x22\x24\x0d\x89\x0a\x19\x45\xa9\x69\xb6\x4a\xfa\x40\x6d\x8e\xc9\xc9\xf9\xa5\x79\x25\x4a\x60\x23\xa0\x1c\x1b\xfd\x44\x98\xad\x10\xab\x80\xc6\x42\x3c\x06\x08\x00\x00\xff\xff\xa6\xb7\x94\xc4\xea\x00\x00\x00")

func assetsTemplatesNewuserHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesNewuserHtml,
		"assets/templates/newuser.html",
	)
}

func assetsTemplatesNewuserHtml() (*asset, error) {
	bytes, err := assetsTemplatesNewuserHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/newuser.html", size: 234, mode: os.FileMode(420), modTime: time.Unix(1488373372, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesTransactionsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x90\xc1\x0a\xc2\x30\x10\x44\xef\xf9\x8a\x50\x7a\x94\x16\x3c\x96\x18\x28\x4a\xcf\x1e\xf4\x03\x52\xbb\x58\xb1\x49\x4a\xb2\x2d\x48\xc8\xbf\xbb\x51\xd4\x0a\xcd\x21\xb0\xbb\x8f\x61\x66\x42\x40\xd0\xe3\xa0\x10\x78\xd6\x83\xea\xb2\x18\x99\xe8\xb7\xf2\xe4\x94\xf1\xea\x82\x37\x6b\xbc\x28\x69\xc1\x04\xaa\x76\x00\xc9\x42\xa0\xd3\x15\x78\x7e\xdf\xe4\x33\xaf\x76\xbc\x68\x94\x2e\x96\x3c\x4f\x1a\xe8\x24\xe3\xf4\x04\x76\x32\x84\x7c\x2e\x1a\x67\xf5\xd9\x83\x8b\xb1\xfa\xce\xf5\x3e\x46\x51\x12\xf1\x8f\x1e\xc0\xe3\x12\x4d\xf3\x1a\xaa\xad\x81\x07\x27\xa0\xd6\x76\x32\xb8\xaa\x75\x9c\xdc\x68\x3d\x7c\x6e\xf4\x93\x31\x0a\x01\xa6\x7b\xd9\x7c\x87\x4a\x9b\x5f\x11\xad\xf2\x90\x8a\x78\x06\x00\x00\xff\xff\x56\x12\x6d\xf6\x1d\x01\x00\x00")

func assetsTemplatesTransactionsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesTransactionsHtml,
		"assets/templates/transactions.html",
	)
}

func assetsTemplatesTransactionsHtml() (*asset, error) {
	bytes, err := assetsTemplatesTransactionsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/transactions.html", size: 285, mode: os.FileMode(420), modTime: time.Unix(1489056589, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesUserhomeHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x91\x4f\x6b\xc3\x30\x0c\xc5\xef\xf9\x14\x22\x94\x1e\xca\x88\x61\xbd\x75\x8e\xc7\x18\xec\xb6\x31\x18\x3b\x17\x35\x51\x9b\xb0\xd8\xcd\xec\xa4\xa5\x18\x7f\xf7\xc9\xf9\xb3\x8d\x6e\xb9\x04\xeb\xf7\xa4\xa7\x67\x7b\xdf\x91\x6e\x1b\xec\x08\xd2\x8a\xb0\x4c\x43\x48\x64\x75\xab\xde\x1d\x59\x78\xc5\x03\xc1\x06\xbc\xcf\x9e\x34\xe9\x10\xa4\x60\xc2\x78\xad\x1e\x8a\xe2\xd8\x9b\xce\x71\x65\xad\x12\xef\xeb\x3d\x64\xcf\xe4\x86\xe6\x35\x14\x0d\x3a\x97\xa7\x9a\x9c\xe3\x09\xa9\xe2\x01\x03\x9c\xd5\x64\x4a\x56\x7a\x2f\x56\x6f\xd5\xf1\x0c\xf3\xb0\x95\xe0\x6a\x22\xfb\x26\x6a\x16\xd1\x12\x36\x39\x4c\xde\x5c\xb2\x68\x78\x9f\xc5\xc7\x0d\x2c\x4e\x23\x41\x9d\xcd\xcd\xac\x00\xfe\x86\x55\xe8\x93\x15\x59\x8c\x60\x50\x73\xc7\x34\x21\x72\xd9\xd4\x4a\x22\x54\x96\xf6\x79\x2a\x4e\x35\x9d\xef\xfb\x28\xca\xd9\xf1\xa7\x25\x84\x25\x16\x63\xe9\x65\x38\xc6\x0c\xdf\x07\x29\x50\x2d\xcd\xce\xb5\x77\xde\xeb\xa3\xa1\x4b\x74\x7b\xec\xad\x25\xd3\x45\xca\x16\xd3\x2e\x73\xd0\xf1\x2f\x45\x8c\x96\xfc\xbe\xf2\xbd\xd5\x5b\x2c\xcb\x2d\x8e\x29\x52\xc8\xe2\x15\x5c\x2b\x5a\xbc\x8c\xe4\x1a\xb8\x0e\x4d\x59\x9b\x03\x53\xf8\x07\x17\x55\xcb\x0f\xf1\xb7\x75\x87\x8e\xe2\x43\x7f\x05\x00\x00\xff\xff\x22\xff\xd7\x4d\xfd\x01\x00\x00")

func assetsTemplatesUserhomeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesUserhomeHtml,
		"assets/templates/userhome.html",
	)
}

func assetsTemplatesUserhomeHtml() (*asset, error) {
	bytes, err := assetsTemplatesUserhomeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/userhome.html", size: 509, mode: os.FileMode(420), modTime: time.Unix(1489066634, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesViewacHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x52\xc1\x6a\xeb\x30\x10\xbc\xe7\x2b\x96\xe0\x43\x02\x0f\x07\xde\x31\xa8\x06\x93\x52\x28\x94\xb4\x84\xe4\x03\x64\xb4\x8d\x4d\x63\xd9\x95\xe4\xd0\x22\xfc\xef\x5d\x59\x72\x6d\xc7\xa1\xb9\x64\x35\x3b\xde\x99\x91\xd6\x5a\x83\x65\x7d\xe1\x06\x61\x99\x23\x17\xcb\xb6\x5d\x00\xfd\xac\x8d\x4c\x55\xc3\xf6\x01\x62\x42\x58\xfe\x3f\xb1\x36\x4e\x77\xf1\x49\xa3\x92\xbc\xc4\xb6\x85\x2d\x78\x68\xdf\x1d\xd9\x86\x38\x0b\x66\x78\x76\xc1\xa4\x1b\xc1\x8c\xf2\x85\x3f\xe4\xc9\xa1\x91\xb2\x90\x67\xb6\xa1\x7a\xd2\x78\xde\xcf\xb1\xd7\xd3\xf1\x0e\x68\x72\x54\x73\xf8\xad\x51\x75\xa5\x71\x68\x50\x15\xb4\xad\x55\x5c\x9e\x11\xa2\x0f\xf8\x17\x5d\xbb\x3c\x2f\x85\x36\x21\xe5\x8d\x45\x91\xb0\x8c\x72\x96\x95\xc4\x6f\x58\x15\x52\xe0\x17\xb8\x6b\x88\x0f\x47\x1a\xb0\x76\x21\xb3\x84\x66\x8b\xe1\x23\x6b\x8b\x77\xe0\x52\xc0\x0a\x3f\x3d\x77\x74\x49\x10\x5d\xe3\x27\x55\x95\xee\xbc\x9e\x30\xf6\xa3\x6e\xba\x5b\x03\xf9\x99\xfa\x70\x22\xae\xe8\xdd\x10\x37\x2d\xab\x46\x1a\x67\xe2\xb7\x47\xe8\x23\x6a\xe3\xe6\x87\x07\x09\x48\xba\x0b\xbc\x91\x51\xbc\x68\x0c\xb9\x7b\x99\xbf\xa6\x4f\x65\xfa\x18\x83\x8c\xb7\x7e\x47\x46\x8a\x99\x0a\xd1\xc3\x1b\xdd\xf2\x7d\x5f\xb8\xfd\x73\xd6\xe9\xbf\x67\xcc\x1e\xd2\x0f\x26\xc4\xaf\xd8\x62\xbc\xba\x19\xd7\xe8\x56\xf7\x27\x00\x00\xff\xff\x9b\x2c\xf2\x0e\xcf\x02\x00\x00")

func assetsTemplatesViewacHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesViewacHtml,
		"assets/templates/viewac.html",
	)
}

func assetsTemplatesViewacHtml() (*asset, error) {
	bytes, err := assetsTemplatesViewacHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/viewac.html", size: 719, mode: os.FileMode(420), modTime: time.Unix(1489063791, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/s/main.css": assetsSMainCss,
	"assets/templates/.forms.html.swp": assetsTemplatesFormsHtmlSwp,
	"assets/templates/.index.html.swp": assetsTemplatesIndexHtmlSwp,
	"assets/templates/.userhome.html.swp": assetsTemplatesUserhomeHtmlSwp,
	"assets/templates/familypage.html": assetsTemplatesFamilypageHtml,
	"assets/templates/forms.html": assetsTemplatesFormsHtml,
	"assets/templates/index.html": assetsTemplatesIndexHtml,
	"assets/templates/layout.html": assetsTemplatesLayoutHtml,
	"assets/templates/newaccount.html": assetsTemplatesNewaccountHtml,
	"assets/templates/newuser.html": assetsTemplatesNewuserHtml,
	"assets/templates/transactions.html": assetsTemplatesTransactionsHtml,
	"assets/templates/userhome.html": assetsTemplatesUserhomeHtml,
	"assets/templates/viewac.html": assetsTemplatesViewacHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"s": &bintree{nil, map[string]*bintree{
			"main.css": &bintree{assetsSMainCss, map[string]*bintree{}},
		}},
		"templates": &bintree{nil, map[string]*bintree{
			".forms.html.swp": &bintree{assetsTemplatesFormsHtmlSwp, map[string]*bintree{}},
			".index.html.swp": &bintree{assetsTemplatesIndexHtmlSwp, map[string]*bintree{}},
			".userhome.html.swp": &bintree{assetsTemplatesUserhomeHtmlSwp, map[string]*bintree{}},
			"familypage.html": &bintree{assetsTemplatesFamilypageHtml, map[string]*bintree{}},
			"forms.html": &bintree{assetsTemplatesFormsHtml, map[string]*bintree{}},
			"index.html": &bintree{assetsTemplatesIndexHtml, map[string]*bintree{}},
			"layout.html": &bintree{assetsTemplatesLayoutHtml, map[string]*bintree{}},
			"newaccount.html": &bintree{assetsTemplatesNewaccountHtml, map[string]*bintree{}},
			"newuser.html": &bintree{assetsTemplatesNewuserHtml, map[string]*bintree{}},
			"transactions.html": &bintree{assetsTemplatesTransactionsHtml, map[string]*bintree{}},
			"userhome.html": &bintree{assetsTemplatesUserhomeHtml, map[string]*bintree{}},
			"viewac.html": &bintree{assetsTemplatesViewacHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

