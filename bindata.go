// Code generated by go-bindata.
// sources:
// assets/s/main.css
// assets/templates/.forms.html.swp
// assets/templates/familypage.html
// assets/templates/forms.html
// assets/templates/index.html
// assets/templates/layout.html
// assets/templates/newaccount.html
// assets/templates/newuser.html
// assets/templates/transactions.html
// assets/templates/userhome.html
// assets/templates/viewac.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsSMainCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8b\xb1\xae\xc2\x30\x0c\x45\xf7\x7c\x85\xa5\xb7\x3e\xb1\xa0\x0c\x4d\xbf\x26\xc6\x75\x14\xd1\xd8\x91\x49\x24\x10\xe2\xdf\x29\xa1\x2c\x70\xc7\x7b\xce\x41\xa5\xdb\xdd\xc1\x36\x8c\xa7\x73\x32\xed\x42\xe1\x6f\x9a\x98\x11\x67\xf7\x70\xee\x50\x16\xe9\xf0\xab\x78\xcf\x1c\xe3\x50\x58\xad\x7c\x0c\x35\x5a\x2c\xf8\x7a\x85\x8b\xae\x99\x00\xd7\xad\x99\x07\x2b\xd1\x52\x96\x17\x1b\x55\x96\xda\x1b\xfc\x03\xf6\xd6\x54\xf6\xfe\xcb\x69\xb4\xff\x35\x12\x65\x49\xe1\xf8\x06\xcf\x00\x00\x00\xff\xff\x54\x41\xbd\xbe\xb6\x00\x00\x00")

func assetsSMainCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsSMainCss,
		"assets/s/main.css",
	)
}

func assetsSMainCss() (*asset, error) {
	bytes, err := assetsSMainCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/s/main.css", size: 182, mode: os.FileMode(420), modTime: time.Unix(1489057121, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesFormsHtmlSwp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9a\x3d\x6c\x1c\x45\x14\xc7\x27\x51\x48\x02\x89\x43\x14\x84\x14\x21\x8a\xc9\xe2\x02\x24\x73\x67\x3b\x41\x46\xd6\xdd\x21\xcb\xc1\x88\xc2\x1f\x22\x09\xa4\x01\x33\xbe\x99\xf3\xad\xbc\xbb\xb3\xcc\xcc\xda\x9c\x96\x03\x51\x40\x0f\x94\xc8\x05\xa2\xa0\x80\x9a\x82\x02\x21\x0b\x08\x25\x15\x55\x40\x48\x48\x88\x86\x06\xd1\x59\x48\xfc\xf7\xe3\xd6\x7b\x67\xfb\x2e\x08\x81\x05\x99\xbf\xf4\xcb\xdd\xec\xbe\xf7\x76\xde\xc7\xac\x14\xf9\xd6\x26\x9f\x7f\x76\x91\xce\x54\xae\x10\xe8\x3c\x21\xe7\xde\xd9\xb9\xb9\x7b\x62\xe2\xf8\x77\x0f\x13\xe2\x33\x63\xda\x62\x8b\x8c\xd2\x33\x42\x99\xce\xf4\x48\x33\xf2\x7a\x1e\xb0\xaa\x9b\xca\x0d\x8d\xae\xae\x4b\x8f\x05\xeb\x55\xad\x9a\xd5\x75\xd7\xb4\xa3\xb5\x4a\x53\xfa\xd5\xa6\xe4\x42\x35\x65\xb0\x29\x3b\xd5\x50\x36\x37\x84\xf1\x65\x20\x3a\x55\xa6\xb5\x80\x93\x11\x7e\xe8\x31\x23\x74\xb5\x25\x95\xaf\x2b\x6d\xe3\x7b\xa3\x9f\x6d\x65\x75\x57\x2b\x32\xad\xc7\x9f\x1c\x23\x97\xa7\xa7\x26\x93\xe5\x23\xce\x25\xfa\xc0\x85\x1b\x47\xbd\x2b\x2b\x2b\x2b\x2b\x2b\x2b\x2b\x2b\x2b\x2b\xab\x7f\x51\x26\x3c\x46\xde\xc0\xe7\xf1\x7c\x3d\x97\x7f\x1e\x1b\xf8\xb4\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xfa\xef\x8a\x71\x42\x7e\xb9\x87\x90\xd3\xa7\x48\xfa\xf7\xff\xde\xff\xff\x7f\xba\x9f\x90\x4f\xc1\x36\xb8\x06\xc6\xc0\xed\x73\x84\x7c\x0b\xbe\x01\xb7\xc0\xc7\xe0\x5d\xb0\x02\x7e\x1c\xc3\x3d\xb0\x03\x3e\x03\xdb\xe0\x6d\xf0\x22\x38\x01\x7e\x3f\x4b\xc8\xcf\xe0\x07\xf0\x3d\xb8\x0d\x6e\x81\x0f\xc0\x9b\xe0\x09\x70\x26\xb9\x7f\x86\x90\xf7\xc0\x4b\xe0\x12\x78\x10\x8c\x81\xb3\xe0\xb7\xfb\x08\xf9\x12\x6c\x03\x0d\x16\xc0\xee\xbd\x84\x7c\x0d\xbe\x02\xaf\x81\x19\x70\x11\xfc\x7a\x9a\x90\xcf\xc1\x27\xe0\x23\xe0\x81\x97\xc1\x4d\xf0\x02\x78\x0a\x3c\x04\xfe\x40\xde\x5f\x80\xb7\xc0\x32\xb8\x08\xce\x9f\xca\xea\x71\x01\xec\x9e\x84\x0d\x78\xff\xe4\x51\x76\xc9\xca\xca\xca\xea\xae\x52\x1c\x8b\x80\x77\xbb\xa4\x96\xfe\xd0\xab\x41\x28\x54\x73\x83\x30\x32\xd4\x74\x42\x51\x77\x74\xb4\xe6\xbb\xc6\xa1\x46\xbc\x6a\xea\xce\x7c\x9b\x05\xeb\xc2\xa1\x9b\xcc\x8b\x44\xb1\xcc\xdc\xe6\x65\xd0\x72\x95\x4f\x67\xcb\x01\xfa\xe2\xff\xd3\x0f\xab\x3b\x21\xd3\x7a\x4b\x2a\xee\xd0\x80\xf9\xc9\x7a\x8b\x4f\x3b\x8d\xda\x9a\xca\xbc\x96\xc4\x16\xed\x99\xdc\x81\xeb\x54\xc9\x75\xd9\xe3\x74\xe5\x0e\x5d\xa5\xc7\xe1\x5d\x72\xae\xb5\x2f\x37\xb2\xed\x17\x31\x6a\x55\x5c\x23\xb5\xa4\x10\x94\x35\x8d\x2b\x83\xba\xd3\x6c\x27\x91\x1c\xea\x0b\xd3\x96\x1c\x71\xa5\x36\xc8\x37\x8e\xb9\x68\xb9\x81\xa0\x4e\x4b\xf9\xab\xb9\x11\xca\x58\x34\x2f\x7d\x44\xa9\xa6\xa3\xea\xaa\x04\x33\xa5\xba\x66\xcb\xcc\x35\x8f\xa5\x85\x27\x9a\x66\x2f\x81\xf4\xaa\x0c\x93\x6d\xf6\xdc\x7c\x19\x98\xb6\x76\x1a\x8b\xe9\x67\xad\x9a\xdd\x3d\xd4\x9c\xb3\x0e\x8c\xaf\xe2\xdf\x7e\xd3\x5a\xf6\xa8\xbc\x72\x5c\x78\xac\xb3\x9a\x6c\x3a\xdf\xcf\xf5\xb6\x08\xe8\xd3\x9b\x42\x75\x06\x6a\x1e\x44\xfe\x9a\x50\xa8\x95\x8b\xc2\x4d\x3a\x65\xff\x22\xb3\x99\x3c\xc8\x35\xc3\x94\xa1\x57\x91\xe5\x40\x10\x9e\xd6\x21\x73\xd5\x89\x51\xe1\x8a\x9a\xe3\xde\x73\x0b\xf3\xdd\x6e\xde\xc7\x34\xd2\x4a\xa4\xd0\x14\x84\xe9\x8f\x93\xd4\xb5\x98\x9b\xcc\xa4\xd4\xfd\x39\x5f\x46\x81\x81\xcf\xce\x87\x07\xa6\xa0\x8d\x08\x91\x43\x65\x72\x6a\x30\x1d\x96\x7a\x96\x42\x5d\x97\xb3\x34\x8e\x7b\xbf\xce\xc4\x40\xf8\xe1\x2a\xf3\x3c\xd6\x6c\x26\x86\x18\x9d\x4a\xb7\x5b\x18\x2f\x28\xe9\xef\x37\xf7\x3b\x7d\xd6\x7b\xfd\xc2\x3c\x2e\xb2\x0d\x41\x59\x52\xaf\x80\xbb\xc1\x3a\x5d\x56\x5c\xa8\x6c\x52\x53\x93\xbe\x69\x65\x9c\xeb\xdc\x70\xc4\xc8\x16\x66\x7f\x63\x68\x57\x58\x87\x2e\xc9\xad\xa2\x41\xbd\x75\xe3\xff\xdc\x97\x43\x93\x89\xb4\x50\xc9\x37\x87\xe2\xf0\x72\x19\x78\x9d\xbd\xc1\xad\x2c\xf8\xc2\xc7\xd8\xd2\xb6\xcb\xb9\x08\x1a\xf9\xa1\x1e\xe8\x31\xea\xe7\x8b\xc0\x1c\xd6\xdc\x30\x39\x46\x43\x9b\x9a\x58\x24\xfd\x1c\x68\x68\xfe\xe6\x28\x1e\x59\xbe\x7b\xc0\x6b\x21\x8e\xc7\x37\x2b\x37\xf2\x6c\xba\xdd\xd9\x74\xbd\x94\x7e\x77\x1a\x43\x6e\xee\x7f\xdf\xc4\xb1\x4a\x5f\xb0\xe3\x1b\x13\xe3\x9b\x74\xb6\x4e\x2b\x0b\xcc\xaf\xcc\xe5\x35\xed\xed\xaf\xef\x6d\x63\x64\x7f\x56\x03\x4d\x83\xcf\x91\xe4\x36\x9b\x44\x4e\x7f\x8e\x4d\x71\x6d\x3e\x52\x0a\x8d\x1a\x9e\x32\x9d\xa0\x59\xd2\x8f\x62\xf7\x42\xeb\xb9\x79\xdd\x9f\x3f\x4d\xa7\x22\xbd\xf6\xd8\x81\xb5\x68\x61\x28\xf7\x55\xa3\x34\x93\xc3\x8e\xee\x90\x63\x3b\xc7\x79\x71\x64\x93\xef\x07\x38\x94\xe7\x3a\x7f\x5c\x36\xda\x21\x33\x06\xf5\xa9\x3b\x95\xf8\xca\xc4\xf4\x64\x37\x19\xf6\x57\x22\x57\x09\x3e\x22\xca\x5f\x39\x1d\xa4\x77\x2e\xb0\x3b\x9a\x57\x6b\xc8\x1b\x2f\xdf\xe0\x88\xb3\x01\xc3\xd5\x9e\x25\xea\xf5\x67\x00\x00\x00\xff\xff\x42\xa5\xc2\x5e\x00\x30\x00\x00")

func assetsTemplatesFormsHtmlSwpBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesFormsHtmlSwp,
		"assets/templates/.forms.html.swp",
	)
}

func assetsTemplatesFormsHtmlSwp() (*asset, error) {
	bytes, err := assetsTemplatesFormsHtmlSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/.forms.html.swp", size: 12288, mode: os.FileMode(420), modTime: time.Unix(1489146130, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesFamilypageHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x93\xc1\x6e\x9c\x30\x10\x86\xef\x79\x8a\xd1\x9c\x12\xa9\x81\x86\x28\x97\x08\x90\xaa\x48\x91\x7a\x48\xb5\x52\xd5\x07\x30\x78\x36\x58\xb5\x0d\xb5\x8d\x76\x57\x16\xef\x5e\x83\x61\x59\xb8\x64\x2f\x8b\xcd\xff\xff\x33\xf3\x19\x7b\xef\x48\x75\x92\x39\x02\x6c\x88\x71\x1c\x86\x3b\x08\xbf\xbc\x79\x2a\xdf\x99\x12\xf2\x02\x07\xf6\x49\xaf\xe0\x7d\x12\xd6\x49\xdc\xfb\xc5\x14\x0d\x43\x9e\x06\x51\x54\xf7\x32\x3e\x78\x6f\x98\xfe\x24\x98\xb4\x1f\xa4\x2a\x32\x76\x4e\x9c\x74\x52\x94\xd7\x45\xd4\x27\x7f\x2c\x19\x3d\xe5\xc1\xe3\x63\xd8\xa8\x7e\x93\xa4\xda\x41\x72\x60\x86\xb4\x03\x8c\xff\x08\xf8\xd6\x08\x39\x36\x98\x57\x66\x4d\xc9\xd3\x25\xd3\x7b\xd2\x7c\x69\x3f\x5d\x3a\x1a\xc5\x57\x83\xf7\xe2\x08\xf7\xc2\x76\x31\x3a\x79\x57\xa4\xa6\x5e\x1f\x16\xdf\xb1\x35\x0a\x58\xed\x44\xab\x0b\x64\x9c\xab\x69\x06\x04\x45\xae\x69\x79\x81\x5d\x6b\x1d\x96\x70\xb7\x0e\x10\x12\xc3\xa4\x9b\x29\x9b\x67\xa8\x25\xb3\xb6\x40\x45\xd6\x06\x7c\x58\x86\x41\x83\x08\x26\x68\xcf\xe5\x8d\x7d\xed\x39\x5a\xb3\xf2\x07\xe7\x30\xa3\x8f\x04\x83\x25\x5b\x2d\x23\x7b\x78\x85\x5c\xe8\xae\x77\xe0\x2e\x1d\x15\xe8\xe8\x1c\x00\x8d\x14\x0b\xec\x67\x9e\xb8\x5a\x7e\x5a\x88\x10\x77\xb6\xba\xa1\xfa\x6f\xd5\x9e\x17\x6b\xc4\x82\xe5\x06\xf0\x21\x0c\x72\x6a\x0d\xdf\xd7\xec\xe6\x7d\x84\x8e\x39\x17\x6a\x16\x98\xf8\x97\x6f\xd9\xf7\x01\xc1\xd0\xbf\x5e\x18\xe2\x4b\xee\x89\x3f\xed\x52\xef\x3f\x84\x16\xaa\x57\xf0\x02\x92\x46\xbb\x7d\xd8\xbc\x7f\x6b\xf5\x51\x84\xa3\xf8\xba\xfa\xb5\x44\xb6\x2b\xb1\xd1\xdb\xbe\x52\xc2\xcd\x4c\xf2\x74\x3c\xe6\xed\x57\x73\x7b\x11\x2a\x66\x69\xbc\x08\xff\x03\x00\x00\xff\xff\x3b\xe2\xc7\x9e\x1d\x03\x00\x00")

func assetsTemplatesFamilypageHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesFamilypageHtml,
		"assets/templates/familypage.html",
	)
}

func assetsTemplatesFamilypageHtml() (*asset, error) {
	bytes, err := assetsTemplatesFamilypageHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/familypage.html", size: 797, mode: os.FileMode(420), modTime: time.Unix(1488902512, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesFormsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x55\xcb\x6e\xdb\x3a\x10\xdd\xfb\x2b\x08\x22\x8b\x7b\x81\x40\x71\x72\x2f\x50\xc0\xb0\x04\x18\x4e\xbd\xcb\x03\x6d\xba\x36\x18\x73\x1c\x09\x11\x1f\xa5\x28\xbb\x82\xa0\xaf\xe9\x9f\xf4\xcb\x3a\x94\x28\x59\x72\x1c\xdb\x05\xb2\xaa\x16\x09\x1f\x67\x0e\x67\xce\x3c\x5c\x96\x1c\xd6\x89\x04\x42\xd7\x46\x2c\x19\xe7\x4b\xb6\x5a\xa9\x5c\x5a\x5a\x55\x23\x82\xdf\x74\xad\x8c\x20\x6c\x65\x13\x25\x43\x8a\x80\xf6\x9e\x08\xb0\xb1\xe2\x21\xd5\x2a\xb3\x34\x6a\xc0\xf1\x7f\xd1\x8c\x73\x32\x6b\x30\xd3\x2b\xdc\x37\x17\x89\xd4\xb9\x25\xb6\xd0\x10\x52\x0b\x3f\xd0\x5c\x32\x81\xeb\x3c\x03\xe3\x56\x94\x18\x60\x5c\xc9\xb4\x20\x1b\x96\xe6\x78\x53\x96\xc1\x42\x80\xa8\x2a\x4a\xe2\x84\x73\x90\x27\x98\xbc\x5f\x0d\x99\x66\xd6\x22\x71\x48\x83\xf2\xff\xcb\x9b\x71\xe5\xe8\xbf\xe7\x89\x01\x7e\x80\x25\xcb\x9f\x45\x82\x3c\x8e\x2d\xa4\xe8\x3f\x6d\x7d\x70\x6b\x6f\x70\xe5\x74\x88\x46\x65\x09\x92\xa3\x34\xa3\x9e\x70\x42\x2f\x45\xe1\x9f\xcf\x3a\xdd\x32\x48\x61\x65\xbd\x73\x6b\xa3\x84\x67\x72\x5f\x59\x1a\x26\x5f\x80\x5c\xbc\x92\x4b\x72\xb1\x21\x93\x90\xfc\x83\x04\x90\x65\xb3\x79\x46\x82\x05\x13\x81\x97\xd0\xed\x50\x85\xfa\xec\x5f\x4f\x5d\xd3\x2b\xed\x32\xb2\x13\xeb\x62\x13\x7c\xf3\x5a\x56\xd5\xa4\xde\xdf\xd7\x6b\x1a\x1d\xb9\x9c\x38\x5f\x84\x92\x50\xa0\x1b\xc1\x3c\x37\x06\xa4\xad\xaa\xe9\x55\x43\xdf\xf7\xb8\x89\xbb\xd1\xa2\x89\x6d\xa7\xc6\x50\x0c\x96\xa6\xc7\xd5\xb0\xea\xa0\x16\x97\x8d\x12\x83\xf0\x3f\x3e\xe4\x3f\x8d\x6d\x90\x6a\xec\x11\xcd\x8a\xc3\xbd\xe1\x2e\x0e\x35\x45\xdb\x18\x77\xec\x15\x08\x23\x8f\xac\x10\xf0\xe1\xbd\x41\x48\xcd\xb5\xc0\x3a\x9b\x60\x40\x16\x84\x4e\x99\x7d\x5b\x9d\x24\xf0\xbe\x3f\xa9\xb7\xb8\x7e\xe2\x1c\x70\xfa\x6c\x1a\x17\x67\xc2\x1d\x62\xb1\xfc\xfa\x39\xf0\x56\xe6\xe2\x19\x0c\x25\x99\x05\x1d\xd2\x71\x30\xbe\x46\x05\x12\xd4\x62\xdc\x75\x65\x6d\x49\xa3\x8e\xea\x31\x37\xa8\x0d\x4c\x8e\xc4\xad\x1b\x48\xcf\xe8\x44\xcb\xa2\xa4\xe4\x5e\x6d\xbb\xb6\x6d\xf7\xa7\x5b\x17\xf3\x99\x59\x26\x79\x22\x5f\xde\x1d\x78\x1d\xe0\x8c\xe4\x7e\xf5\x58\xf2\x60\x38\x98\x5d\x8e\xff\xc2\xbc\xd4\x56\x18\xaf\xb1\xe4\x16\x3d\x9d\x0c\xed\x38\x1e\xb5\x76\x99\x03\xd1\x5d\xed\xba\xbb\x2f\x8b\xb9\xeb\xd3\xee\xf9\xa7\x18\x24\xf9\xbc\x01\x53\xec\x11\xb5\xa1\x0c\xdd\xe7\x90\xba\x6e\xf3\x94\x9f\xda\x4c\x0f\xa6\x4c\x8d\x59\x3a\x96\x7e\xae\x86\x43\x84\xb3\x22\xa3\xd1\x2d\xfe\x7d\x3b\x16\xf6\xa0\x38\x25\x6d\x8c\xe0\xbb\xfa\xff\x10\xde\x4d\x8d\x2e\x9e\x73\xca\x76\x8e\x6d\xed\x54\xf2\x0f\xf8\xed\x59\x45\xbb\x8a\x35\xcb\xea\xe9\x3a\x2c\x57\x7f\xfe\xde\x6f\xf3\x3c\xae\x47\xed\x23\x62\xb6\xca\xf0\x5d\x7d\x3e\xa4\xbc\x3b\x25\x7b\x19\xd0\xfe\xbc\xd5\x5e\xa5\x5c\x6f\x79\x2f\x77\xf7\xb0\x25\xfa\x4c\x63\xb4\xbc\xee\x99\xce\x95\x5c\x27\xe8\xff\x69\xab\x9b\x9e\xd5\x31\x4d\xeb\x08\x77\x9a\x36\xdb\x68\xb4\xaf\xe7\xef\x00\x00\x00\xff\xff\x10\x3c\x10\x11\xf8\x08\x00\x00")

func assetsTemplatesFormsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesFormsHtml,
		"assets/templates/forms.html",
	)
}

func assetsTemplatesFormsHtml() (*asset, error) {
	bytes, err := assetsTemplatesFormsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/forms.html", size: 2296, mode: os.FileMode(420), modTime: time.Unix(1489146126, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\xcd\xce\x9b\x30\x10\xbc\xf3\x14\x2b\x9f\x5a\xa9\xcd\x0f\x52\x2e\x15\x20\x55\x51\x7b\x0a\x55\x2e\x7d\x00\x03\x4b\xb1\x8a\x6d\x6a\x9b\xa6\x11\xe2\xdd\x6b\xc7\x90\x90\x84\x34\xcd\x97\x13\xbb\x9e\x19\xaf\x66\x36\xee\x3a\x83\xbc\xa9\xa9\x41\x20\x15\xd2\x82\xf4\x7d\x00\xc3\x2f\xaa\xd6\xc9\x5e\xe6\x3f\xd1\x40\x2a\x05\x1e\xa3\xa5\x6d\x04\xe7\xe3\xae\x63\x25\x2c\xa6\xf8\x2c\xe9\xba\x45\x8a\xba\xef\xa3\x65\x96\x4c\x80\x28\x0a\x8b\x0b\x2e\xdc\xa8\x94\x8a\x03\xcd\x0d\x93\x22\x26\xb5\xfc\xc1\x04\x01\x8e\xa6\x92\x45\x4c\x1a\xa9\x0d\xb9\xd0\xfd\x28\x61\xb2\x73\x28\x3b\x43\x78\x7d\xf4\x95\x72\x56\x1f\x3f\x41\xc4\x44\xd3\x1a\x30\xc7\x06\x63\x62\xf0\x8f\x21\x20\x28\xb7\xdf\xe5\x09\x40\xe0\x37\xad\x5b\x5b\xda\x11\x3d\xa5\xef\x49\x12\x65\xea\x5a\x2d\x45\x9e\xa1\x82\x6f\x96\x09\xff\xd0\x6c\x35\x2a\xf7\x35\x55\xfd\x3e\xf4\x66\x75\xf7\x54\xeb\x83\x54\xc5\xad\x68\x33\xf4\x47\xe1\xe6\x50\xcc\xb0\xaf\x28\xba\xcd\x38\xb3\x93\xb8\x79\x62\xb2\xf3\xde\x0d\x63\xf8\xea\x42\x8e\x96\xce\xe8\xe4\xa1\xf3\x02\x0f\xa3\x3d\x4f\xdc\xdf\x2a\x74\x4b\xe2\xad\x83\xcf\x79\x2e\x5b\x61\x1e\xa5\xf1\xd4\x3f\x7f\xe9\xc9\xc1\x99\x0c\x28\x13\xe0\xdc\xfc\xaf\x04\xee\xf9\x5f\x38\x65\xf5\x2d\x17\x5d\x73\x24\xfb\xe2\x2d\x29\x35\xd4\x18\x7b\x71\x4c\x16\xdd\xe6\x43\xb8\xea\x09\x28\xfc\xd5\x32\x85\x05\x18\x66\x6a\x8b\xdd\x7c\x0c\x57\x90\x57\x54\x59\x8f\x51\xe9\x49\xb0\xeb\x99\x1b\xdf\xa5\x4c\x30\xde\x72\xd8\x40\x8d\x4e\x5a\xbf\xbf\xc3\x6c\xa5\x28\x99\x0d\xed\x85\x1d\x0a\x5f\x5b\x22\x1f\xee\x79\x8b\x86\x72\xf2\x5f\x1f\xf7\x68\xfa\x5c\x64\x54\xa3\x7d\x2e\x46\x48\xf0\x37\x00\x00\xff\xff\xdf\x16\x24\x30\x4b\x04\x00\x00")

func assetsTemplatesIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIndexHtml,
		"assets/templates/index.html",
	)
}

func assetsTemplatesIndexHtml() (*asset, error) {
	bytes, err := assetsTemplatesIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/index.html", size: 1099, mode: os.FileMode(420), modTime: time.Unix(1489069089, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesLayoutHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x51\x3d\x73\xb3\x30\x0c\xde\xf9\x15\x7e\xb5\xbf\xf5\xda\xc1\x78\xe9\xc7\xd4\x5e\x18\xb2\x74\x54\x40\x04\x5f\x8c\x9d\x43\xa2\x57\x8e\xcb\x7f\xaf\xc1\x6d\x43\x87\xc6\x8b\xbe\x9e\x47\x96\xf4\xcc\x73\x43\xad\x0b\xa4\xa0\x23\x6c\xe0\x72\x29\xcc\xbf\xc7\xdd\xc3\xfe\xad\x7a\x52\x9d\xf4\xde\x16\x26\x1b\x95\x9e\x59\x30\xd9\x5d\xc3\x9e\x04\x55\xdd\xe1\xc0\x24\x25\x8c\xd2\xfe\xbf\x87\x4d\xd9\xbb\x70\x52\x03\xf9\x12\x58\x26\x4f\xdc\x11\x09\x28\x99\xce\x54\x82\xd0\x87\xe8\x9a\x19\x54\x37\x50\x5b\x82\x66\xdd\xa3\x0b\x77\x4b\x6a\xd3\x42\x9c\x78\xb2\x55\xac\x4f\x24\xea\x35\x06\x9a\x8c\xce\xb9\x3c\x90\xbe\x4e\x64\x0e\xb1\x99\x36\xd4\xc6\xbd\xab\xda\x23\x73\x09\x3d\x85\x71\xd3\x75\x2d\xe3\xf7\xc7\x2d\xf6\xce\x4f\x60\x9f\x57\x6b\x34\xfe\x05\x3c\xd3\xc0\x31\xa0\x07\x5b\x7d\x79\x37\xc0\x32\x60\x60\xac\xc5\xc5\x90\x16\xda\x6f\xa2\x1b\x24\x1f\x8f\x71\x14\xb0\x2f\xf1\xa8\x76\xa3\xfc\x42\x1a\x9d\x16\xb2\xc5\x3c\x53\x68\x92\x4a\xe9\x5d\xa5\x3b\x20\xd3\x22\x5d\xc6\xe5\x3b\xa4\xd3\xac\xba\xfd\x10\x3e\x03\x00\x00\xff\xff\x7a\x8a\x17\xb6\xea\x01\x00\x00")

func assetsTemplatesLayoutHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesLayoutHtml,
		"assets/templates/layout.html",
	)
}

func assetsTemplatesLayoutHtml() (*asset, error) {
	bytes, err := assetsTemplatesLayoutHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/layout.html", size: 490, mode: os.FileMode(420), modTime: time.Unix(1488553008, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesNewaccountHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xe2\xb2\x81\xd0\x0a\x40\x60\x93\x91\x9a\x98\x02\x61\x82\xb9\x25\x99\x25\x39\xa9\x76\x1e\xa9\x39\x39\xf9\x36\xfa\x10\x0e\x42\x32\x37\xb5\x24\x51\x21\x39\x23\xb1\xa8\x38\xb5\xc4\x56\xa9\xb4\x24\x4d\xd7\x42\x09\x6a\x8c\x3e\xc2\x1c\x9b\xa4\xfc\x94\x4a\x24\x5d\x19\x86\x76\x7e\xa9\xe5\x0a\xa1\xc5\xa9\x45\x40\x65\x86\x08\x99\xea\xea\x82\xa2\xcc\xbc\x92\x34\x05\x25\xd5\x62\x25\x05\xbd\xda\x5a\xa8\x51\x10\xfd\x40\xb5\x10\xd7\x02\x02\x00\x00\xff\xff\xd6\x4d\xae\x17\xbf\x00\x00\x00")

func assetsTemplatesNewaccountHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesNewaccountHtml,
		"assets/templates/newaccount.html",
	)
}

func assetsTemplatesNewaccountHtml() (*asset, error) {
	bytes, err := assetsTemplatesNewaccountHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/newaccount.html", size: 191, mode: os.FileMode(420), modTime: time.Unix(1488373318, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesNewuserHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xe2\xb2\x81\xd0\x0a\x40\x60\x93\x91\x9a\x98\x02\x61\x82\xb9\x25\x99\x25\x39\xa9\x76\x1e\xa9\x39\x39\xf9\x36\xfa\x10\x0e\x42\x32\x37\xb5\x24\x51\x21\x39\x23\xb1\xa8\x38\xb5\xc4\x56\xa9\xb4\x24\x4d\xd7\x42\x09\x6a\x8c\x3e\xc2\x1c\x9b\xa4\xfc\x94\x4a\x24\x5d\x19\x86\x76\x7e\xa9\xe5\x0a\xa1\xc5\xa9\x45\x40\x65\x86\x08\x99\xea\x6a\xbd\x50\xbf\xc4\xdc\xd4\xda\x5a\x9b\xa4\x22\x24\x0d\x89\x0a\x19\x45\xa9\x69\xb6\x4a\xfa\x40\x6d\x8e\xc9\xc9\xf9\xa5\x79\x25\x4a\x60\x23\xa0\x1c\x1b\xfd\x44\x98\xad\x10\xab\x80\xc6\x42\x3c\x06\x08\x00\x00\xff\xff\xa6\xb7\x94\xc4\xea\x00\x00\x00")

func assetsTemplatesNewuserHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesNewuserHtml,
		"assets/templates/newuser.html",
	)
}

func assetsTemplatesNewuserHtml() (*asset, error) {
	bytes, err := assetsTemplatesNewuserHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/newuser.html", size: 234, mode: os.FileMode(420), modTime: time.Unix(1488373372, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesTransactionsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x90\xc1\x0a\xc2\x30\x10\x44\xef\xf9\x8a\x50\x7a\x94\x16\x3c\x96\x18\x28\x4a\xcf\x1e\xf4\x03\x52\xbb\x58\xb1\x49\x4a\xb2\x2d\x48\xc8\xbf\xbb\x51\xd4\x0a\xcd\x21\xb0\xbb\x8f\x61\x66\x42\x40\xd0\xe3\xa0\x10\x78\xd6\x83\xea\xb2\x18\x99\xe8\xb7\xf2\xe4\x94\xf1\xea\x82\x37\x6b\xbc\x28\x69\xc1\x04\xaa\x76\x00\xc9\x42\xa0\xd3\x15\x78\x7e\xdf\xe4\x33\xaf\x76\xbc\x68\x94\x2e\x96\x3c\x4f\x1a\xe8\x24\xe3\xf4\x04\x76\x32\x84\x7c\x2e\x1a\x67\xf5\xd9\x83\x8b\xb1\xfa\xce\xf5\x3e\x46\x51\x12\xf1\x8f\x1e\xc0\xe3\x12\x4d\xf3\x1a\xaa\xad\x81\x07\x27\xa0\xd6\x76\x32\xb8\xaa\x75\x9c\xdc\x68\x3d\x7c\x6e\xf4\x93\x31\x0a\x01\xa6\x7b\xd9\x7c\x87\x4a\x9b\x5f\x11\xad\xf2\x90\x8a\x78\x06\x00\x00\xff\xff\x56\x12\x6d\xf6\x1d\x01\x00\x00")

func assetsTemplatesTransactionsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesTransactionsHtml,
		"assets/templates/transactions.html",
	)
}

func assetsTemplatesTransactionsHtml() (*asset, error) {
	bytes, err := assetsTemplatesTransactionsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/transactions.html", size: 285, mode: os.FileMode(420), modTime: time.Unix(1489056589, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesUserhomeHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x91\x4f\x6b\xc3\x30\x0c\xc5\xef\xf9\x14\x22\x94\x1e\xca\x88\x61\xbd\x75\x8e\xc7\x18\xec\xb6\x31\x18\x3b\x17\x35\x51\x9b\xb0\xd8\xcd\xec\xa4\xa5\x18\x7f\xf7\xc9\xf9\xb3\x8d\x6e\xb9\x04\xeb\xf7\xa4\xa7\x67\x7b\xdf\x91\x6e\x1b\xec\x08\xd2\x8a\xb0\x4c\x43\x48\x64\x75\xab\xde\x1d\x59\x78\xc5\x03\xc1\x06\xbc\xcf\x9e\x34\xe9\x10\xa4\x60\xc2\x78\xad\x1e\x8a\xe2\xd8\x9b\xce\x71\x65\xad\x12\xef\xeb\x3d\x64\xcf\xe4\x86\xe6\x35\x14\x0d\x3a\x97\xa7\x9a\x9c\xe3\x09\xa9\xe2\x01\x03\x9c\xd5\x64\x4a\x56\x7a\x2f\x56\x6f\xd5\xf1\x0c\xf3\xb0\x95\xe0\x6a\x22\xfb\x26\x6a\x16\xd1\x12\x36\x39\x4c\xde\x5c\xb2\x68\x78\x9f\xc5\xc7\x0d\x2c\x4e\x23\x41\x9d\xcd\xcd\xac\x00\xfe\x86\x55\xe8\x93\x15\x59\x8c\x60\x50\x73\xc7\x34\x21\x72\xd9\xd4\x4a\x22\x54\x96\xf6\x79\x2a\x4e\x35\x9d\xef\xfb\x28\xca\xd9\xf1\xa7\x25\x84\x25\x16\x63\xe9\x65\x38\xc6\x0c\xdf\x07\x29\x50\x2d\xcd\xce\xb5\x77\xde\xeb\xa3\xa1\x4b\x74\x7b\xec\xad\x25\xd3\x45\xca\x16\xd3\x2e\x73\xd0\xf1\x2f\x45\x8c\x96\xfc\xbe\xf2\xbd\xd5\x5b\x2c\xcb\x2d\x8e\x29\x52\xc8\xe2\x15\x5c\x2b\x5a\xbc\x8c\xe4\x1a\xb8\x0e\x4d\x59\x9b\x03\x53\xf8\x07\x17\x55\xcb\x0f\xf1\xb7\x75\x87\x8e\xe2\x43\x7f\x05\x00\x00\xff\xff\x22\xff\xd7\x4d\xfd\x01\x00\x00")

func assetsTemplatesUserhomeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesUserhomeHtml,
		"assets/templates/userhome.html",
	)
}

func assetsTemplatesUserhomeHtml() (*asset, error) {
	bytes, err := assetsTemplatesUserhomeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/userhome.html", size: 509, mode: os.FileMode(420), modTime: time.Unix(1489066634, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesViewacHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x52\xc1\x6a\xeb\x30\x10\xbc\xe7\x2b\x96\xe0\x43\x02\x0f\x07\xde\x31\xa8\x06\x93\x52\x28\x94\xb4\x84\xe4\x03\x64\xb4\x8d\x4d\x63\xd9\x95\xe4\xd0\x22\xfc\xef\x5d\x59\x72\x6d\xc7\xa1\xb9\x64\x35\x3b\xde\x99\x91\xd6\x5a\x83\x65\x7d\xe1\x06\x61\x99\x23\x17\xcb\xb6\x5d\x00\xfd\xac\x8d\x4c\x55\xc3\xf6\x01\x62\x42\x58\xfe\x3f\xb1\x36\x4e\x77\xf1\x49\xa3\x92\xbc\xc4\xb6\x85\x2d\x78\x68\xdf\x1d\xd9\x86\x38\x0b\x66\x78\x76\xc1\xa4\x1b\xc1\x8c\xf2\x85\x3f\xe4\xc9\xa1\x91\xb2\x90\x67\xb6\xa1\x7a\xd2\x78\xde\xcf\xb1\xd7\xd3\xf1\x0e\x68\x72\x54\x73\xf8\xad\x51\x75\xa5\x71\x68\x50\x15\xb4\xad\x55\x5c\x9e\x11\xa2\x0f\xf8\x17\x5d\xbb\x3c\x2f\x85\x36\x21\xe5\x8d\x45\x91\xb0\x8c\x72\x96\x95\xc4\x6f\x58\x15\x52\xe0\x17\xb8\x6b\x88\x0f\x47\x1a\xb0\x76\x21\xb3\x84\x66\x8b\xe1\x23\x6b\x8b\x77\xe0\x52\xc0\x0a\x3f\x3d\x77\x74\x49\x10\x5d\xe3\x27\x55\x95\xee\xbc\x9e\x30\xf6\xa3\x6e\xba\x5b\x03\xf9\x99\xfa\x70\x22\xae\xe8\xdd\x10\x37\x2d\xab\x46\x1a\x67\xe2\xb7\x47\xe8\x23\x6a\xe3\xe6\x87\x07\x09\x48\xba\x0b\xbc\x91\x51\xbc\x68\x0c\xb9\x7b\x99\xbf\xa6\x4f\x65\xfa\x18\x83\x8c\xb7\x7e\x47\x46\x8a\x99\x0a\xd1\xc3\x1b\xdd\xf2\x7d\x5f\xb8\xfd\x73\xd6\xe9\xbf\x67\xcc\x1e\xd2\x0f\x26\xc4\xaf\xd8\x62\xbc\xba\x19\xd7\xe8\x56\xf7\x27\x00\x00\xff\xff\x9b\x2c\xf2\x0e\xcf\x02\x00\x00")

func assetsTemplatesViewacHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesViewacHtml,
		"assets/templates/viewac.html",
	)
}

func assetsTemplatesViewacHtml() (*asset, error) {
	bytes, err := assetsTemplatesViewacHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/viewac.html", size: 719, mode: os.FileMode(420), modTime: time.Unix(1489063791, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/s/main.css": assetsSMainCss,
	"assets/templates/.forms.html.swp": assetsTemplatesFormsHtmlSwp,
	"assets/templates/familypage.html": assetsTemplatesFamilypageHtml,
	"assets/templates/forms.html": assetsTemplatesFormsHtml,
	"assets/templates/index.html": assetsTemplatesIndexHtml,
	"assets/templates/layout.html": assetsTemplatesLayoutHtml,
	"assets/templates/newaccount.html": assetsTemplatesNewaccountHtml,
	"assets/templates/newuser.html": assetsTemplatesNewuserHtml,
	"assets/templates/transactions.html": assetsTemplatesTransactionsHtml,
	"assets/templates/userhome.html": assetsTemplatesUserhomeHtml,
	"assets/templates/viewac.html": assetsTemplatesViewacHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"s": &bintree{nil, map[string]*bintree{
			"main.css": &bintree{assetsSMainCss, map[string]*bintree{}},
		}},
		"templates": &bintree{nil, map[string]*bintree{
			".forms.html.swp": &bintree{assetsTemplatesFormsHtmlSwp, map[string]*bintree{}},
			"familypage.html": &bintree{assetsTemplatesFamilypageHtml, map[string]*bintree{}},
			"forms.html": &bintree{assetsTemplatesFormsHtml, map[string]*bintree{}},
			"index.html": &bintree{assetsTemplatesIndexHtml, map[string]*bintree{}},
			"layout.html": &bintree{assetsTemplatesLayoutHtml, map[string]*bintree{}},
			"newaccount.html": &bintree{assetsTemplatesNewaccountHtml, map[string]*bintree{}},
			"newuser.html": &bintree{assetsTemplatesNewuserHtml, map[string]*bintree{}},
			"transactions.html": &bintree{assetsTemplatesTransactionsHtml, map[string]*bintree{}},
			"userhome.html": &bintree{assetsTemplatesUserhomeHtml, map[string]*bintree{}},
			"viewac.html": &bintree{assetsTemplatesViewacHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

