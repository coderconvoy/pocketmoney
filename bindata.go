// Code generated by go-bindata.
// sources:
// assets/s/main.css
// assets/templates/.index.html.swp
// assets/templates/.userhome.html.swp
// assets/templates/familypage.html
// assets/templates/index.html
// assets/templates/layout.html
// assets/templates/newaccount.html
// assets/templates/newuser.html
// assets/templates/transactions.html
// assets/templates/userhome.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsSMainCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\xcb\x31\x0e\xc2\x30\x0c\x40\xd1\xdd\xa7\xb0\xc4\x8a\xd8\x32\xb4\x3d\x4d\x8c\xeb\x2a\xa2\xb1\x2b\x13\x4b\x20\xc4\xdd\x09\x15\x4c\xfd\xf3\xfb\x64\xfc\x7c\x01\xf6\x28\x5f\x6f\x8b\x5b\x28\x8f\xa7\x61\x10\x21\x9a\xe0\x0d\x70\xa9\xb3\x06\x1e\x49\x4a\x22\x39\xef\x44\xcc\xeb\x5f\x98\xf3\xec\x63\xda\x1e\x78\xb7\xb5\x30\xd2\xda\x9f\x5d\x15\xdd\xa2\xe1\x19\x29\x5a\x33\xfd\xf9\x9a\x7d\x29\xfa\xf5\x13\x74\xf4\x09\x00\x00\xff\xff\x2d\xd0\xa6\xa1\x8e\x00\x00\x00")

func assetsSMainCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsSMainCss,
		"assets/s/main.css",
	)
}

func assetsSMainCss() (*asset, error) {
	bytes, err := assetsSMainCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/s/main.css", size: 142, mode: os.FileMode(420), modTime: time.Unix(1488548494, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIndexHtmlSwp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9a\xdd\x6a\x13\x4d\x18\xc7\xa7\x3d\x78\x79\x5f\xda\xbe\x8a\x82\x67\x85\x71\xa5\xa0\x50\xb3\x49\x6c\x10\x6a\x1a\x90\xd2\x8a\x60\x6a\x4f\x5a\x3d\x93\xd9\xdd\x49\x76\x70\x67\x66\x9d\x9d\x35\x8d\xcb\x2a\x7e\x1d\x78\x01\x9e\x7a\x09\x5e\x80\x08\x82\xe7\x7a\x25\x1e\x79\x05\x3e\x9b\x26\x6d\xd3\xa6\x5d\x44\xb0\x88\xcf\x0f\xfe\xec\xce\xec\xf3\x31\xfc\x67\xf7\x20\x64\xbc\xea\xf6\xed\x36\xbd\x5e\x59\x22\xc0\x59\x42\x2e\x3c\xf9\x70\x7f\xfd\x9f\xc5\xe9\x37\x33\x84\x48\x66\x6d\xc8\x7b\xa4\x8c\x5b\xdc\xd8\x7e\xbd\x34\x8c\x3c\x1d\x16\x74\x13\xdf\x88\xd8\x26\x6e\x57\x47\x4c\x75\xdd\xc4\xf8\x6e\x57\xd8\x30\xf5\x2a\xbe\x96\xae\xaf\x03\x6e\x7c\xad\x1e\xeb\xbe\x1b\x6b\xff\x21\xb7\x52\x2b\xde\x77\x59\x92\x70\x48\xb2\x5c\xc6\x11\xb3\x3c\x71\x85\x0a\xf8\x4e\x25\xb4\x32\x2a\xef\x8d\x20\xc8\x1c\xb9\x56\xaf\x55\x8b\xbb\x4b\xce\x45\x7a\xfe\xdc\xd6\x69\x2f\x08\x41\x10\x04\x41\x10\x04\x41\x90\xdf\x88\x8d\xa7\xc8\x33\xb8\x4e\x0f\xc7\xf3\xc3\xeb\xd4\xa1\x2b\x82\x20\x08\x82\x20\x08\x82\x20\x08\x82\x20\x7f\x2e\x2c\x20\xa4\x3f\x43\xc8\x7f\xb3\x64\xf0\xff\xff\xe8\xf7\xff\xb7\x33\x84\x7c\x05\x7d\x01\x7d\x04\xbd\x05\xbd\x06\xbd\x02\xbd\x04\xbd\x00\x6d\x83\x6e\x80\xa6\x40\x9f\xfe\x27\xe4\x39\xe8\x01\xe8\x2e\x68\x03\xd4\x06\xcd\x83\xbe\xcf\x11\xf2\x1e\xa4\x40\x4b\xa0\xcf\xd0\xeb\x1d\xe8\x1e\xa8\x01\x5a\x98\xdd\xed\xff\xef\xec\x69\x3a\x81\x20\x08\x82\x20\x08\x82\x20\x7f\x11\x59\x36\x3a\x58\x4b\x1d\x8f\x25\xdc\xc9\x73\x3a\x84\x8c\x6e\x9a\x6e\x47\x1b\xd9\xda\x1b\x0f\xe6\x84\x8a\x53\x4b\x6d\x3f\xe6\x2b\x4e\x92\x7a\x52\x58\x67\x3c\x62\x55\xab\x8e\x30\x92\x6e\xb2\x24\xe9\x69\x13\xd0\xe5\xf1\xa4\x78\x38\xef\x50\xc5\x64\x31\xee\x05\x75\xa7\xd5\xf4\xcc\x78\x99\xcb\x6d\xa1\x84\x4c\x25\x6d\xd0\x88\x5b\xcb\x4d\x72\xe5\x48\x4c\x79\x8b\x98\x15\xa9\x6a\xc5\xa9\x64\x8d\xc5\x7a\x35\x77\xa8\xe1\x8f\x52\x61\x78\x40\xad\xb0\x11\xc4\x36\xae\xd6\xab\xd4\x0f\x99\x61\x7e\xd1\xe4\xc0\xaa\x6a\x13\x56\xb5\x26\x99\x88\x0e\xb7\xe3\xc5\xe4\x28\x71\x77\x70\x34\xb3\xcd\x84\xa2\x5b\x09\x37\x87\xb3\x2d\xdf\xb1\xa3\xe4\x14\x9e\x17\x77\x13\xf2\xd7\x99\x14\x51\x9f\x6e\xc0\xd3\x93\x2a\x74\x06\x61\xc7\xd4\x68\x86\xf5\xd6\xaa\xe1\xc5\xa6\x0f\xcb\xdd\xf4\x7d\x9d\x2a\xdb\x74\xe1\xc9\xfe\xbe\x17\xdb\x4e\xc1\x0f\xa1\xc1\x39\xc5\x7b\xbb\x45\x1d\x2a\xb9\x0d\x75\x00\xe6\xe8\xa4\xd8\x75\xf2\x8b\x6f\xca\x4f\xbc\x21\x93\x0c\xe5\xd2\x03\x37\xcb\x0c\x29\xb5\xb4\xd4\xcc\x63\x8c\xbc\xa3\xbb\x42\x9d\x64\x5c\x54\x04\x4c\x30\x6d\x2f\x3c\xcb\xb8\x0a\xf2\x7c\x3f\xdd\x6b\xad\x19\xa3\xcd\x72\x96\xc5\x46\x28\xdb\xa1\xce\x02\xbc\x90\x95\x3c\x6f\xba\x5e\xeb\x40\x9a\xe8\x14\x93\x07\xec\x0f\x6b\xad\xcd\xc1\xd1\x79\xda\x2e\xce\xce\xc3\xaa\x6a\xad\xb1\x4f\x3c\xe4\x2c\x80\x4f\x9c\xfc\x08\x00\x00\xff\xff\xfa\x30\x4d\x40\x00\x30\x00\x00")

func assetsTemplatesIndexHtmlSwpBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIndexHtmlSwp,
		"assets/templates/.index.html.swp",
	)
}

func assetsTemplatesIndexHtmlSwp() (*asset, error) {
	bytes, err := assetsTemplatesIndexHtmlSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/.index.html.swp", size: 12288, mode: os.FileMode(420), modTime: time.Unix(1488832049, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesUserhomeHtmlSwp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9a\xcf\x8b\x1c\x45\x14\xc7\x2b\x39\x88\x31\x46\xc5\x08\x1e\xbc\x94\x95\x3d\x85\xcd\xf4\xec\xec\x42\xc2\xd0\x33\xb0\xac\xae\x78\xd8\x75\x41\x13\x22\x78\xa9\xe9\xae\xd9\x6e\xb6\xbb\xab\x53\x55\xbd\xe3\x38\x8c\x82\xe0\xc1\x83\x17\x11\xff\x81\xfc\x01\xe2\x4d\x08\x22\xe4\xe8\x2a\x2a\x88\x47\x0f\x1e\x45\x44\x14\x4f\x5e\xfc\x56\x77\xcf\xce\x8f\xec\x2f\x2f\x8a\x5a\x5f\xf8\xd0\xa9\x99\x7a\xaf\xbe\xef\xf5\x9b\x1e\xc2\x4e\xaf\x79\xeb\xc5\x2d\x7a\xbd\xb1\x46\xa0\x27\x08\xb9\x76\xf0\xe9\xed\xee\x43\xcb\xe7\xdf\xbd\x48\x48\xca\x8d\x89\xc4\x80\x9c\xa6\x17\x84\x32\xc3\xd6\xa9\xdb\xc8\x9b\x75\x42\x4f\x07\x2a\xce\x8d\xf6\x76\x65\xc2\xb3\x5d\x4f\xab\xc0\xdb\x8d\x4d\x54\xf4\x1a\x81\x4c\xbd\x40\x86\x42\x05\x32\xdb\x97\x43\x2f\x97\xc1\x9e\x30\xa9\xcc\xc4\xd0\xe3\x5a\x0b\x04\x19\x91\xe6\x09\x37\x42\x7b\x85\x16\x2a\x92\xa9\x68\x44\x26\x4d\x4e\x3f\xde\xc9\xe9\xff\xab\xc2\xf4\xaf\xdd\xb8\x44\x56\x5b\x2b\x4d\xbb\xbc\xc2\x9e\xa5\x97\x9f\xbc\xf9\x4f\xbb\x72\x72\x72\x72\x72\x72\x72\x72\x72\x72\x72\xfa\x1b\x65\xf2\x73\xe4\x2d\x5c\xcf\xd7\xeb\x1b\xf5\xf5\xdc\xc2\xd5\xc9\xc9\xc9\xc9\xc9\xc9\xc9\xc9\xc9\xc9\xc9\xc9\xc9\xc9\xe9\xdf\x2b\x1e\x12\xf2\xc3\xc3\x84\x7c\x7f\x81\x94\x7f\xff\x9f\xfc\xff\xff\xa7\xc7\x09\xf9\x12\xdc\x03\x1f\x81\xf7\xc0\x3b\x40\x82\x0c\xc4\xe0\x16\x58\x03\x4f\x81\x1f\x1f\x43\x0e\xf0\x1d\xf8\x1a\x7c\x05\xee\x81\xf7\xc1\x18\x5c\x07\xbf\x5f\x22\xe4\x5b\xf0\x05\x38\x00\x9f\x83\x4f\xc0\x87\xe0\x0d\xd0\x02\xcb\xe0\x69\xf0\xcb\xa3\xd8\x07\xde\x06\x0a\xf4\xc1\x6b\xe0\x36\x78\x1e\x50\x70\x70\x91\x90\xcf\xc0\xc7\xe0\x39\xf0\x0c\xb8\x0c\x7e\x7e\x84\x90\x6f\xc0\x07\xe0\x55\x70\x05\xfc\x81\xfa\x7e\x03\xbf\x5e\xa8\x6b\x75\x72\x72\x72\x72\x72\x72\x72\xfa\x0f\x6a\x04\x4d\x7e\x2d\x49\x59\x8f\x6b\xc1\xc6\x63\x42\x7c\xaf\x2f\x55\xda\x25\x14\xf2\xe3\x2c\x2f\x0c\x35\xc3\x5c\x74\x98\x2e\x7a\x69\x6c\x18\x35\xe2\x75\xd3\x61\x1b\x11\xcf\x76\x05\xab\xf6\x6d\xc8\xac\x1f\xab\x94\xb6\xe7\x23\x72\xae\xf5\x40\xaa\x90\xd1\x8c\xa7\x76\x3d\x08\x5b\xac\xeb\xf7\x54\x15\xb5\x2d\x06\x74\xb2\xe5\x0c\xa1\x2b\x33\xa1\x2f\x25\x21\xdd\x39\x63\xa8\x4c\x42\x44\xcf\x04\xfb\x51\xab\x5b\xd9\x3f\xcc\xe1\x7b\x78\x8d\xf8\xb6\x72\xca\x03\x13\xcb\xac\xc3\x82\xc8\x66\x62\x34\x15\x26\x92\x21\xf2\x4a\x6d\x50\xef\x19\xfb\xb3\xc3\x87\x74\x5b\x0e\x10\xb0\x9e\xca\x22\x33\x6d\x4a\xef\xdf\x9d\xdb\x9f\x15\x69\x4f\x28\x46\xb5\x11\x79\x87\x35\x1b\xcd\x95\x89\x63\x5e\x46\xb0\x2e\xa5\x3b\x85\xc2\xb1\xa2\xbd\x70\x94\x3d\xe2\xb0\x33\xd5\x96\xba\x3e\xdf\xd3\x22\x11\x81\x99\x56\x3b\x1a\x89\x2c\xc4\x8d\x2d\xfd\xca\xdc\xd6\x46\xf7\x79\x52\x20\x74\x34\x5a\xda\x6f\xdc\xd4\x42\xd9\x4c\xe3\x71\xbb\x5c\x6f\x97\xff\x66\xdd\x13\xde\xf4\xbd\x2a\xcf\xe4\x00\x55\xf6\x72\x69\x6f\x79\x69\x9f\xb6\x3b\xb4\xb1\xc9\xd3\xc6\x7a\x10\xd8\x22\x34\x4e\xf6\x2b\x4b\xb5\x5f\x23\xd1\x93\x57\x64\x7b\x6a\xf5\x01\x9b\x47\xad\x8f\xb2\x3e\x67\xb5\x5a\xd0\x6b\xb4\x5c\x6d\x14\x4a\x89\xcc\x2c\x7a\xad\x32\xc7\x7d\x2a\xee\xd0\x99\xf2\xe8\xd2\x66\x2a\xd2\xfa\xb4\x69\x3d\x74\x99\x9e\xa5\xa2\xbe\x92\x29\x6a\xda\xc4\x05\x55\x1d\x77\x9f\x8a\xfa\x2c\x46\x95\xe0\xa1\xcc\x92\xe1\xb4\x96\x46\x75\x3c\xa3\x51\x1c\x86\x22\xc3\x8d\xaf\x07\x75\xb5\xbb\xc5\xf7\x04\xe5\x18\xd4\x61\x8a\x7a\x30\xa7\xab\x8b\x73\x9a\xf3\xe1\x03\x43\x3a\x1a\x79\x57\xed\x04\x6e\xd9\x9f\x46\x5f\xf5\xec\xe7\xfa\x70\x70\x4f\x18\xda\xf5\x30\x64\xdd\xe3\x4b\xe0\x55\x07\xaa\x2a\x72\x6e\x0c\x2a\xea\xb0\xc6\x68\x6d\xb9\xd5\x1c\xdb\xba\xee\x14\xb1\x12\xe1\x09\x19\xfe\x4a\x13\x88\x2d\x1f\x8e\x68\xdd\xf8\xa3\x6a\xe7\x61\x58\x9b\x3a\xb2\x05\x33\xd1\x55\x13\x7c\xaf\x48\xec\x5b\xd3\xd9\x9a\xfb\x78\x24\xf1\xdc\x2c\xdd\xbf\xbb\x38\x4b\xd8\x40\x4e\x9b\xa1\x99\xcf\xc3\x31\xe3\x83\xac\x76\x6f\xf5\x56\x15\xe4\x5b\x5f\xa5\xe7\x97\x23\x39\x98\x98\xd6\xa5\xeb\x89\x45\xf4\x83\x06\x09\x9e\x49\x1d\x96\x0a\xad\xb9\x7d\xfc\xa2\x6d\x5b\x42\x5b\x6b\xb6\x39\xa5\xad\xea\x85\xaa\x7b\x75\x9a\xba\x75\x78\xc6\x59\xb7\x18\x26\xd8\x6b\xd3\xc3\x96\x57\x4f\xbf\xd9\x6f\x83\x08\x77\xc7\x7e\x1b\xfc\x19\x00\x00\xff\xff\xb0\xde\x22\x47\x00\x30\x00\x00")

func assetsTemplatesUserhomeHtmlSwpBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesUserhomeHtmlSwp,
		"assets/templates/.userhome.html.swp",
	)
}

func assetsTemplatesUserhomeHtmlSwp() (*asset, error) {
	bytes, err := assetsTemplatesUserhomeHtmlSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/.userhome.html.swp", size: 12288, mode: os.FileMode(420), modTime: time.Unix(1488833487, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesFamilypageHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x92\xc1\x6e\x9c\x30\x10\x86\xef\xfb\x14\xa3\x39\xb5\x52\x03\x0d\x51\x2e\x11\x58\xaa\x22\x55\xea\x21\xd5\x4a\x55\x1f\xc0\xe0\xd9\x60\xd5\x36\xd4\x36\x4a\x22\x8b\x77\xaf\xc1\xb0\x2c\x5c\xca\x05\x6c\xfe\x7f\xe6\x9f\xcf\x0e\xc1\x93\xee\x15\xf7\x04\xd8\x12\x17\x38\x8e\x27\x88\x4f\xd9\xde\xb3\xef\x5c\x4b\xf5\x01\x67\xfe\x4a\x4f\x10\x42\x16\xd7\x59\xda\xfb\xc9\x35\x8d\x63\x99\x47\x51\x52\x0f\x2a\x7d\x84\x60\xb9\x79\x25\x98\xb5\x2f\xa4\x6b\xb2\x6e\xa9\x38\xeb\x94\x64\xd7\x45\xd2\x67\xbf\x1d\x59\x33\xd7\x83\xbb\xbb\xb8\x51\xff\x22\x45\x8d\x87\xec\xcc\x2d\x19\x0f\x98\xde\x08\xf8\xdc\x4a\x35\x05\x2c\x6b\xbb\x55\x29\xf3\xb5\x66\x08\x64\xc4\x1a\x3f\x5f\x13\x4d\xe2\xab\xa1\xbc\x74\x56\x03\x6f\xbc\xec\x4c\x85\x5c\x08\x3d\x47\x44\xd0\xe4\xdb\x4e\x54\xd8\x77\xce\x23\x83\xd3\x96\x4f\x5e\x20\x0e\xb2\x1b\xa2\x7d\x80\x46\x71\xe7\x2a\xd4\xe4\x5c\xa4\x83\x2c\xce\x11\x45\x30\x33\x79\x60\x37\xf6\x2d\x52\xb2\x16\xec\x9b\x10\xb0\x90\x4d\x80\xa2\xa5\xd8\x2c\x13\x5a\x78\x82\x52\x9a\x7e\xf0\xe0\x3f\x7a\xaa\xd0\xd3\x7b\x9c\x7f\x82\x54\xe1\xb0\xe0\xc2\xcd\xf2\xc3\x41\x62\x74\xb0\x35\x2d\x35\x7f\xea\xee\x7d\xb5\xf6\x09\x24\xdb\xf1\x3b\xc7\x41\xde\x3a\x2b\x8e\x3d\xfb\x65\x1f\xa1\xe7\xde\xc7\x9e\x15\x66\xe1\xf1\x4b\xf1\x75\x44\xb0\xf4\x77\x90\x96\xc4\x5a\xf7\x4d\xdc\x1f\xaa\x7e\x7a\x91\x46\xea\x41\xc3\x23\x28\x9a\xec\xee\xf3\xee\xff\x73\x67\x2e\x32\x1e\xc5\xff\xbb\x5f\x5b\x14\x87\x16\x3b\xbd\x1b\x6a\x2d\xfd\xc2\xa4\xcc\xa7\x63\x66\xa7\xdb\xbb\x5d\x73\x47\xd3\xdd\xfe\x17\x00\x00\xff\xff\xa5\x75\x04\x10\xf0\x02\x00\x00")

func assetsTemplatesFamilypageHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesFamilypageHtml,
		"assets/templates/familypage.html",
	)
}

func assetsTemplatesFamilypageHtml() (*asset, error) {
	bytes, err := assetsTemplatesFamilypageHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/familypage.html", size: 752, mode: os.FileMode(420), modTime: time.Unix(1488615995, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x93\xcb\x6a\xeb\x30\x10\x86\xf7\x7e\x8a\x41\x70\xe0\x1c\x38\xcd\xc5\x90\x4d\xb0\x0d\x25\xa4\xab\xba\x64\xd3\x07\x90\xed\x71\x2d\x6a\x5d\x2a\x8d\x49\x83\xc9\xbb\x57\xae\x93\xc6\x49\x93\x86\xc6\x2b\x79\xf4\xff\x33\xd2\x37\x9a\xb6\x25\x94\xa6\xe6\x84\xc0\x2a\xe4\x05\xdb\x6e\x03\xd8\x7d\x51\x35\x4d\x56\x3a\x7f\x45\x82\x54\x2b\xdc\x44\x63\x1f\x08\xbe\xb6\xdb\x56\x94\x30\x1a\xea\xb3\x64\x69\xad\xb6\xf3\xb6\x35\x56\x28\x2a\x81\xfd\x71\xac\x93\x44\xe3\x2c\x19\xf8\x50\x15\xde\x16\x1c\x52\x45\xa5\xb6\x12\x78\x4e\x42\xab\x98\xd5\xfa\x45\x28\x06\x12\xa9\xd2\x45\xcc\x8c\x76\xc4\x0e\xf6\xfe\x64\x61\xf2\xd8\xa9\xfc\x91\xc2\xe3\xad\x07\x2e\x45\xbd\x99\x43\x24\x94\x69\x08\x68\x63\x30\x66\x84\xef\xc4\x40\x71\xe9\xd7\xe5\xa7\x80\x25\x51\x66\x8f\x9d\x29\xca\x0c\x2d\x3c\x79\x15\xfc\xe0\x6f\x1c\xda\x6e\x75\x26\xc3\x8a\x3b\xb7\xd6\xb6\x38\xb5\x9b\x5d\x7c\x9f\xc2\xac\x8b\x33\xee\x23\x8b\x6b\x32\x29\x86\xd7\x8e\xc6\x1d\xa3\xe4\x22\x34\x85\xeb\xdd\xcd\xae\x81\x5b\x58\xec\xda\xdd\x83\x82\xfb\x3c\xd7\x8d\xa2\x4b\x20\xaf\xe2\xe8\x8b\x5e\x00\x92\x72\xa1\xe0\xd9\x03\xbb\x11\xe8\x52\x72\x51\x9f\x7a\xb1\x0b\xee\xcd\xfd\xcf\x2d\xad\x30\x9c\xc8\x17\x8e\xd9\xa8\x9d\xfd\x0f\x27\x5b\x06\x16\xdf\x1a\x61\xb1\x00\x12\x54\x7b\xed\xec\x2e\x9c\x40\x5e\x71\xeb\x19\xa3\x75\x83\xee\x4d\xcf\x54\xfc\x9b\x0a\x25\x64\x23\x61\x06\x35\x76\xa9\xdd\xbf\x6f\x9a\x85\x56\xa5\xf0\x4d\xfb\xc5\x43\x09\x6f\x7e\x29\xc3\xd1\xce\xb8\x43\x3f\xda\x7b\x49\xf0\x11\x00\x00\xff\xff\x4a\x64\x20\xad\xf7\x03\x00\x00")

func assetsTemplatesIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIndexHtml,
		"assets/templates/index.html",
	)
}

func assetsTemplatesIndexHtml() (*asset, error) {
	bytes, err := assetsTemplatesIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/index.html", size: 1015, mode: os.FileMode(420), modTime: time.Unix(1488615958, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesLayoutHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x51\x3d\x73\xb3\x30\x0c\xde\xf9\x15\x7e\xb5\xbf\xf5\xda\xc1\x78\xe9\xc7\xd4\x5e\x18\xb2\x74\x54\x40\x04\x5f\x8c\x9d\x43\xa2\x57\x8e\xcb\x7f\xaf\xc1\x6d\x43\x87\xc6\x8b\xbe\x9e\x47\x96\xf4\xcc\x73\x43\xad\x0b\xa4\xa0\x23\x6c\xe0\x72\x29\xcc\xbf\xc7\xdd\xc3\xfe\xad\x7a\x52\x9d\xf4\xde\x16\x26\x1b\x95\x9e\x59\x30\xd9\x5d\xc3\x9e\x04\x55\xdd\xe1\xc0\x24\x25\x8c\xd2\xfe\xbf\x87\x4d\xd9\xbb\x70\x52\x03\xf9\x12\x58\x26\x4f\xdc\x11\x09\x28\x99\xce\x54\x82\xd0\x87\xe8\x9a\x19\x54\x37\x50\x5b\x82\x66\xdd\xa3\x0b\x77\x4b\x6a\xd3\x42\x9c\x78\xb2\x55\xac\x4f\x24\xea\x35\x06\x9a\x8c\xce\xb9\x3c\x90\xbe\x4e\x64\x0e\xb1\x99\x36\xd4\xc6\xbd\xab\xda\x23\x73\x09\x3d\x85\x71\xd3\x75\x2d\xe3\xf7\xc7\x2d\xf6\xce\x4f\x60\x9f\x57\x6b\x34\xfe\x05\x3c\xd3\xc0\x31\xa0\x07\x5b\x7d\x79\x37\xc0\x32\x60\x60\xac\xc5\xc5\x90\x16\xda\x6f\xa2\x1b\x24\x1f\x8f\x71\x14\xb0\x2f\xf1\xa8\x76\xa3\xfc\x42\x1a\x9d\x16\xb2\xc5\x3c\x53\x68\x92\x4a\xe9\x5d\xa5\x3b\x20\xd3\x22\x5d\xc6\xe5\x3b\xa4\xd3\xac\xba\xfd\x10\x3e\x03\x00\x00\xff\xff\x7a\x8a\x17\xb6\xea\x01\x00\x00")

func assetsTemplatesLayoutHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesLayoutHtml,
		"assets/templates/layout.html",
	)
}

func assetsTemplatesLayoutHtml() (*asset, error) {
	bytes, err := assetsTemplatesLayoutHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/layout.html", size: 490, mode: os.FileMode(420), modTime: time.Unix(1488553008, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesNewaccountHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xe2\xb2\x81\xd0\x0a\x40\x60\x93\x91\x9a\x98\x02\x61\x82\xb9\x25\x99\x25\x39\xa9\x76\x1e\xa9\x39\x39\xf9\x36\xfa\x10\x0e\x42\x32\x37\xb5\x24\x51\x21\x39\x23\xb1\xa8\x38\xb5\xc4\x56\xa9\xb4\x24\x4d\xd7\x42\x09\x6a\x8c\x3e\xc2\x1c\x9b\xa4\xfc\x94\x4a\x24\x5d\x19\x86\x76\x7e\xa9\xe5\x0a\xa1\xc5\xa9\x45\x40\x65\x86\x08\x99\xea\xea\x82\xa2\xcc\xbc\x92\x34\x05\x25\xd5\x62\x25\x05\xbd\xda\x5a\xa8\x51\x10\xfd\x40\xb5\x10\xd7\x02\x02\x00\x00\xff\xff\xd6\x4d\xae\x17\xbf\x00\x00\x00")

func assetsTemplatesNewaccountHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesNewaccountHtml,
		"assets/templates/newaccount.html",
	)
}

func assetsTemplatesNewaccountHtml() (*asset, error) {
	bytes, err := assetsTemplatesNewaccountHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/newaccount.html", size: 191, mode: os.FileMode(420), modTime: time.Unix(1488373318, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesNewuserHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xe2\xb2\x81\xd0\x0a\x40\x60\x93\x91\x9a\x98\x02\x61\x82\xb9\x25\x99\x25\x39\xa9\x76\x1e\xa9\x39\x39\xf9\x36\xfa\x10\x0e\x42\x32\x37\xb5\x24\x51\x21\x39\x23\xb1\xa8\x38\xb5\xc4\x56\xa9\xb4\x24\x4d\xd7\x42\x09\x6a\x8c\x3e\xc2\x1c\x9b\xa4\xfc\x94\x4a\x24\x5d\x19\x86\x76\x7e\xa9\xe5\x0a\xa1\xc5\xa9\x45\x40\x65\x86\x08\x99\xea\x6a\xbd\x50\xbf\xc4\xdc\xd4\xda\x5a\x9b\xa4\x22\x24\x0d\x89\x0a\x19\x45\xa9\x69\xb6\x4a\xfa\x40\x6d\x8e\xc9\xc9\xf9\xa5\x79\x25\x4a\x60\x23\xa0\x1c\x1b\xfd\x44\x98\xad\x10\xab\x80\xc6\x42\x3c\x06\x08\x00\x00\xff\xff\xa6\xb7\x94\xc4\xea\x00\x00\x00")

func assetsTemplatesNewuserHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesNewuserHtml,
		"assets/templates/newuser.html",
	)
}

func assetsTemplatesNewuserHtml() (*asset, error) {
	bytes, err := assetsTemplatesNewuserHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/newuser.html", size: 234, mode: os.FileMode(420), modTime: time.Unix(1488373372, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesTransactionsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x8f\xc1\xca\xc2\x30\x10\x84\xef\x79\x8a\x50\x7a\xfc\x69\xe1\x3f\x96\x18\x28\x4a\x9f\x40\x1f\x60\x6b\x17\x2b\x36\xa9\x24\x6b\x2f\x61\xdf\xdd\x8d\xa2\xd6\x83\x39\x04\x66\xe6\x23\x99\x49\x89\xd0\x5d\x27\x20\xd4\xc5\x88\x30\x14\xcc\xca\x8c\xff\x76\x1f\xc0\x47\x38\xd2\x79\xf6\xd1\xd4\x62\x28\x43\xd0\x4f\x68\x55\x4a\x12\x9d\x50\x97\x97\xbf\x72\xd1\xcd\x46\x57\x1d\xb8\x6a\xcd\xeb\xfc\x06\x05\xab\xb4\x1c\x43\x83\x4d\xa9\x5c\xaa\x2e\xcc\xee\x10\x31\x30\x37\x6f\xdd\x6e\x99\x4d\x2d\xc4\x37\xba\xc3\x48\x6b\x34\xeb\x1f\x68\xeb\xe6\x9b\xa7\x57\x24\xb7\x7c\x2b\x15\xd1\x0f\x8f\x12\xcf\xca\xd9\xf9\xcc\xec\x21\x62\x9e\x79\x0f\x00\x00\xff\xff\xf0\xce\x3b\xc5\xfb\x00\x00\x00")

func assetsTemplatesTransactionsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesTransactionsHtml,
		"assets/templates/transactions.html",
	)
}

func assetsTemplatesTransactionsHtml() (*asset, error) {
	bytes, err := assetsTemplatesTransactionsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/transactions.html", size: 251, mode: os.FileMode(420), modTime: time.Unix(1488553875, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesUserhomeHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\x4d\x6e\xdb\x3c\x10\xdd\xeb\x14\x03\x22\xab\x20\x9f\x9d\x38\xdf\xca\x90\x04\x04\x01\xb2\x4b\x6a\xa0\xed\x01\x68\x73\x5c\x09\x11\x7f\x42\x51\x71\x05\x41\xa7\xe9\x4d\x7a\xb2\x0e\x49\xc9\x91\xe3\x38\xf5\xa2\xd9\xc4\xe6\xcc\x7b\x7c\x6f\xe6\x49\xee\x3a\x87\xd2\x54\xdc\x21\xb0\x02\xb9\x60\x7d\x9f\xa4\xc5\x22\xff\x5e\xa3\x85\x15\xff\x81\xb0\x84\xae\x9b\x3d\x48\x94\x7d\x9f\xce\xa9\x42\xe5\xdb\xfc\x6e\xb3\xd1\x8d\x72\x35\x9d\xdc\xe6\x49\xd7\x95\x5b\x98\x3d\x62\x1d\xc0\xb7\xb0\xa9\x78\x5d\x67\x4c\x62\x5d\x13\x03\xcb\x89\x20\x14\xc7\x6e\x54\x82\x3a\xbb\x6e\x7e\xf9\xb5\xd0\x3b\x18\xc9\x2e\xe7\x74\x9a\xa4\x4d\xe5\x7b\x2e\xfc\x95\xb0\xcc\x60\xb8\x9b\x8e\x2c\x57\xa4\xe7\xe2\xf9\x0a\x2e\x5e\x63\x85\xcb\xd9\x08\xa6\x0e\xa0\xbf\x20\x05\x5f\xa8\x63\xe6\x2d\x28\x2e\x09\x31\x30\xf8\x7a\x5a\x95\x24\x87\xaa\x4f\x54\xe9\x7b\xf8\xfd\x2b\x7c\xbb\x6f\xac\x45\xe5\xbc\x44\x6a\x18\x98\x46\x99\xf1\x7f\x3a\xf7\xc2\x82\xea\x3b\x21\x46\xd1\x41\x73\xba\xd5\x56\x02\xdf\xb8\x52\xab\x8c\x71\x21\x78\x2c\x32\x90\xe8\x0a\x2d\x32\x66\x74\xed\xd8\x30\xba\x37\x70\x9c\x47\x5a\x2a\xd3\x38\x70\xad\xc1\x8c\x39\xfc\x49\x30\x2f\x3b\x63\xcd\x60\x80\x81\xa5\xcd\x68\x55\xb5\xf0\xca\xab\x86\x2a\xfb\x8d\x30\x28\x4a\x21\x50\x7d\xc2\x32\x68\x89\x44\x86\x3b\x47\xa4\x19\x9b\x75\xff\x5f\x2d\xae\x7b\x4f\xfd\xd2\x94\x16\xc5\x3b\x86\xba\x59\xcb\x92\x38\x3c\x53\xc6\x48\xb3\x57\x3f\xf7\x3e\x69\x06\x61\x08\x2b\xde\xc2\xa3\x56\xd8\x7e\x30\x02\xc3\xdb\x23\xef\x61\xfa\xe4\xf7\x91\x3f\x23\x70\xca\x56\x2b\xf1\x9f\x8e\x00\x20\x79\xb0\x5a\x2e\x93\xb4\xc6\x0a\x37\x6e\xa0\xd8\xd2\x19\x1b\x57\x3a\x46\x08\x3e\xcb\xd0\x39\x39\x0a\x6e\xb4\xf1\x76\xdf\x14\xed\x63\xc5\x0e\x32\xf6\x1f\xbc\xcf\x58\x04\xe6\x93\xdb\x62\xc6\xa6\x9f\xd3\x79\xb4\x91\x27\xdf\xf4\x7b\x4f\x4e\x1f\x39\xba\x3a\xed\xe7\x23\x9d\xa3\xa9\xbe\x5f\x1e\xeb\xfe\xb8\x78\x28\xfb\x48\x66\xba\xb6\x79\x72\x27\xfd\xc5\x4b\xa0\xe7\xea\x60\xa7\xaa\x91\x6b\xb4\x0c\x6a\x87\x26\x63\xd7\xb3\xeb\x9b\x7d\x3c\x03\x82\xd1\xf6\x56\x8d\xa5\xa8\x20\x81\x4f\xc6\xc1\xc4\x16\x16\x2f\x0b\xde\x4e\x87\xd6\x07\xf4\x49\xef\x26\xc1\x3d\x0c\xe9\xa6\x30\xf4\x9a\x3a\x91\xd3\x45\x7e\x5f\x84\xc9\xae\xa8\x67\xa7\xad\x88\xef\x3e\x5f\xfc\x52\x89\xfd\x29\xbd\x1d\x0f\x14\x98\xe1\x7c\x14\xac\x2b\x61\x76\x62\xa2\xf7\x09\x77\x60\xce\x04\x13\xf2\x66\x02\xbd\xd7\x6a\x5b\x92\xfe\xbf\xa3\x16\xe7\x0d\x28\x3a\x9c\x3e\xd8\xd3\x5f\x83\x35\xa7\x41\xd3\x82\xff\x04\x00\x00\xff\xff\x56\xe0\x09\x52\x22\x06\x00\x00")

func assetsTemplatesUserhomeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesUserhomeHtml,
		"assets/templates/userhome.html",
	)
}

func assetsTemplatesUserhomeHtml() (*asset, error) {
	bytes, err := assetsTemplatesUserhomeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/userhome.html", size: 1570, mode: os.FileMode(420), modTime: time.Unix(1488833487, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/s/main.css": assetsSMainCss,
	"assets/templates/.index.html.swp": assetsTemplatesIndexHtmlSwp,
	"assets/templates/.userhome.html.swp": assetsTemplatesUserhomeHtmlSwp,
	"assets/templates/familypage.html": assetsTemplatesFamilypageHtml,
	"assets/templates/index.html": assetsTemplatesIndexHtml,
	"assets/templates/layout.html": assetsTemplatesLayoutHtml,
	"assets/templates/newaccount.html": assetsTemplatesNewaccountHtml,
	"assets/templates/newuser.html": assetsTemplatesNewuserHtml,
	"assets/templates/transactions.html": assetsTemplatesTransactionsHtml,
	"assets/templates/userhome.html": assetsTemplatesUserhomeHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"s": &bintree{nil, map[string]*bintree{
			"main.css": &bintree{assetsSMainCss, map[string]*bintree{}},
		}},
		"templates": &bintree{nil, map[string]*bintree{
			".index.html.swp": &bintree{assetsTemplatesIndexHtmlSwp, map[string]*bintree{}},
			".userhome.html.swp": &bintree{assetsTemplatesUserhomeHtmlSwp, map[string]*bintree{}},
			"familypage.html": &bintree{assetsTemplatesFamilypageHtml, map[string]*bintree{}},
			"index.html": &bintree{assetsTemplatesIndexHtml, map[string]*bintree{}},
			"layout.html": &bintree{assetsTemplatesLayoutHtml, map[string]*bintree{}},
			"newaccount.html": &bintree{assetsTemplatesNewaccountHtml, map[string]*bintree{}},
			"newuser.html": &bintree{assetsTemplatesNewuserHtml, map[string]*bintree{}},
			"transactions.html": &bintree{assetsTemplatesTransactionsHtml, map[string]*bintree{}},
			"userhome.html": &bintree{assetsTemplatesUserhomeHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

