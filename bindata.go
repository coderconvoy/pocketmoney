// Code generated by go-bindata.
// sources:
// assets/s/main.css
// assets/templates/.forms.html.swp
// assets/templates/.transactions.html.swp
// assets/templates/.userhome.html.swp
// assets/templates/familypage.html
// assets/templates/forms.html
// assets/templates/index.html
// assets/templates/layout.html
// assets/templates/newaccount.html
// assets/templates/newuser.html
// assets/templates/transactions.html
// assets/templates/userhome.html
// assets/templates/view.html
// assets/templates/viewac.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsSMainCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8b\xb1\xae\xc2\x30\x0c\x45\xf7\x7c\x85\xa5\xb7\x3e\xb1\xa0\x0c\x4d\xbf\x26\xc6\x75\x14\xd1\xd8\x91\x49\x24\x10\xe2\xdf\x29\xa1\x2c\x70\xc7\x7b\xce\x41\xa5\xdb\xdd\xc1\x36\x8c\xa7\x73\x32\xed\x42\xe1\x6f\x9a\x98\x11\x67\xf7\x70\xee\x50\x16\xe9\xf0\xab\x78\xcf\x1c\xe3\x50\x58\xad\x7c\x0c\x35\x5a\x2c\xf8\x7a\x85\x8b\xae\x99\x00\xd7\xad\x99\x07\x2b\xd1\x52\x96\x17\x1b\x55\x96\xda\x1b\xfc\x03\xf6\xd6\x54\xf6\xfe\xcb\x69\xb4\xff\x35\x12\x65\x49\xe1\xf8\x06\xcf\x00\x00\x00\xff\xff\x54\x41\xbd\xbe\xb6\x00\x00\x00")

func assetsSMainCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsSMainCss,
		"assets/s/main.css",
	)
}

func assetsSMainCss() (*asset, error) {
	bytes, err := assetsSMainCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/s/main.css", size: 182, mode: os.FileMode(420), modTime: time.Unix(1489057121, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesFormsHtmlSwp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9a\x4d\x8c\xdb\x44\x14\xc7\xa7\x2d\xa5\x14\xd8\x16\x51\x21\x2e\x1c\x06\xb3\x42\x20\x55\xf6\xee\xb6\x62\xa5\x55\x36\x52\xd9\x76\x0b\x12\xdb\x6e\xbf\xf8\xba\xac\x26\xf1\x24\xb6\x6a\x7b\x5c\xcf\x24\x21\xb2\x02\x1c\x7b\xe3\x80\x40\x5c\x5a\x8a\x38\xf0\x75\x00\x09\x81\x04\xc7\x0a\x04\xe2\x80\x7a\x82\x43\xb9\x71\xe8\x09\x89\x4b\x39\xf3\xf7\x57\x62\x67\xb7\x9b\x16\x56\x2d\x1f\xf3\x97\x7e\x8d\x1d\xbf\xf7\xfc\xfc\xe6\xcd\x4b\xa3\x4d\x63\xe6\xf9\x67\x57\xe8\xbc\x79\x90\x40\x0f\x10\xf2\xd9\xc3\x57\x5e\xfc\x70\xe7\xfe\xed\x3f\xef\x26\xc4\x67\x4a\x39\xbc\x47\x26\xe9\x28\x8f\x54\x7f\x6e\xa2\x19\x79\x35\x0f\x68\xc9\x66\xe4\x86\x4a\x5a\x6d\xe1\xb1\xa0\x6d\xc9\xa8\x69\xb5\x5d\xe5\x74\x1a\x66\x53\xf8\x56\x53\xd8\x3c\x6a\x8a\xa0\x2b\xfa\x56\x28\x9a\x67\xb9\xf2\x45\xc0\xfb\x16\x93\x92\xc3\x49\x71\x3f\xf4\x98\xe2\xd2\x6a\x89\xc8\x97\xa6\xa3\x7c\x6f\xf2\xbd\xb5\xb4\xb4\xa6\xc8\x81\xb9\xd9\x99\xe4\xe8\x31\xe3\x51\xba\xef\xc1\x33\x77\x3a\x21\x2d\x2d\x2d\x2d\x2d\x2d\x2d\x2d\x2d\x2d\xad\xdb\x28\x15\x6e\x23\xaf\xe1\x75\x7b\x7e\x7e\x22\x7f\xdd\x36\xf6\xaa\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xf5\xef\x15\xb3\x09\x79\x19\x5f\xfe\xbf\xde\x41\xd2\xbf\xff\x17\xdf\xff\x7f\xdd\x4b\xc8\x97\xe0\x02\x38\x05\xa6\xc0\x2f\x7b\x08\xb9\x02\xbe\x07\xdf\x81\x4f\xc0\x39\xb0\x13\x5c\x9f\x22\xe4\x37\x70\x05\x5c\x02\x47\xc1\x3c\xb0\xc0\x43\xe0\xf7\xfb\x09\xf9\x1c\x7c\x00\xde\x05\x17\xc1\x05\x70\x1e\x34\xc0\xd3\xe0\x8f\xfb\x08\xf9\x14\xb4\xc1\x23\xe0\xda\xbd\x84\x7c\x0c\x2e\x82\xb7\xc1\x5b\x20\x06\x2b\xe0\x71\x70\x75\x37\x21\x6f\x80\xc3\x60\x2f\xd8\x03\xbe\xbd\x87\x90\xd7\x01\x03\x4f\x81\x5d\xe0\xfa\x2e\xdc\x1f\x7c\x01\x3e\x02\xef\x81\x4b\xe0\x3c\x68\x82\x65\xb0\x1b\xfc\x78\x37\x21\xef\x00\x06\x5e\x02\x27\xc0\x2a\x98\x07\x53\xe0\xda\x4e\x42\xbe\x01\x21\x98\x06\x57\xef\x22\xe4\x4d\xf0\x0c\xd8\x07\x7e\x42\x0d\x7f\x00\x97\x77\x64\xf5\xfc\x6a\xc7\x9d\x5c\x59\xad\xff\xb6\xe2\x98\x07\xf6\x60\x40\x6a\xe9\xef\x60\xea\x84\x42\xe5\xe3\xf4\xdc\x0d\xc2\x8e\xa2\xaa\x1f\xf2\x45\x43\x76\x1a\xbe\xab\x0c\xaa\xf8\x2b\x6a\xd1\x58\x65\x7d\x7a\x4c\xf4\x0c\xda\x65\x5e\x87\x8f\xce\x33\xe7\xd5\x4e\x14\x0a\xc9\x17\xc6\x42\x24\xae\x06\x0d\x98\x8f\xe3\x30\x33\x31\xea\xb5\x46\x94\x39\x1d\xf2\x45\x27\x50\xf0\xb9\xfc\x7e\xc5\x2b\xe8\xf8\x0d\x1e\x19\x54\x2a\x1e\x2e\x1a\x33\xe6\xcc\xac\x41\x7d\x37\xc0\x61\x11\x8b\xa5\x9e\xa5\x50\xa7\xc5\x02\xad\x49\xee\xf1\xa6\xca\x4d\x94\x30\xea\x71\x5c\xfc\xf8\x87\x1a\x2d\x3f\x5c\x63\x9e\xc7\x9a\xcd\xc4\x55\x1a\xd4\x1c\x0c\x6a\x56\xe6\x32\x8a\xb3\x1c\x09\x7f\x3c\x52\x0b\xef\x75\x24\x12\xda\x28\x5e\x72\x61\x2c\x18\x59\x57\xc9\x72\x19\x12\x87\xe4\xc8\xa0\x11\x67\xb6\x08\xbc\x7e\x51\xd1\x38\x36\x97\x7d\xee\x0f\x06\x06\x75\x5c\xdb\xe6\x41\x9d\xd2\xd1\xca\x84\xf5\xd3\x0e\xa7\xa2\x17\xf0\x88\x8a\x16\x55\x38\x91\x58\x50\x37\x68\xd3\xfc\x99\x68\xcf\xf5\x3c\xea\xb0\x2e\xa7\x4a\x50\xd6\x51\x8e\x88\x5c\x89\x13\xc7\x95\x34\x64\x7d\x9f\x07\xaa\x66\x85\xa5\xd5\x76\x0e\xd4\x4f\xf2\x73\x1d\x2e\x15\x65\x74\xb5\xb0\xc0\xbb\xd9\x23\x24\xbd\x81\xe0\xca\x15\xa8\x3d\x02\x60\x15\x38\x82\xda\x38\x11\x12\xd5\x27\x55\x0b\x9f\x9d\xe5\x51\x16\x6e\x9d\x65\x1c\xdb\xbc\xe5\x06\x49\xdd\x22\x7f\xad\xb0\x42\x37\x6e\xdc\x96\x37\x6e\xc3\x25\x87\x05\x6d\x3e\xec\xc2\xfc\x34\x73\x5b\x12\x41\xcb\x45\x42\x0b\xd5\x00\x21\x93\xb2\x27\x22\x7b\xd8\x88\x3d\x7b\xae\xd4\x3a\xc7\x78\x8f\x16\x26\x37\xe1\x3a\x5b\x72\x3d\xee\xd9\x28\xdb\xcd\xb9\x0a\xcf\x86\x77\xc9\x39\xa9\x7e\x96\xfe\x30\x46\x56\xfb\x6a\x55\x9b\x4e\x12\x69\x42\x41\x73\xa3\x72\x3d\x6f\x71\x7b\x2f\xa1\x1b\x55\xa9\xae\xd9\x69\xe6\x9a\xc7\x1a\xdf\x2b\xe9\xbb\x22\x4c\xd2\x2c\xdc\x7c\x11\x28\x47\x1a\xf5\x95\xf4\xb5\x66\x65\x57\x6f\x68\x6e\xb3\x3e\x8c\x0f\xe3\xdf\xaa\x69\x75\xff\xd9\xdc\x63\xfd\xb5\x24\xe9\x3c\x1f\x6c\x84\x80\x1e\xe9\xf2\xa8\x3f\x56\xf3\x62\x70\xa4\xc3\x62\xd6\x28\xfb\x0f\x9f\x6c\x3e\x0f\x72\x4a\xb1\x48\xd1\xc3\x78\xca\xb1\x20\x76\x5a\x87\xcc\x55\x26\x46\xc6\x68\x83\x26\xd7\x4e\x2e\x2f\x61\x8b\x66\x65\xf8\x47\xcc\xbe\xad\x9c\x7f\x9b\xcd\xc0\xf5\xf1\xfc\xfe\xc6\xe1\x2a\x13\x66\x05\x63\x01\xe3\x05\xf5\xce\xa6\xd5\xf1\xc8\xe6\xd1\x8d\xa6\x0c\xb3\x6d\x99\x1b\x4e\x68\xf9\xa1\xd9\xdf\x68\xfa\xff\xf7\x67\xda\x2d\xae\xe7\x96\x7f\xa2\x8d\x7a\xe3\x2f\x7c\xf4\x54\x9b\x21\xb1\x48\xfa\xa0\xd2\x08\x95\xa6\xa8\x0e\x9e\x38\x9e\xee\x9a\x67\xf2\xbc\x93\xdd\x3c\xf6\x46\x75\x1c\xc5\x71\x94\x8e\xe9\xe9\xb3\xfb\xe9\x74\x97\x2e\x2c\x52\x73\x99\xf9\xe6\x0a\x4f\x96\x54\xe2\x0e\xa5\x64\xca\xff\x2b\x48\xaf\x8c\x72\x18\xcf\x69\x72\x5e\x0b\xe9\xf9\xb1\x8d\x73\x2c\x5f\x5c\x3f\x69\x4b\x39\x97\x52\x5e\xe5\x91\x2b\x6c\xf3\x50\xbe\xca\x1b\xa5\x3e\xec\x80\xdb\x97\xfd\x42\x12\x39\xfd\xcd\x36\xca\x6b\x1e\x49\x6e\xb1\xd9\x03\xd1\x62\x15\x9e\x48\x9f\xe9\x39\x57\xaa\x17\x22\x57\x71\x3c\x15\x97\x92\xa6\x2d\xf7\xe4\xba\x47\x2b\xf5\xf6\x66\x13\x63\x93\x69\x71\xc8\xb6\x87\x93\x22\x39\x9e\xb0\x2d\xf2\xdb\x65\x3b\x23\x64\x4a\xe1\xd1\x17\x0d\x33\x3e\xb8\x7f\x6e\x66\x90\xec\x95\x73\x1d\x37\xe2\xf6\x16\x6e\x2e\x52\x6c\x2b\x64\x47\xf3\x35\xde\x64\xd0\xe6\x09\x4e\xd8\x5a\x30\x5c\x2b\x2c\x51\xaf\x3f\x03\x00\x00\xff\xff\x3b\x0f\xbf\xac\x00\x30\x00\x00")

func assetsTemplatesFormsHtmlSwpBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesFormsHtmlSwp,
		"assets/templates/.forms.html.swp",
	)
}

func assetsTemplatesFormsHtmlSwp() (*asset, error) {
	bytes, err := assetsTemplatesFormsHtmlSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/.forms.html.swp", size: 12288, mode: os.FileMode(420), modTime: time.Unix(1490178250, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesTransactionsHtmlSwp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\xda\x4f\x8b\x13\x31\x18\x06\xf0\xec\x82\x07\x0f\xee\x2e\xfe\x3b\x4a\xac\x45\x2f\xeb\x64\xad\x82\x28\x63\x41\x90\x95\x3d\x08\x7b\x50\xf1\x9a\x4e\x5e\x3a\x75\x9b\x64\x48\xd2\x4a\x19\x46\x0f\x5e\xfd\x08\x5e\x04\x3f\x8d\x07\x8f\xfa\x25\xfc\x0e\xfa\xce\xda\x81\xba\x0a\xbd\xb9\x88\xcf\x0f\x1e\x92\xc9\x9b\x4e\xdf\x1c\x07\x32\xda\x7b\x7e\xf0\x44\xde\xcd\xee\x08\xb6\x23\xc4\x3b\xf3\xe9\xc5\xbd\x33\xbb\x9b\x5f\xcf\x0a\x61\x75\x4a\x25\xbd\x12\xeb\x3c\xa6\x90\x16\x83\xb5\xdb\xc4\xeb\xe5\x0b\x55\x2c\xc2\xa4\x4a\x51\x8d\xfd\x54\xbb\xb1\x8a\xa1\x50\xe3\x49\x2a\x67\xa3\xac\xf0\x56\x15\xde\x50\x28\xbc\x9b\xfb\x85\xaa\x7c\x71\x44\xc9\x7a\x47\x0b\xa5\x63\x24\xfe\x51\x22\x5b\x4d\x75\x22\x9e\x05\xed\xa2\x2e\xd2\xc4\xbb\x98\x95\xc9\x4e\xd7\xb7\x00\xf0\x1f\x3b\x27\x6e\x0f\x6e\xed\xb5\xb3\x6b\xbd\xab\xf2\xc2\xf9\x67\xa7\xdd\x10\x00\x00\x00\x00\x00\xfc\x45\xa9\xda\x10\x6f\x78\xdc\x5c\x3e\xef\x2c\xc7\x8d\x13\x23\x00\x00\x00\x00\x00\x00\x00\xfc\xbb\xb4\x11\xe2\xe3\x16\x4f\xb6\xc5\xf1\xc7\x7f\xf7\xfd\xff\x8d\x9f\xbf\x70\x3e\x73\x3e\x70\xde\x73\xde\x72\x5e\x72\x0e\x38\x37\x39\x37\x38\xd7\x39\x57\x38\x97\x39\x97\x38\x17\xb7\x7f\xbe\xeb\xfb\xd6\xe9\x9d\x09\x00\x00\x00\x00\x00\x00\xe0\xa4\xba\xee\xee\x93\xcb\xde\x48\x47\xea\x35\x0d\xaf\xe6\x49\x8f\xa6\x34\xe4\x2a\x39\xd3\xae\xe4\x2a\x85\xa1\x90\x2c\x4f\x66\x58\xd7\xfd\x79\x76\x38\x0b\x95\x8f\xd4\x34\x5c\x33\xab\xb5\xe3\xdb\xea\x92\x77\x3c\xb4\x7e\xe6\xd2\xef\x1b\xb8\xf4\x88\xe2\x9f\x0b\xfb\xc1\xdb\xae\x90\xb7\xff\x59\xd7\x41\xbb\x31\xc9\xfe\xd1\x6e\x7f\x2e\xef\x3f\x90\xd9\xbe\xb6\xd9\x21\x85\x89\x37\xd9\xd3\x95\x1b\xf0\x92\xfb\xec\xfa\xce\xcb\xc1\x70\xb5\x96\x2b\x5e\xf8\xe5\xac\x25\x69\xd3\x9e\xf5\x47\x00\x00\x00\xff\xff\x6b\xd7\x4b\xa4\x00\x30\x00\x00")

func assetsTemplatesTransactionsHtmlSwpBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesTransactionsHtmlSwp,
		"assets/templates/.transactions.html.swp",
	)
}

func assetsTemplatesTransactionsHtmlSwp() (*asset, error) {
	bytes, err := assetsTemplatesTransactionsHtmlSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/.transactions.html.swp", size: 12288, mode: os.FileMode(420), modTime: time.Unix(1490178305, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesUserhomeHtmlSwp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9a\xbf\x6f\x1c\x45\x14\xc7\x27\x91\x28\xec\x24\x04\x01\x0d\x54\xc3\x62\xb9\x88\x92\x5d\xff\x40\x04\x25\x77\x17\x45\x04\x1b\x23\x19\x8c\xad\x00\x9d\x35\xb7\xfb\xee\x76\xc9\xce\xce\x66\x67\xd6\xf6\xe9\x74\xc0\x5f\x40\x17\x09\x51\xf0\x17\xa4\xe1\xef\xa0\x41\x34\x11\x0d\x1d\x05\x3f\x1a\x7a\x0a\xbe\xb3\x3f\xce\xe7\xe4\x2c\x2b\x0d\x51\x94\xf9\x48\x5f\xed\xcd\xcc\x9b\x37\xef\xcd\x9b\x59\xe9\x74\xd7\x5f\xf9\x6c\x6b\x9b\x5f\xf7\xdf\x61\xe0\x15\xc6\xde\xfd\xf4\x97\x2f\x7e\x78\xe9\xea\xf9\x47\x0b\x8c\x49\x61\x4c\x4c\x87\xec\x2c\x36\xa9\x30\xa3\xb5\x33\xcd\xd8\x57\x8d\xc3\x40\x87\x45\x92\x1b\x1d\x0c\x55\x2a\xb2\x61\xa0\x8b\x30\x18\x26\x26\x2e\xfb\x7e\xa8\x64\x10\xaa\x88\x8a\x50\x65\x07\x6a\x14\xe4\x2a\xbc\x47\x46\xaa\x8c\x46\x81\xd0\x9a\x30\xc9\x90\xcc\x53\x61\x48\x07\xa5\xa6\x22\x56\x92\xfc\xd8\xc8\xf4\xec\xe5\x1d\x8e\x17\x97\xd2\x0c\xae\xbd\x77\x89\xad\xaf\xad\xae\xd8\xe6\xdb\xde\x5b\xfc\xb5\x57\xef\x3e\xeb\xa8\x1c\x0e\x87\xc3\xe1\x70\x38\x1c\x0e\xc7\xff\x88\xc9\xcf\xb1\xaf\xf1\x3c\xdf\xb4\xdb\xaf\xf1\xe7\x1e\x7b\x3a\x1c\x0e\x87\xc3\xe1\x70\x38\x1c\x0e\x87\xc3\xe1\x78\x7e\x11\x11\x63\xdf\x2c\x30\x16\x2d\xb2\xea\xf7\xff\xf6\xfb\xff\xdf\x97\x19\xfb\x0d\xfa\x09\x7a\x08\x7d\x0f\x7d\x0b\xa5\x50\x04\x75\xa1\x6b\xd0\x65\xe8\xdf\x97\x19\xfb\x15\xfa\x0e\xda\x85\x16\xa0\x87\x97\x60\x07\x5d\x87\xfe\xb9\xc8\xd8\xef\xd0\x23\xe8\x01\xb4\x07\x6d\x42\x37\xa1\x75\x68\x0d\x5a\x85\x56\xa0\x37\xa1\x37\xa0\xd7\xa1\xbf\x2e\x60\x7d\x28\x84\x3e\x87\x3e\x81\xb6\xa0\x0f\xa1\x65\xe8\x22\x74\x01\xfa\x13\xb1\xff\x01\xfd\x0c\xfd\x08\x3d\x80\x8e\x16\xeb\x9c\xc2\xc5\x67\xb9\xbb\x0e\x87\xc3\xe1\x70\x38\x1c\x2f\x26\xe3\x71\xfb\x9f\x4d\xee\xf5\x85\x26\x6f\x32\x39\xd1\x37\x28\xe4\x7e\x41\xf7\x4b\xd2\xc6\xe3\xfe\x9c\xc1\x30\xce\x85\xd6\xf3\xc7\xb4\x11\x59\x94\x64\x43\x8c\xf2\x39\xc3\xb9\x18\xd5\xf3\x9e\x18\x11\x51\xb4\x2f\xc2\x50\x95\x99\x99\x63\x31\xe3\xb6\xf2\xba\x74\xb4\xba\xca\x6f\x74\xb9\xbf\x47\xe6\x23\xd5\x6f\x0c\x30\xba\x21\x49\xda\xc9\x9d\xa0\x4c\x7b\x30\xa4\x2c\x42\x93\x83\xd9\xcf\x9d\x34\xe9\x75\x04\x8f\x0b\x1a\x74\xbd\xe0\x20\xa1\xc3\x5b\x65\x26\x24\x75\xe1\xf9\xc0\xbf\xab\xa9\xb0\xad\xc9\x64\x59\x84\x75\xd7\xc7\x55\xd3\xeb\xcd\x34\x3a\x81\xe8\x2d\x67\x7d\x9d\xdf\x1c\x8f\xab\x7f\xc4\x72\x0c\x7d\x60\x97\xe8\x04\x70\xdf\xac\x99\x0c\x38\xdd\xe7\x33\x4e\xf9\x52\x13\xe2\x78\x5c\x88\x6c\x88\xf6\xbd\xab\x18\xaf\x92\xd9\x10\xd2\xdf\xa1\x22\x51\x91\x7f\xbb\xde\x0a\x0d\xc3\x8e\xcd\x04\xe6\xc1\x95\xbd\x58\x1d\xf2\x76\xe4\x4a\x60\xf3\x64\xa7\xe6\x78\x22\xdf\x69\xae\x05\xe9\x5c\x65\x51\x53\xdf\x5b\x49\x84\xfc\xfc\xad\x3b\x55\xaa\x26\x51\x59\x37\xc9\x74\x82\xc2\xf7\xb6\xaa\xa7\x4d\xf2\x69\x3d\x84\x22\x0b\x29\xf5\x7a\xef\x57\xcf\xa9\x07\xc4\x93\x6a\xe2\x6d\x44\xc1\x40\x15\xb2\x1e\x79\x4a\xff\x05\x7d\x49\x21\x22\xdc\xad\x9e\x53\xff\x95\x97\x24\xcb\x4b\xc3\xcd\x28\xa7\xae\xa7\xcb\xbe\x4c\x70\x98\x0e\x44\x5a\xa2\x89\x7d\xa3\x1c\xd3\x8e\x8d\x35\xa5\x70\xc0\xab\xc2\xe3\x0c\x2a\x69\xeb\x3b\x73\x2a\x65\xbe\x2f\x47\xcd\x99\xc4\x71\x5f\x32\x2a\xb7\xc5\xad\xa7\x1d\xfb\x41\x78\xbb\x75\xb0\x54\x4c\x26\x3c\x16\x9a\x37\xc1\x53\xc4\x05\xc7\x91\x97\x94\x19\xae\x06\xbc\x3d\x28\xfe\x6d\x69\x7d\xc2\xd8\xae\xca\x47\xaa\xe4\x49\x66\x94\xf5\x74\x07\xd3\x26\x13\x7f\x7e\x46\x86\x8e\x8e\xf3\x11\x75\x3e\x3c\x4e\xa2\x88\x32\x2c\x29\x22\x95\xa5\xa3\x26\x9d\x7a\xaf\xbc\x53\xb6\xe6\x84\xa3\x66\x7b\x4f\xf3\x94\x44\x8d\x97\x8e\xad\x18\x0f\x53\xdc\xfd\xae\x37\x7d\x41\x34\x45\xf1\x4e\x96\xcd\xe3\x92\x4c\xac\xa2\xae\x97\x2b\xdd\x6e\x7a\x7b\x1b\xfc\x0d\x64\xfd\xe4\x85\xa8\x4d\x9a\x4b\x01\x3f\xed\x49\x89\xd7\x7a\x3b\x54\xdd\x7e\xde\xec\xb3\xee\x04\xe8\x64\x95\xbf\x14\x11\x37\xd6\xb8\x9c\xf8\x30\xbd\x49\x9b\x64\xb6\x4b\x6d\xda\x39\xd3\x77\x43\x7b\x31\x3a\xf1\x7a\x9b\x8d\x24\xad\xc5\x90\x6c\xfd\xfd\x6d\xd2\xb6\xca\xf1\x7a\xb3\x40\xdd\x61\xad\x7b\xed\xd5\xab\x47\x6d\x60\x36\x09\xbe\x83\xa9\xfc\x86\xad\x5e\xbd\x42\x1b\x5d\x95\x58\x1d\x4e\xbb\xb2\x3d\x43\x55\xcf\x63\xef\xc6\x18\x7b\x6e\xdf\xc3\xff\x05\x00\x00\xff\xff\xfd\x5a\x50\x0d\x00\x30\x00\x00")

func assetsTemplatesUserhomeHtmlSwpBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesUserhomeHtmlSwp,
		"assets/templates/.userhome.html.swp",
	)
}

func assetsTemplatesUserhomeHtmlSwp() (*asset, error) {
	bytes, err := assetsTemplatesUserhomeHtmlSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/.userhome.html.swp", size: 12288, mode: os.FileMode(420), modTime: time.Unix(1490178360, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesFamilypageHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x53\x4d\x6b\xdc\x30\x10\xbd\xef\xaf\x18\x86\x1e\x36\xd0\x78\x9b\x0d\xb9\x04\xdb\x10\x42\x03\x39\xa4\x2c\x94\xfe\x00\xd9\x9a\x8d\x45\x2d\xc9\x95\x64\x92\xc5\xf8\xbf\x57\xb2\xbc\xfe\x82\xd2\xbd\xac\x2d\xbf\x99\xf7\xde\xbc\x51\xd7\x39\x92\x4d\xcd\x1c\x01\x56\xc4\x38\xf6\xfd\x0e\xfc\x2f\xad\xee\xf2\x17\x26\x45\x7d\x81\x13\x7b\xa7\x47\xe8\xba\xc4\xbf\x27\xf1\xec\x07\x93\xd4\xf7\xe9\xc1\x83\x22\xba\xad\xe3\x43\xd7\x19\xa6\xde\x09\x06\xec\x1b\xc9\x82\x8c\x1d\x3b\x0e\xb8\x5a\xe4\xd3\x4b\xc4\x27\xbf\x2c\x19\x35\xf4\x83\xdb\x5b\x7f\x50\xfc\xa4\x9a\x4a\x07\xc9\x89\x19\x52\x0e\x30\xfe\x23\xe0\x73\x25\xea\x20\x30\x2d\xcc\xba\xcb\x44\xbf\x6e\x1d\xa5\xec\xbf\x0c\x62\x4e\x64\x84\xe6\x03\xdb\x53\x59\xea\x56\x39\x0b\x13\xf7\xcd\x42\xe3\x52\xab\x97\x17\xad\xfa\x6e\x52\x2b\xba\x40\xf2\x5d\xf1\xe0\x7c\x6b\x24\x32\x52\xf8\xb8\x96\x76\x58\x6a\x9b\xeb\x96\xd8\x19\x13\x9c\x4d\xee\xba\x4e\x9c\x61\x3f\x88\x7f\xb5\xe3\x30\x92\x17\x49\xf2\xaa\x36\x3d\x6b\x23\x81\x95\x4e\x68\x95\x21\xe3\x5c\x0e\x03\x47\x90\xe4\x2a\xcd\x33\x6c\xb4\x75\x98\xc3\x6e\x16\xe8\x3b\xfa\x58\x56\x91\x54\xf7\x50\xd6\xcc\xda\x0c\x25\x59\xeb\xb3\xc6\x60\xdb\x83\x60\x48\xf8\x3e\xdf\xfd\xcb\x5f\x5a\x1d\xf3\x27\xce\x61\xdc\x93\x18\xb7\x2f\x39\xce\x25\x61\x7a\xf0\x08\xa9\x50\x4d\xeb\xc0\x5d\x1a\xca\xd0\xd1\xa7\x4f\x33\x8c\x3d\xc3\x76\x0c\x00\xe7\x92\x57\x0b\xd1\xec\xa6\xac\xac\xa8\xfc\x5d\xe8\xcf\x6b\x69\x13\xd7\x22\x5f\x6d\xc3\xc9\x1b\xf9\xd0\x86\x6f\x39\x9b\xf1\x1c\xa1\x61\xce\x79\xce\x0c\x93\xee\xe1\xeb\xf1\x5b\x8f\x60\xe8\x4f\x2b\x0c\xf1\x6b\xdf\x0f\x7e\xb7\xe9\xba\x7f\x13\x4a\xc8\x56\xc2\x03\xd4\x14\xca\xed\xcd\xea\xfb\xb3\x56\x67\xe1\xa3\xf8\x3f\xfb\x44\x71\xdc\x50\xac\xf0\xb6\x2d\xa4\x70\xe3\x4c\xd2\x43\x88\x79\xbd\x35\xcb\x5b\x5b\x30\x4b\xe1\xd6\xfe\x0d\x00\x00\xff\xff\xc7\x53\xf5\xaa\xca\x03\x00\x00")

func assetsTemplatesFamilypageHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesFamilypageHtml,
		"assets/templates/familypage.html",
	)
}

func assetsTemplatesFamilypageHtml() (*asset, error) {
	bytes, err := assetsTemplatesFamilypageHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/familypage.html", size: 970, mode: os.FileMode(420), modTime: time.Unix(1489659020, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesFormsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x56\xcd\x6e\xe3\x36\x10\xbe\xfb\x29\x06\x44\x0e\x2d\x10\x28\xce\xb6\x40\x01\xc3\x16\x10\x78\xd7\xa7\x26\x6b\x6c\xb7\xe8\xd1\x60\xcc\x71\x24\x44\xfc\x29\x49\xd9\x15\x04\x3f\x4d\xdf\xa4\x4f\xd6\xa1\x7e\x6c\xc9\x76\x6c\xb7\x08\x7a\x28\xd6\x07\x4b\x24\x67\x3e\x7e\xf3\xcd\x70\xa8\xb2\x14\xb8\x4a\x15\x02\x5b\x59\xb9\xe0\x42\x2c\xf8\x72\xa9\x73\xe5\xd9\x76\x3b\x00\xfa\x8d\x57\xda\x4a\xe0\x4b\x9f\x6a\x35\x61\x64\xd0\xae\x83\x44\x9f\x68\x31\x61\x46\x3b\xcf\xe2\xda\x38\xf9\x21\x7e\x10\x02\x1e\x6a\x9b\xf1\x1d\x8d\xeb\x85\x54\x99\xdc\x83\x2f\x0c\x4e\x98\xc7\x3f\xc8\x5d\x71\x49\xef\xb9\x43\x1b\xde\x18\x58\xe4\x42\xab\xac\x80\x35\xcf\x72\x5a\x29\xcb\x68\x26\x51\x6e\xb7\x0c\x92\x54\x08\x54\x17\x90\x1a\x5e\x35\x98\xe1\xde\x13\xf0\x84\x45\xe5\x8f\xb7\x1f\x86\xdb\x00\xff\x7b\x9e\x5a\x14\x27\x50\x5c\xfe\x2c\x53\xc2\x09\x68\x13\x46\xfc\x59\xcb\x21\xbc\x37\x0e\x77\x41\x87\x78\x50\x96\xa8\x04\x49\x33\xe8\x08\x27\xcd\x42\x16\xcd\xf6\xae\xd5\x2d\xfc\xca\xd2\x72\xf5\x82\x70\xf3\x0a\xb7\x70\xb3\x86\xd1\x04\xbe\x8b\x66\x5c\x46\x3f\xa7\xce\xff\x66\x53\x8f\x24\x14\x3a\x07\x55\xa4\xdf\x77\x3c\xc7\xda\x04\xc1\xf7\x5a\xdc\xac\xa3\x5f\x1b\xa9\xb6\xdb\x51\x35\x7e\xaa\xde\x59\x7c\x66\x71\x14\x38\x48\xad\xb0\xa0\xed\xa3\x4f\x81\xf9\xf8\xae\x86\x8e\x3b\x2c\xeb\x90\xf6\xcf\x6e\x64\x3c\xcb\xce\x87\x76\x5b\x07\x56\xc5\x35\x47\x9b\x6a\x11\x35\xe9\x77\xef\x1f\xd0\xbf\x60\x1f\x2a\x6c\x47\xbd\x43\x1b\x3a\xbc\x1f\x51\x3e\x93\x55\x5b\xf2\x67\xb9\x1e\xf1\xeb\x73\x3a\xe4\xd3\xab\x14\x3a\x62\x86\x17\xa7\x8f\x56\x58\x38\x75\xa6\xda\x73\xf5\xc8\x5f\x11\x38\xcc\x79\x21\xf1\xdd\x8f\x16\x40\x85\x35\xb3\x5a\x8e\x60\xec\x30\xc3\xa5\x6f\x60\x56\x34\x17\x62\xf6\x28\x4d\xc6\xfd\x71\xc1\x43\x14\x34\xa8\x7d\x6a\x4a\x5f\xf5\x21\x88\xd7\xc7\x10\xdd\xca\xea\x61\x8c\x9f\x6d\x8d\xf3\x20\xc3\x2a\x15\xf1\x5f\x7f\xf6\xa2\x54\x79\x48\x17\x03\xe7\xd1\x4c\xd8\x30\x1a\xde\x93\x72\x29\x69\x38\xdc\x35\x83\xca\x93\xed\xa1\xe6\xb9\x25\x4d\x71\x74\x46\x2f\x53\x9b\x74\x9c\x2e\x74\x0a\x4a\x05\x3c\xe9\xcd\xae\x5b\xb4\xe3\xcb\x1d\x83\xea\xc0\x79\xae\x44\xaa\x5e\xde\xec\xb3\x3b\x83\x2b\x8a\xe2\x97\xc6\x16\x3e\x5b\x81\x76\x5f\x1b\xef\x98\xd3\xff\x4b\x5e\x2b\x2f\xd2\xcb\x7a\xf8\x48\x94\x47\x7d\x3f\x41\x53\xad\x9f\x0b\x46\x6c\x7f\x66\xc2\xda\x97\xd9\x34\x74\x80\xdd\xf6\x5f\x13\x54\xf0\x69\x8d\xb6\x38\x00\x6a\x43\xa9\xe8\xdf\xb7\x90\x02\xb3\x70\xca\x1b\xc8\x9f\xda\x4a\xe9\x49\x5a\xd9\x2c\x02\x4a\x37\xd7\xfd\x96\x24\x78\xe1\x58\xfc\x91\xfe\x8f\x1b\xe2\x81\x29\x75\x7f\x9f\x90\xf1\x63\xf5\xec\x9b\x1f\x67\xe6\x9a\xb2\x9f\x52\x3b\x09\x2a\x35\x1b\x34\xc3\xab\x8a\x7e\x99\x18\xee\xaa\x66\xdc\x2f\xf7\x66\xfe\xad\x4f\x8a\x69\x52\x35\xed\x39\xd9\x6c\xb4\x15\xfb\xfa\xfe\x9c\x89\xdd\x2c\x1c\x64\xc0\x34\xf3\xad\xf6\x3a\x13\x66\x23\x3a\xb9\x7b\xc2\x0d\x98\x2b\x9d\xc9\xf3\xbe\xe3\x3a\xd5\x6a\x95\x12\xff\xcb\x5e\x1f\x3a\x5e\xe7\x34\xad\x22\xdc\x6b\x5a\x0f\xe3\xc1\x05\x3d\xc3\x47\x0d\x3a\x7f\x2c\xa8\xa4\xbe\xd0\x2e\x9e\x54\xf5\x1f\x5d\x3d\x5f\x6a\xa4\x53\xb7\x4f\x65\x62\x62\x3a\x07\xa0\x37\x0a\x2d\xe8\x15\x78\x1a\x38\xac\x1b\x52\xd3\x09\x60\x93\x66\x19\x24\x7c\x8d\xe0\x35\xf0\x9c\xb6\xb2\xa9\xa3\x41\x92\x3a\x4a\x42\x03\x6a\xfe\xbb\x1b\x2d\x40\x9d\x6c\x5d\xf5\xe7\xc2\xb7\x3b\xed\xec\x9d\x76\x58\x96\x7f\x07\x00\x00\xff\xff\xd2\x10\xa6\x0f\x46\x0c\x00\x00")

func assetsTemplatesFormsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesFormsHtml,
		"assets/templates/forms.html",
	)
}

func assetsTemplatesFormsHtml() (*asset, error) {
	bytes, err := assetsTemplatesFormsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/forms.html", size: 3142, mode: os.FileMode(420), modTime: time.Unix(1490032560, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\xcd\xce\x9b\x30\x10\xbc\xf3\x14\x2b\x9f\x5a\xa9\xcd\x0f\x52\x2e\x15\x20\x55\x51\x7b\x0a\x55\x2e\x7d\x00\x03\x4b\xb1\x8a\x6d\x6a\x9b\xa6\x11\xe2\xdd\x6b\xc7\x90\x90\x84\x34\xcd\x97\x13\xbb\x9e\x19\xaf\x66\x36\xee\x3a\x83\xbc\xa9\xa9\x41\x20\x15\xd2\x82\xf4\x7d\x00\xc3\x2f\xaa\xd6\xc9\x5e\xe6\x3f\xd1\x40\x2a\x05\x1e\xa3\xa5\x6d\x04\xe7\xe3\xae\x63\x25\x2c\xa6\xf8\x2c\xe9\xba\x45\x8a\xba\xef\xa3\x65\x96\x4c\x80\x28\x0a\x8b\x0b\x2e\xdc\xa8\x94\x8a\x03\xcd\x0d\x93\x22\x26\xb5\xfc\xc1\x04\x01\x8e\xa6\x92\x45\x4c\x1a\xa9\x0d\xb9\xd0\xfd\x28\x61\xb2\x73\x28\x3b\x43\x78\x7d\xf4\x95\x72\x56\x1f\x3f\x41\xc4\x44\xd3\x1a\x30\xc7\x06\x63\x62\xf0\x8f\x21\x20\x28\xb7\xdf\xe5\x09\x40\xe0\x37\xad\x5b\x5b\xda\x11\x3d\xa5\xef\x49\x12\x65\xea\x5a\x2d\x45\x9e\xa1\x82\x6f\x96\x09\xff\xd0\x6c\x35\x2a\xf7\x35\x55\xfd\x3e\xf4\x66\x75\xf7\x54\xeb\x83\x54\xc5\xad\x68\x33\xf4\x47\xe1\xe6\x50\xcc\xb0\xaf\x28\xba\xcd\x38\xb3\x93\xb8\x79\x62\xb2\xf3\xde\x0d\x63\xf8\xea\x42\x8e\x96\xce\xe8\xe4\xa1\xf3\x02\x0f\xa3\x3d\x4f\xdc\xdf\x2a\x74\x4b\xe2\xad\x83\xcf\x79\x2e\x5b\x61\x1e\xa5\xf1\xd4\x3f\x7f\xe9\xc9\xc1\x99\x0c\x28\x13\xe0\xdc\xfc\xaf\x04\xee\xf9\x5f\x38\x65\xf5\x2d\x17\x5d\x73\x24\xfb\xe2\x2d\x29\x35\xd4\x18\x7b\x71\x4c\x16\xdd\xe6\x43\xb8\xea\x09\x28\xfc\xd5\x32\x85\x05\x18\x66\x6a\x8b\xdd\x7c\x0c\x57\x90\x57\x54\x59\x8f\x51\xe9\x49\xb0\xeb\x99\x1b\xdf\xa5\x4c\x30\xde\x72\xd8\x40\x8d\x4e\x5a\xbf\xbf\xc3\x6c\xa5\x28\x99\x0d\xed\x85\x1d\x0a\x5f\x5b\x22\x1f\xee\x79\x8b\x86\x72\xf2\x5f\x1f\xf7\x68\xfa\x5c\x64\x54\xa3\x7d\x2e\x46\x48\xf0\x37\x00\x00\xff\xff\xdf\x16\x24\x30\x4b\x04\x00\x00")

func assetsTemplatesIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIndexHtml,
		"assets/templates/index.html",
	)
}

func assetsTemplatesIndexHtml() (*asset, error) {
	bytes, err := assetsTemplatesIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/index.html", size: 1099, mode: os.FileMode(420), modTime: time.Unix(1489069089, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesLayoutHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x51\x3d\x73\xb3\x30\x0c\xde\xf9\x15\x7e\xb5\xbf\xf5\xda\xc1\x78\xe9\xc7\xd4\x5e\x18\xb2\x74\x54\x40\x04\x5f\x8c\x9d\x43\xa2\x57\x8e\xcb\x7f\xaf\xc1\x6d\x43\x87\xc6\x8b\xbe\x9e\x47\x96\xf4\xcc\x73\x43\xad\x0b\xa4\xa0\x23\x6c\xe0\x72\x29\xcc\xbf\xc7\xdd\xc3\xfe\xad\x7a\x52\x9d\xf4\xde\x16\x26\x1b\x95\x9e\x59\x30\xd9\x5d\xc3\x9e\x04\x55\xdd\xe1\xc0\x24\x25\x8c\xd2\xfe\xbf\x87\x4d\xd9\xbb\x70\x52\x03\xf9\x12\x58\x26\x4f\xdc\x11\x09\x28\x99\xce\x54\x82\xd0\x87\xe8\x9a\x19\x54\x37\x50\x5b\x82\x66\xdd\xa3\x0b\x77\x4b\x6a\xd3\x42\x9c\x78\xb2\x55\xac\x4f\x24\xea\x35\x06\x9a\x8c\xce\xb9\x3c\x90\xbe\x4e\x64\x0e\xb1\x99\x36\xd4\xc6\xbd\xab\xda\x23\x73\x09\x3d\x85\x71\xd3\x75\x2d\xe3\xf7\xc7\x2d\xf6\xce\x4f\x60\x9f\x57\x6b\x34\xfe\x05\x3c\xd3\xc0\x31\xa0\x07\x5b\x7d\x79\x37\xc0\x32\x60\x60\xac\xc5\xc5\x90\x16\xda\x6f\xa2\x1b\x24\x1f\x8f\x71\x14\xb0\x2f\xf1\xa8\x76\xa3\xfc\x42\x1a\x9d\x16\xb2\xc5\x3c\x53\x68\x92\x4a\xe9\x5d\xa5\x3b\x20\xd3\x22\x5d\xc6\xe5\x3b\xa4\xd3\xac\xba\xfd\x10\x3e\x03\x00\x00\xff\xff\x7a\x8a\x17\xb6\xea\x01\x00\x00")

func assetsTemplatesLayoutHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesLayoutHtml,
		"assets/templates/layout.html",
	)
}

func assetsTemplatesLayoutHtml() (*asset, error) {
	bytes, err := assetsTemplatesLayoutHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/layout.html", size: 490, mode: os.FileMode(420), modTime: time.Unix(1488553008, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesNewaccountHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xe2\xb2\x81\xd0\x0a\x40\x60\x93\x91\x9a\x98\x02\x61\x82\xb9\x25\x99\x25\x39\xa9\x76\x1e\xa9\x39\x39\xf9\x36\xfa\x10\x0e\x42\x32\x37\xb5\x24\x51\x21\x39\x23\xb1\xa8\x38\xb5\xc4\x56\xa9\xb4\x24\x4d\xd7\x42\x09\x6a\x8c\x3e\xc2\x1c\x9b\xa4\xfc\x94\x4a\x24\x5d\x19\x86\x76\x7e\xa9\xe5\x0a\xa1\xc5\xa9\x45\x40\x65\x86\x08\x99\xea\xea\x82\xa2\xcc\xbc\x92\x34\x05\x25\xd5\x62\x25\x05\xbd\xda\x5a\xa8\x51\x10\xfd\x40\xb5\x10\xd7\x02\x02\x00\x00\xff\xff\xd6\x4d\xae\x17\xbf\x00\x00\x00")

func assetsTemplatesNewaccountHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesNewaccountHtml,
		"assets/templates/newaccount.html",
	)
}

func assetsTemplatesNewaccountHtml() (*asset, error) {
	bytes, err := assetsTemplatesNewaccountHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/newaccount.html", size: 191, mode: os.FileMode(420), modTime: time.Unix(1488373318, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesNewuserHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xe2\xb2\x81\xd0\x0a\x40\x60\x93\x91\x9a\x98\x02\x61\x82\xb9\x25\x99\x25\x39\xa9\x76\x1e\xa9\x39\x39\xf9\x36\xfa\x10\x0e\x42\x32\x37\xb5\x24\x51\x21\x39\x23\xb1\xa8\x38\xb5\xc4\x56\xa9\xb4\x24\x4d\xd7\x42\x09\x6a\x8c\x3e\xc2\x1c\x9b\xa4\xfc\x94\x4a\x24\x5d\x19\x86\x76\x7e\xa9\xe5\x0a\xa1\xc5\xa9\x45\x40\x65\x86\x08\x99\xea\x6a\xbd\x50\xbf\xc4\xdc\xd4\xda\x5a\x9b\xa4\x22\x24\x0d\x89\x0a\x19\x45\xa9\x69\xb6\x4a\xfa\x40\x6d\x8e\xc9\xc9\xf9\xa5\x79\x25\x4a\x60\x23\xa0\x1c\x1b\xfd\x44\x98\xad\x10\xab\x80\xc6\x42\x3c\x06\x08\x00\x00\xff\xff\xa6\xb7\x94\xc4\xea\x00\x00\x00")

func assetsTemplatesNewuserHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesNewuserHtml,
		"assets/templates/newuser.html",
	)
}

func assetsTemplatesNewuserHtml() (*asset, error) {
	bytes, err := assetsTemplatesNewuserHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/newuser.html", size: 234, mode: os.FileMode(420), modTime: time.Unix(1488373372, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesTransactionsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x8f\xcd\xaa\xc2\x30\x10\x85\xf7\x79\x8a\x50\xba\xbc\xa4\x70\x97\x97\xdc\x80\x20\x5d\x77\xe1\x0b\x4c\xcd\x60\x8b\x4d\x52\x92\x69\x41\x42\xde\xdd\xa9\x22\x2a\x9a\x45\x60\xce\x37\x3f\xe7\xe4\x4c\xe8\xe6\x09\x08\x65\x35\x20\xd8\xaa\x14\xa1\x87\x5f\x73\x88\xe0\x13\x1c\x69\x0c\x3e\xe9\x86\x05\xa1\x09\xfa\x09\x8d\xc8\x99\xd1\x09\x65\x7d\xfe\xa9\x57\xf9\xf7\x2f\x55\x0b\x4e\x75\x18\xc7\x60\xd5\xeb\x98\xdc\x56\x51\x34\x42\xf2\xd3\x64\x4d\xce\xf5\xaa\xda\x18\x5c\x29\xba\xe1\xfa\x1d\xec\x31\xd1\x27\x70\xc1\xe3\x45\x32\xde\xb9\xb0\xf8\x2f\x0d\x8c\xba\x25\xce\x21\xe1\x83\xf1\xcf\x47\xd9\x27\x7a\x7b\xb3\x70\xf7\xbd\x29\xcf\xac\x3d\x24\xdc\xb2\x5e\x03\x00\x00\xff\xff\x71\x3a\xcc\xd7\x00\x01\x00\x00")

func assetsTemplatesTransactionsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesTransactionsHtml,
		"assets/templates/transactions.html",
	)
}

func assetsTemplatesTransactionsHtml() (*asset, error) {
	bytes, err := assetsTemplatesTransactionsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/transactions.html", size: 256, mode: os.FileMode(420), modTime: time.Unix(1489659020, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesUserhomeHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\x5d\x4f\xdd\x3c\x0c\xbe\x7f\x7f\x85\x15\x21\x2e\xd0\xab\x56\x8c\x3b\xd6\x16\xa1\x31\x26\x26\x31\x21\xd0\xae\x51\x4e\xe3\xd2\x6c\x4d\x52\x92\xf4\xc0\x51\xd5\xff\x3e\x27\x6d\x4f\x0b\xe2\x48\xf4\x26\x75\x6c\x3f\xf6\x13\x7f\xf4\xbd\x47\xd5\x36\xdc\x23\xb0\x1a\xb9\x60\xc3\xf0\x5f\xdf\x1f\x79\xd3\xc2\x79\x0e\xc9\x28\x5d\x2b\x54\x51\x0c\x3f\x74\x95\xd5\x5f\x8a\xdf\x0e\x2d\xdc\xf1\x27\x84\x73\xe8\xfb\x49\x93\xa5\xa4\x21\xf5\x59\x71\x59\x96\xa6\xd3\xde\xd1\xcd\x59\x41\x18\xb2\x82\xe4\x16\x5d\x74\x3e\x83\xb2\xe1\xce\xe5\x4c\xa1\x73\x84\xc0\x0a\x02\x88\xca\xd9\x1a\xb5\x18\x23\x5b\x7c\x1e\x03\x73\x95\xfc\x40\x7f\xdb\x39\x7f\x8f\xcf\x1d\x3a\xef\xf6\xd9\x44\xf0\x06\x35\x04\x6b\x92\x81\xbe\x90\xe1\x1d\xa1\x48\xfd\x04\xb3\xc3\x98\x5c\xd0\xf6\xbd\xe5\x9a\x32\x5f\x39\x44\x10\x0a\x96\x5c\x5b\xa3\x92\x40\x4e\x73\x45\x16\x53\x8c\x88\x59\x19\xab\xe6\xd4\xed\x08\xca\x80\x97\x5e\x1a\x1d\x2e\x5c\x6b\xb4\xd8\xdf\x2b\xf4\xb5\x11\x39\x6b\x0d\x49\x63\xd8\x08\x22\x75\xdb\x79\xf0\xbb\x16\x73\xe6\xf1\x95\x2c\xb7\xbc\xe9\x48\xa0\x37\xb8\xb9\x1a\x06\x06\xb5\x14\x82\xd8\x58\xaa\x86\xd1\xcd\x0e\x42\x22\x39\x93\xe2\x53\x28\xbc\x2c\xb1\xf5\x87\x40\xc6\x64\x57\x40\x14\x74\x7a\x1e\xb4\xc3\x00\x35\x77\x30\x31\x40\x01\x1c\x5a\xbe\x53\xa8\x3d\x98\x8a\x2c\x95\xd1\xb8\x83\xe4\x52\x85\xc2\x92\x71\x45\x2f\x05\x3b\xd3\x81\xd4\xde\x04\xa4\x2b\x72\x1b\x86\x64\xc9\xd2\x61\x83\xa5\x9f\x62\x07\xf3\x50\xe9\xa5\xdf\x2a\xd5\x3e\xaa\x1d\x9f\x3a\x85\x41\xe8\xba\xd0\x03\xa3\xdb\x01\xb6\xae\xdb\x28\xb9\xf0\xbd\x1c\xf9\xae\x8c\x39\xd4\x16\xab\x9c\xa5\x6f\x2b\x72\x21\x45\x3e\x3d\xf1\xf1\x54\x33\x8b\x7f\x28\x0e\x2b\xee\xe3\x99\xa5\x7c\x44\xc9\xd2\x50\xe8\xb9\x53\xb0\x71\x08\x73\x07\x7c\x1e\xbb\xe4\xba\xc4\x86\x15\xdf\xe2\xb9\x60\x7f\x1e\x41\x6a\x27\x43\xeb\xdc\xc4\x73\x8f\x30\x0f\xc7\xfa\x7f\x3e\xe9\xeb\xfb\xf4\xe4\xa1\x36\x2f\x30\x0f\xe0\x49\x1a\x14\x59\xd7\x84\xb9\x9a\xda\xfe\xef\xff\x70\xb4\xdd\xcf\xd5\x1d\x5a\x69\x44\x32\x3b\xbc\x1b\x88\xa3\xed\x81\x69\x68\x64\xb1\xb0\xd9\x4a\x7c\xb9\xe8\x62\xa1\x69\x6a\x17\x97\x48\x67\xbc\xfa\x15\xc5\xd0\x01\x7b\x21\x90\x3a\xd6\x1b\xd7\x7e\x9d\xbb\x8b\x54\xdf\x03\x95\x2c\x25\xf8\x0f\x39\x66\x69\xa0\x12\x76\xc3\xeb\xe9\x69\xe4\xf0\x80\xfe\xa7\xd9\x00\x73\x9e\x6b\xc1\x56\x6b\x61\xe9\xb4\xa8\xa2\x5d\xc0\xe2\x46\x7b\xa3\xaa\xac\x7a\xe4\x42\x3c\x4e\x6d\x78\xc0\x82\x06\x81\x4d\xdb\xf0\xad\x62\x85\x0c\x1f\xa8\xcb\xba\xa5\x75\xf1\xb1\xeb\x7e\x55\xbc\x57\x6e\xb8\xc3\xb0\x87\xff\x05\x00\x00\xff\xff\x33\xcd\x15\x2f\x9c\x05\x00\x00")

func assetsTemplatesUserhomeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesUserhomeHtml,
		"assets/templates/userhome.html",
	)
}

func assetsTemplatesUserhomeHtml() (*asset, error) {
	bytes, err := assetsTemplatesUserhomeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/userhome.html", size: 1436, mode: os.FileMode(420), modTime: time.Unix(1490178360, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesViewHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x90\x51\x4f\xc3\x20\x14\x85\xdf\xf7\x2b\x6e\x9a\x3e\x2a\x4d\x7c\x34\x14\xa3\x9b\x4d\xf4\xc5\x07\xe3\x0f\x60\xe3\x76\x63\x16\x6a\x00\x17\x17\xd2\xff\xee\xa5\xd0\x66\x24\x6d\xc3\x39\x87\xef\xf4\x12\xa3\xc2\x5e\x5b\x84\xca\x07\x69\x95\xb6\xc7\x6a\x9a\x36\x31\xd6\x9d\x34\xf0\xd8\x02\xa3\x6f\x16\xce\x7e\xde\xbf\x8f\xfb\x92\x2d\xc1\x73\x48\xfa\xcf\x80\x7f\x90\x32\xe9\x61\x9d\x41\x03\xd9\x1e\xb4\x0f\x0b\x88\x75\x7a\x08\xe8\x3e\x4b\xd3\xcb\xf5\xcb\xa3\xcb\x69\x0a\xf3\xd3\x83\x58\x2c\xf8\x70\x0a\x9d\xe7\x0d\x69\x1b\x1e\xe4\x7e\x40\x41\x34\x27\xed\x11\xa1\xfe\xbe\x83\xfa\x92\xa0\x33\x3d\x1d\x0d\x4e\x6c\x80\x16\x0f\x4a\x50\xe9\x85\x75\x6e\x24\x26\x6f\x68\xbf\x6a\x3b\x4c\xe1\x1b\xcd\x8c\x16\xaf\x84\x62\xcf\x66\xfc\xb5\x8b\x77\x03\xd2\x3d\xa4\x8b\x60\x5b\x69\x5f\x95\x0e\xeb\xdf\x51\x3b\xcd\x4d\xc5\x50\x16\x97\x70\x72\xd8\xb7\xd5\x41\xda\x03\x0e\xcb\x5d\x3e\x69\xd5\xce\xd5\x6f\xbb\x69\xaa\xc4\x76\x36\x79\x23\xc5\x7a\x30\x46\xb4\x0a\xee\x0b\x2a\xf7\xd3\xdb\xa5\x69\xc9\x49\xb3\x35\xeb\xf8\x59\xf8\x0f\x00\x00\xff\xff\x2a\xd6\x03\x2f\xb3\x01\x00\x00")

func assetsTemplatesViewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesViewHtml,
		"assets/templates/view.html",
	)
}

func assetsTemplatesViewHtml() (*asset, error) {
	bytes, err := assetsTemplatesViewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/view.html", size: 435, mode: os.FileMode(420), modTime: time.Unix(1489771146, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesViewacHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x52\x5d\x6b\x83\x30\x14\x7d\xef\xaf\x08\xe2\xc3\x06\xc3\x42\x1f\x47\x26\x14\x46\x61\x63\x6c\x63\x74\x3f\x20\xea\x6d\x95\x99\xc4\x25\x71\x30\x82\xff\x7d\xf7\x46\x5b\xad\x96\xf9\xe2\xf5\x9c\x73\xcf\xfd\xf0\x7a\xef\x40\x36\xb5\x70\xc0\xa2\x12\x44\x11\x75\xdd\x8a\xe1\xe3\x7d\xec\x74\xc3\xee\x1f\x58\x32\x22\x22\x0f\xc0\xb3\xce\x58\x24\x72\x92\xf2\x72\x93\x06\xa2\xeb\xf8\x1a\xe3\x15\x77\x22\xab\x21\x0d\x19\xdc\x99\x3e\xe8\x3f\xca\xf4\xa3\x55\xaa\x52\x47\xbe\xc6\xf8\x82\x78\x7a\x5d\x62\x6f\x9f\xfb\x2b\xa0\x2b\xc1\x2c\xe1\xf7\xd6\x34\xda\xc2\x48\x60\x34\xd4\xc6\xee\x5e\x2a\xeb\x42\xe3\x3b\x21\x93\x6d\x9e\xb7\xb2\xa5\x81\xf7\x46\x28\x2b\x72\x57\x69\x65\x59\x18\x61\x48\x40\xfc\x08\x2c\xfe\xba\x63\xf1\x0f\xe5\x05\x83\x81\x9d\xcd\x54\xa4\x3c\xc3\x05\x48\xad\xe0\x17\xd5\xc9\xf6\xe0\xc0\xd0\x2e\xb2\x14\x5b\x28\x46\xa9\xf7\xd5\x81\xdd\xc0\xf7\x86\x2a\x91\x72\x67\xb4\xbc\x1d\x4c\xcf\x5e\x94\x42\xc1\xd4\x51\xea\x56\x39\xb2\x3c\x73\x88\x3e\x82\x3d\x61\x93\x12\x50\x5b\x98\x59\xfe\xe7\x74\x69\x49\x0d\x5d\xb1\x54\xc5\xc2\x11\xc5\xc3\xc2\xe7\xfa\x9e\x2f\xe8\x9a\xa8\x49\x7c\x9f\x14\x8b\xbf\xd2\x1b\x23\xd2\xdf\xcb\x6a\x7a\x88\x99\xb0\x40\xd7\xf5\x17\x00\x00\xff\xff\x60\xe4\x1a\x0d\x9d\x02\x00\x00")

func assetsTemplatesViewacHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesViewacHtml,
		"assets/templates/viewac.html",
	)
}

func assetsTemplatesViewacHtml() (*asset, error) {
	bytes, err := assetsTemplatesViewacHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/viewac.html", size: 669, mode: os.FileMode(420), modTime: time.Unix(1489660347, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/s/main.css": assetsSMainCss,
	"assets/templates/.forms.html.swp": assetsTemplatesFormsHtmlSwp,
	"assets/templates/.transactions.html.swp": assetsTemplatesTransactionsHtmlSwp,
	"assets/templates/.userhome.html.swp": assetsTemplatesUserhomeHtmlSwp,
	"assets/templates/familypage.html": assetsTemplatesFamilypageHtml,
	"assets/templates/forms.html": assetsTemplatesFormsHtml,
	"assets/templates/index.html": assetsTemplatesIndexHtml,
	"assets/templates/layout.html": assetsTemplatesLayoutHtml,
	"assets/templates/newaccount.html": assetsTemplatesNewaccountHtml,
	"assets/templates/newuser.html": assetsTemplatesNewuserHtml,
	"assets/templates/transactions.html": assetsTemplatesTransactionsHtml,
	"assets/templates/userhome.html": assetsTemplatesUserhomeHtml,
	"assets/templates/view.html": assetsTemplatesViewHtml,
	"assets/templates/viewac.html": assetsTemplatesViewacHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"s": &bintree{nil, map[string]*bintree{
			"main.css": &bintree{assetsSMainCss, map[string]*bintree{}},
		}},
		"templates": &bintree{nil, map[string]*bintree{
			".forms.html.swp": &bintree{assetsTemplatesFormsHtmlSwp, map[string]*bintree{}},
			".transactions.html.swp": &bintree{assetsTemplatesTransactionsHtmlSwp, map[string]*bintree{}},
			".userhome.html.swp": &bintree{assetsTemplatesUserhomeHtmlSwp, map[string]*bintree{}},
			"familypage.html": &bintree{assetsTemplatesFamilypageHtml, map[string]*bintree{}},
			"forms.html": &bintree{assetsTemplatesFormsHtml, map[string]*bintree{}},
			"index.html": &bintree{assetsTemplatesIndexHtml, map[string]*bintree{}},
			"layout.html": &bintree{assetsTemplatesLayoutHtml, map[string]*bintree{}},
			"newaccount.html": &bintree{assetsTemplatesNewaccountHtml, map[string]*bintree{}},
			"newuser.html": &bintree{assetsTemplatesNewuserHtml, map[string]*bintree{}},
			"transactions.html": &bintree{assetsTemplatesTransactionsHtml, map[string]*bintree{}},
			"userhome.html": &bintree{assetsTemplatesUserhomeHtml, map[string]*bintree{}},
			"view.html": &bintree{assetsTemplatesViewHtml, map[string]*bintree{}},
			"viewac.html": &bintree{assetsTemplatesViewacHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

