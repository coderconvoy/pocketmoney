// Code generated by go-bindata.
// sources:
// assets/s/main.css
// assets/templates/.viewac.html.swp
// assets/templates/familypage.html
// assets/templates/index.html
// assets/templates/layout.html
// assets/templates/newaccount.html
// assets/templates/newuser.html
// assets/templates/transactions.html
// assets/templates/userhome.html
// assets/templates/viewac.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsSMainCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8b\xb1\xae\xc2\x30\x0c\x45\xf7\x7c\x85\xa5\xb7\x3e\xb1\xa0\x0c\x4d\xbf\x26\xc6\x75\x14\xd1\xd8\x91\x49\x24\x10\xe2\xdf\x29\xa1\x2c\x70\xc7\x7b\xce\x41\xa5\xdb\xdd\xc1\x36\x8c\xa7\x73\x32\xed\x42\xe1\x6f\x9a\x98\x11\x67\xf7\x70\xee\x50\x16\xe9\xf0\xab\x78\xcf\x1c\xe3\x50\x58\xad\x7c\x0c\x35\x5a\x2c\xf8\x7a\x85\x8b\xae\x99\x00\xd7\xad\x99\x07\x2b\xd1\x52\x96\x17\x1b\x55\x96\xda\x1b\xfc\x03\xf6\xd6\x54\xf6\xfe\xcb\x69\xb4\xff\x35\x12\x65\x49\xe1\xf8\x06\xcf\x00\x00\x00\xff\xff\x54\x41\xbd\xbe\xb6\x00\x00\x00")

func assetsSMainCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsSMainCss,
		"assets/s/main.css",
	)
}

func assetsSMainCss() (*asset, error) {
	bytes, err := assetsSMainCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/s/main.css", size: 182, mode: os.FileMode(420), modTime: time.Unix(1489057121, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesViewacHtmlSwp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9a\xbf\x6f\xd3\x40\x14\xc7\x5f\x3b\xc0\x42\x0a\x82\x0d\x06\x8e\x90\xa1\x91\x2a\xbb\x04\x24\xa4\x2a\x58\x8a\x82\x28\x15\x50\x50\x69\x10\x13\xd2\xd9\x3e\x6c\x2b\xf1\xd9\xf5\x5d\x52\x22\xcb\x30\x96\xff\x02\x06\x06\x18\xd9\x58\xd9\x90\xf8\x0f\xf8\x1b\xf8\x17\x90\x78\x76\x9d\xc4\x69\x8b\xb2\x81\x2a\xde\x47\xfa\xca\xe7\xf7\xee\xfd\x3a\x7b\x89\x62\x7b\xfd\xd9\xd6\x23\x76\xdb\xb8\x05\xc8\x05\x80\x07\xf7\xbf\x3e\x7f\x77\x76\x6d\xf9\xc3\x65\x80\x90\x6b\xed\x8b\x7d\x58\xc4\xa6\x48\xf4\xb8\xb5\x70\x1b\xbc\x2e\x13\x9a\xca\x49\x82\x58\x2b\xd3\x8b\x06\x5c\x7a\xa6\x4a\x1c\xd3\x0b\xb4\x3f\xb4\x0d\x27\x0a\x4d\x27\x72\x45\xe2\x44\x72\x14\x8d\xcd\x38\x72\xfa\x42\x87\x91\x14\x63\x93\x2b\x25\x30\x48\x8b\x30\x1e\x70\x2d\x94\x39\x0a\xc4\x3e\x77\x0c\x5f\x87\x83\xc5\xc5\x09\xe2\xbf\xa7\x06\x37\x5b\x37\xd6\xf3\xd5\xf5\xfa\x35\x76\xe9\x62\xef\x5f\x37\x44\x10\x04\x41\x10\x04\x41\x10\xc4\x5f\x44\xc7\x4b\xf0\x06\xaf\xcb\xe5\xfd\x95\xf2\xba\x74\xe4\x4a\x10\x04\x41\x10\x04\x41\x10\x04\x41\x10\xc4\xe9\x85\xbb\x00\xdf\xcf\x01\x3c\xad\x41\xf1\xff\xff\xe4\xf7\xff\xcf\xf3\x00\x3f\x50\x9f\x51\x9f\x50\xef\x51\x07\x28\x85\x7a\x81\xda\x44\x19\xa8\x06\xea\x0c\xea\xd7\x0a\xc0\x37\xd4\x08\x35\x44\x5d\x45\xad\xa0\xbe\x60\xde\x8f\xa8\xb7\xa8\x03\x54\x86\xda\x43\xf9\x28\xaf\x56\xd6\x25\x08\x82\x20\x08\x82\x20\x08\x82\x38\x9d\xa4\xe9\xe4\x13\x65\x56\xb7\xb9\x12\xf5\x2c\x03\x68\x9b\x9a\xdb\x03\x61\x01\x43\xd2\x54\x48\x17\xad\xf9\x1a\x1d\x89\x05\xc5\xb2\xb8\xd5\xae\x95\xa6\x8d\x91\xf1\x64\x98\xc4\x91\x12\x59\x86\x1b\x5c\x6b\xea\xaf\x86\xce\xf6\x17\x1f\x48\x33\x8c\xea\x84\xd1\x50\xea\x32\x28\xf7\x4d\x17\x45\xd2\x7b\x49\x14\xf6\x94\x48\xb2\x8c\x6d\xb0\xa9\xa5\xd3\x3d\xa1\xca\x20\xaf\x3d\x57\xa6\x92\xea\xcf\xf5\x8a\xa4\x77\x85\xd2\xf3\x65\x72\xcb\xac\x4c\xa5\x4e\xf0\x92\x71\xe9\xb2\x55\xb1\xc7\x1a\x3a\x8a\x8d\x4e\xd7\xc8\x23\x25\x0f\x05\xab\x34\xdc\x9c\xdb\xb1\x5d\xf1\x76\xba\x4d\x76\xb4\x51\x7b\xda\xe2\x6a\x20\x5d\xf1\xea\x30\x70\x67\x97\x35\xfa\xcd\xbc\x07\xdb\x9a\x8d\xdb\xce\x8f\xff\xb0\x97\x84\x4b\x0f\xf3\xf6\xd9\x5a\x63\xc4\x36\xee\x30\xe3\x61\xa0\xf4\xdc\x63\x9a\x55\xf1\xad\xf2\x01\xa1\xc3\x9f\x77\x3c\xd6\xbe\x48\x4e\x30\xf7\x76\x8f\x1b\xb7\xb6\x8f\xdb\x76\x86\x52\x06\xd2\x9b\x39\x8a\x16\xdb\xe5\xfb\xd3\xf6\x5b\x38\x5d\xf5\x9c\xca\x53\x9e\x1c\x4c\x3e\x20\xee\x29\x67\xca\x27\x2f\x66\xc1\x39\xaa\x2f\xa6\x2f\xb8\x9b\xbf\x98\xbf\x03\x00\x00\xff\xff\xcc\x32\x6d\x61\x00\x30\x00\x00")

func assetsTemplatesViewacHtmlSwpBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesViewacHtmlSwp,
		"assets/templates/.viewac.html.swp",
	)
}

func assetsTemplatesViewacHtmlSwp() (*asset, error) {
	bytes, err := assetsTemplatesViewacHtmlSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/.viewac.html.swp", size: 12288, mode: os.FileMode(384), modTime: time.Unix(1489061979, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesFamilypageHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x93\xc1\x6e\x9c\x30\x10\x86\xef\x79\x8a\xd1\x9c\x12\xa9\x81\x86\x28\x97\x08\x90\xaa\x48\x91\x7a\x48\xb5\x52\xd5\x07\x30\x78\x36\x58\xb5\x0d\xb5\x8d\x76\x57\x16\xef\x5e\x83\x61\x59\xb8\x64\x2f\x8b\xcd\xff\xff\x33\xf3\x19\x7b\xef\x48\x75\x92\x39\x02\x6c\x88\x71\x1c\x86\x3b\x08\xbf\xbc\x79\x2a\xdf\x99\x12\xf2\x02\x07\xf6\x49\xaf\xe0\x7d\x12\xd6\x49\xdc\xfb\xc5\x14\x0d\x43\x9e\x06\x51\x54\xf7\x32\x3e\x78\x6f\x98\xfe\x24\x98\xb4\x1f\xa4\x2a\x32\x76\x4e\x9c\x74\x52\x94\xd7\x45\xd4\x27\x7f\x2c\x19\x3d\xe5\xc1\xe3\x63\xd8\xa8\x7e\x93\xa4\xda\x41\x72\x60\x86\xb4\x03\x8c\xff\x08\xf8\xd6\x08\x39\x36\x98\x57\x66\x4d\xc9\xd3\x25\xd3\x7b\xd2\x7c\x69\x3f\x5d\x3a\x1a\xc5\x57\x83\xf7\xe2\x08\xf7\xc2\x76\x31\x3a\x79\x57\xa4\xa6\x5e\x1f\x16\xdf\xb1\x35\x0a\x58\xed\x44\xab\x0b\x64\x9c\xab\x69\x06\x04\x45\xae\x69\x79\x81\x5d\x6b\x1d\x96\x70\xb7\x0e\x10\x12\xc3\xa4\x9b\x29\x9b\x67\xa8\x25\xb3\xb6\x40\x45\xd6\x06\x7c\x58\x86\x41\x83\x08\x26\x68\xcf\xe5\x8d\x7d\xed\x39\x5a\xb3\xf2\x07\xe7\x30\xa3\x8f\x04\x83\x25\x5b\x2d\x23\x7b\x78\x85\x5c\xe8\xae\x77\xe0\x2e\x1d\x15\xe8\xe8\x1c\x00\x8d\x14\x0b\xec\x67\x9e\xb8\x5a\x7e\x5a\x88\x10\x77\xb6\xba\xa1\xfa\x6f\xd5\x9e\x17\x6b\xc4\x82\xe5\x06\xf0\x21\x0c\x72\x6a\x0d\xdf\xd7\xec\xe6\x7d\x84\x8e\x39\x17\x6a\x16\x98\xf8\x97\x6f\xd9\xf7\x01\xc1\xd0\xbf\x5e\x18\xe2\x4b\xee\x89\x3f\xed\x52\xef\x3f\x84\x16\xaa\x57\xf0\x02\x92\x46\xbb\x7d\xd8\xbc\x7f\x6b\xf5\x51\x84\xa3\xf8\xba\xfa\xb5\x44\xb6\x2b\xb1\xd1\xdb\xbe\x52\xc2\xcd\x4c\xf2\x74\x3c\xe6\xed\x57\x73\x7b\x11\x2a\x66\x69\xbc\x08\xff\x03\x00\x00\xff\xff\x3b\xe2\xc7\x9e\x1d\x03\x00\x00")

func assetsTemplatesFamilypageHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesFamilypageHtml,
		"assets/templates/familypage.html",
	)
}

func assetsTemplatesFamilypageHtml() (*asset, error) {
	bytes, err := assetsTemplatesFamilypageHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/familypage.html", size: 797, mode: os.FileMode(420), modTime: time.Unix(1488902512, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x93\xcf\x6e\xa3\x30\x10\xc6\xef\x3c\xc5\xc8\xa7\x5d\x69\x37\x7f\x90\x72\x59\x01\xd2\x2a\xda\x3d\x2d\xab\x5c\xfa\x00\x06\x86\x62\x15\xdb\xd4\x1e\x9a\x46\x88\x77\xaf\x09\xa1\x21\x09\x69\xda\x70\xc2\xe3\xef\xfb\x6c\xfd\x66\xdc\x34\x84\xb2\x2a\x39\x21\xb0\x02\x79\xc6\xda\xd6\x83\xc3\x17\x14\xcb\x68\xa3\xd3\x27\x24\x88\xb5\xc2\x5d\x30\x77\x05\xef\x7d\xbb\x69\x44\x0e\xb3\xb1\x3e\x89\x9a\x66\x16\xa3\x6d\xdb\x60\x9e\x44\x23\x21\xaa\xcc\xe9\xbc\xa3\x37\xc8\xb5\x91\xc0\x53\x12\x5a\x85\xac\xd4\x8f\x42\x31\x90\x48\x85\xce\x42\x56\x69\x4b\xec\x68\xef\xaf\xe2\x47\xff\x3a\x95\xbb\x83\x7f\xba\xf5\x97\x4b\x51\xee\x7e\x41\x20\x54\x55\x13\xd0\xae\xc2\x90\x11\xbe\x12\x03\xc5\xa5\xfb\xcf\xf7\x02\x06\x2f\xbc\xac\xdd\xd2\x5d\xb1\xb7\xb4\x2d\x8b\x82\xc4\x9c\xa6\xc5\x28\x13\x34\xf0\xdf\x39\xe1\x83\xcc\xda\xa2\xe9\xfe\xc6\xa9\x0f\x87\xda\x64\xee\x86\x5b\xbb\xd5\x26\x3b\x0f\xad\x0e\xf5\x21\xb8\xda\x66\x13\xee\x13\x8b\xad\x13\x29\xc6\x80\x82\x79\x47\x33\xba\x8a\x57\xe1\x76\x60\x70\x03\xf1\xda\x60\x37\x09\x3d\x1f\xf8\x9d\xa6\xba\x56\x74\x0d\xf9\x4d\x48\xfd\xa1\x7b\x4c\x13\xa0\xb9\x50\xd0\x21\xfb\x14\xe6\x4b\xff\x1f\xc9\x45\x79\xee\xc5\xae\x38\x98\xfb\xc5\x3d\xad\xa8\x38\x91\x3b\x38\x64\xb3\x66\xf5\xc3\x5f\xb4\x0c\x0c\x3e\xd7\xc2\x60\x06\x24\xa8\x74\xda\xd5\x4f\x7f\x01\x69\xc1\x8d\x63\x8c\xc6\x8e\xba\xb7\x9c\x38\xf1\x5b\x2c\x94\x90\xb5\x84\x15\x94\xd8\x45\xdb\xef\x17\x9a\xb5\x56\xb9\x70\x4d\xfb\xc2\xa0\xf8\x77\x4f\xca\xf8\xd5\x27\xdc\xa2\x7b\xf5\x83\xc4\x7b\x0b\x00\x00\xff\xff\x2d\x4d\xb6\x58\x12\x04\x00\x00")

func assetsTemplatesIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIndexHtml,
		"assets/templates/index.html",
	)
}

func assetsTemplatesIndexHtml() (*asset, error) {
	bytes, err := assetsTemplatesIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/index.html", size: 1042, mode: os.FileMode(420), modTime: time.Unix(1488869859, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesLayoutHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x51\x3d\x73\xb3\x30\x0c\xde\xf9\x15\x7e\xb5\xbf\xf5\xda\xc1\x78\xe9\xc7\xd4\x5e\x18\xb2\x74\x54\x40\x04\x5f\x8c\x9d\x43\xa2\x57\x8e\xcb\x7f\xaf\xc1\x6d\x43\x87\xc6\x8b\xbe\x9e\x47\x96\xf4\xcc\x73\x43\xad\x0b\xa4\xa0\x23\x6c\xe0\x72\x29\xcc\xbf\xc7\xdd\xc3\xfe\xad\x7a\x52\x9d\xf4\xde\x16\x26\x1b\x95\x9e\x59\x30\xd9\x5d\xc3\x9e\x04\x55\xdd\xe1\xc0\x24\x25\x8c\xd2\xfe\xbf\x87\x4d\xd9\xbb\x70\x52\x03\xf9\x12\x58\x26\x4f\xdc\x11\x09\x28\x99\xce\x54\x82\xd0\x87\xe8\x9a\x19\x54\x37\x50\x5b\x82\x66\xdd\xa3\x0b\x77\x4b\x6a\xd3\x42\x9c\x78\xb2\x55\xac\x4f\x24\xea\x35\x06\x9a\x8c\xce\xb9\x3c\x90\xbe\x4e\x64\x0e\xb1\x99\x36\xd4\xc6\xbd\xab\xda\x23\x73\x09\x3d\x85\x71\xd3\x75\x2d\xe3\xf7\xc7\x2d\xf6\xce\x4f\x60\x9f\x57\x6b\x34\xfe\x05\x3c\xd3\xc0\x31\xa0\x07\x5b\x7d\x79\x37\xc0\x32\x60\x60\xac\xc5\xc5\x90\x16\xda\x6f\xa2\x1b\x24\x1f\x8f\x71\x14\xb0\x2f\xf1\xa8\x76\xa3\xfc\x42\x1a\x9d\x16\xb2\xc5\x3c\x53\x68\x92\x4a\xe9\x5d\xa5\x3b\x20\xd3\x22\x5d\xc6\xe5\x3b\xa4\xd3\xac\xba\xfd\x10\x3e\x03\x00\x00\xff\xff\x7a\x8a\x17\xb6\xea\x01\x00\x00")

func assetsTemplatesLayoutHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesLayoutHtml,
		"assets/templates/layout.html",
	)
}

func assetsTemplatesLayoutHtml() (*asset, error) {
	bytes, err := assetsTemplatesLayoutHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/layout.html", size: 490, mode: os.FileMode(420), modTime: time.Unix(1488553008, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesNewaccountHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xe2\xb2\x81\xd0\x0a\x40\x60\x93\x91\x9a\x98\x02\x61\x82\xb9\x25\x99\x25\x39\xa9\x76\x1e\xa9\x39\x39\xf9\x36\xfa\x10\x0e\x42\x32\x37\xb5\x24\x51\x21\x39\x23\xb1\xa8\x38\xb5\xc4\x56\xa9\xb4\x24\x4d\xd7\x42\x09\x6a\x8c\x3e\xc2\x1c\x9b\xa4\xfc\x94\x4a\x24\x5d\x19\x86\x76\x7e\xa9\xe5\x0a\xa1\xc5\xa9\x45\x40\x65\x86\x08\x99\xea\xea\x82\xa2\xcc\xbc\x92\x34\x05\x25\xd5\x62\x25\x05\xbd\xda\x5a\xa8\x51\x10\xfd\x40\xb5\x10\xd7\x02\x02\x00\x00\xff\xff\xd6\x4d\xae\x17\xbf\x00\x00\x00")

func assetsTemplatesNewaccountHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesNewaccountHtml,
		"assets/templates/newaccount.html",
	)
}

func assetsTemplatesNewaccountHtml() (*asset, error) {
	bytes, err := assetsTemplatesNewaccountHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/newaccount.html", size: 191, mode: os.FileMode(420), modTime: time.Unix(1488373318, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesNewuserHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xe2\xb2\x81\xd0\x0a\x40\x60\x93\x91\x9a\x98\x02\x61\x82\xb9\x25\x99\x25\x39\xa9\x76\x1e\xa9\x39\x39\xf9\x36\xfa\x10\x0e\x42\x32\x37\xb5\x24\x51\x21\x39\x23\xb1\xa8\x38\xb5\xc4\x56\xa9\xb4\x24\x4d\xd7\x42\x09\x6a\x8c\x3e\xc2\x1c\x9b\xa4\xfc\x94\x4a\x24\x5d\x19\x86\x76\x7e\xa9\xe5\x0a\xa1\xc5\xa9\x45\x40\x65\x86\x08\x99\xea\x6a\xbd\x50\xbf\xc4\xdc\xd4\xda\x5a\x9b\xa4\x22\x24\x0d\x89\x0a\x19\x45\xa9\x69\xb6\x4a\xfa\x40\x6d\x8e\xc9\xc9\xf9\xa5\x79\x25\x4a\x60\x23\xa0\x1c\x1b\xfd\x44\x98\xad\x10\xab\x80\xc6\x42\x3c\x06\x08\x00\x00\xff\xff\xa6\xb7\x94\xc4\xea\x00\x00\x00")

func assetsTemplatesNewuserHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesNewuserHtml,
		"assets/templates/newuser.html",
	)
}

func assetsTemplatesNewuserHtml() (*asset, error) {
	bytes, err := assetsTemplatesNewuserHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/newuser.html", size: 234, mode: os.FileMode(420), modTime: time.Unix(1488373372, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesTransactionsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x90\xc1\x0a\xc2\x30\x10\x44\xef\xf9\x8a\x50\x7a\x94\x16\x3c\x96\x18\x28\x4a\xcf\x1e\xf4\x03\x52\xbb\x58\xb1\x49\x4a\xb2\x2d\x48\xc8\xbf\xbb\x51\xd4\x0a\xcd\x21\xb0\xbb\x8f\x61\x66\x42\x40\xd0\xe3\xa0\x10\x78\xd6\x83\xea\xb2\x18\x99\xe8\xb7\xf2\xe4\x94\xf1\xea\x82\x37\x6b\xbc\x28\x69\xc1\x04\xaa\x76\x00\xc9\x42\xa0\xd3\x15\x78\x7e\xdf\xe4\x33\xaf\x76\xbc\x68\x94\x2e\x96\x3c\x4f\x1a\xe8\x24\xe3\xf4\x04\x76\x32\x84\x7c\x2e\x1a\x67\xf5\xd9\x83\x8b\xb1\xfa\xce\xf5\x3e\x46\x51\x12\xf1\x8f\x1e\xc0\xe3\x12\x4d\xf3\x1a\xaa\xad\x81\x07\x27\xa0\xd6\x76\x32\xb8\xaa\x75\x9c\xdc\x68\x3d\x7c\x6e\xf4\x93\x31\x0a\x01\xa6\x7b\xd9\x7c\x87\x4a\x9b\x5f\x11\xad\xf2\x90\x8a\x78\x06\x00\x00\xff\xff\x56\x12\x6d\xf6\x1d\x01\x00\x00")

func assetsTemplatesTransactionsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesTransactionsHtml,
		"assets/templates/transactions.html",
	)
}

func assetsTemplatesTransactionsHtml() (*asset, error) {
	bytes, err := assetsTemplatesTransactionsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/transactions.html", size: 285, mode: os.FileMode(420), modTime: time.Unix(1489056589, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesUserhomeHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\xc1\x4e\xe3\x48\x10\xbd\xfb\x2b\x4a\x2d\xc4\x01\xb1\x31\x84\x3d\x65\x6d\xaf\x10\x12\x37\xd8\x48\x3b\xf3\x01\x1d\x77\x65\x6c\xe1\x76\x37\xed\x36\x99\xc8\xf2\xd7\xcc\x9f\xcc\x97\x4d\x75\xb7\x9d\x38\x24\x61\x38\x0c\x17\x70\x55\xbd\xaa\xf7\xaa\x9e\x4d\xd7\x59\x94\xba\xe2\x16\x81\x15\xc8\x05\xeb\xfb\x28\x29\xe6\xd9\xd7\x06\x0d\x2c\xf9\x37\x84\x05\x74\xdd\xec\x51\xa2\xec\xfb\x24\xa6\x0c\xa5\xef\xb2\xfb\x3c\x57\x6d\x6d\x1b\x8a\xdc\x65\x51\xd7\x95\x6b\x98\x3d\x61\xe3\xc1\x77\x90\x57\xbc\x69\x52\x26\xb1\x69\xa8\x03\xcb\xa8\x81\x4f\x8e\xd5\x58\x0b\xaa\xec\xba\xf8\xea\xff\x42\x6d\x60\x6c\x76\x15\x53\x34\x4a\xda\xca\xd5\x5c\xb8\x91\xb0\x48\x61\x98\x4d\x21\xc3\x6b\xe2\x73\xf1\x72\x0d\x17\x6f\x21\xc3\xe5\x6c\x04\x53\x05\xd0\x8f\xa7\x82\xaf\x54\x31\x73\x12\x6a\x2e\x09\x31\x74\x70\xf9\xa4\x2a\xb3\x84\x43\x61\x70\x9d\xb2\xf8\xad\xc4\xcd\xbf\xad\x2b\x4a\x69\xe2\x1e\xd2\xf7\x97\x3c\x0f\xa1\x67\xff\xe8\x34\xec\x1e\x92\x98\x67\x97\xf5\xaa\xd1\xff\x74\x9d\x54\x35\x6e\xdd\xb4\x87\xd6\x18\xac\xad\xcb\xd2\x88\x81\xcb\x28\x34\xfc\x4e\x62\x27\xcd\xeb\xbe\x17\x62\x94\xed\x55\x27\x6b\x65\x24\xf0\xdc\x96\xaa\x4e\x19\x17\x82\x87\x24\x03\x89\xb6\x50\x22\x65\x5a\x35\x96\x0d\xcb\xdf\x83\xc3\x46\x93\xb2\xd6\xad\x05\xbb\xd5\x98\x32\x8b\xdf\x09\xe6\x35\xb1\x76\xd0\xc3\xc0\xd0\x6d\x55\x5d\x6d\xe1\x8d\x57\x2d\x65\x76\x37\x65\x50\x94\x42\x60\xfd\x41\x97\x81\x4b\x68\xa4\xb9\xb5\xd4\x34\x65\xb3\xee\xef\xeb\xf9\x4d\xef\x5a\xbf\xb6\xa5\x41\xf1\xae\x43\xd3\xae\x64\x49\x3d\x5c\xa7\x94\x11\x67\xc7\x3e\x76\x3a\x69\x07\x7e\x09\x4b\xbe\x85\x27\xb7\xbf\x13\x2b\xd0\x7c\x7b\xa4\xdd\xdf\x8f\xf4\x3e\xf1\x17\x04\x4e\xee\xdc\x4a\xfc\xa3\x2b\x00\x88\x1e\x8d\x92\x8b\x28\x69\xb0\xc2\xdc\x0e\x2d\xd6\x14\x63\xe3\x49\x47\x13\xc2\x47\x2e\xfc\x8c\x13\xbd\x1a\xa5\x9d\xdc\x3d\xa3\xd3\x86\x83\xbf\xc0\x3f\x4d\x3c\x16\x80\xd9\x64\x5a\xf0\xd8\xf4\xef\x24\x0e\x32\xb2\xe8\x8b\x7a\xaf\xc9\xaa\x23\x45\xd7\xe7\xf5\x9c\xe2\xb9\x7f\x57\x16\xc7\xbc\x4f\x27\x0f\x69\x1f\xd1\x4c\x56\x26\x8b\xee\xa5\x1b\xbc\x00\xf8\xf9\xe3\xe0\xa6\x75\x2b\x57\x68\x18\x34\x16\x75\xca\x6e\x66\x37\xb7\x3b\x7b\x7a\x04\xa3\xeb\x2d\x5b\x43\x56\x41\x02\x9f\xb5\x83\x0e\x25\x2c\x0c\xf3\xda\xce\x9b\xd6\x19\xf4\x59\x6d\x26\xc6\x3d\x34\x69\x5e\x68\xfa\xd0\x9d\xf1\xe9\x3c\x7b\x28\xfc\x66\x97\x54\xb3\x51\x46\x84\xaf\xa7\x4b\xfe\x57\x89\x5d\x94\xbe\xaf\x07\x0c\xf4\x10\x1f\x09\xab\x4a\xe8\x8d\x98\xf0\x7d\xc6\x0d\xe8\x4f\x82\x09\x79\x3b\x81\x3e\xa8\x7a\x5d\x12\xff\xdf\xa3\xe6\x9f\x5b\x50\x50\x38\x7d\xb1\xa7\xff\x4f\x56\x9c\x16\x4d\x07\xfe\x15\x00\x00\xff\xff\x63\xa4\x9f\xd3\x64\x06\x00\x00")

func assetsTemplatesUserhomeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesUserhomeHtml,
		"assets/templates/userhome.html",
	)
}

func assetsTemplatesUserhomeHtml() (*asset, error) {
	bytes, err := assetsTemplatesUserhomeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/userhome.html", size: 1636, mode: os.FileMode(420), modTime: time.Unix(1489057011, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesViewacHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x52\x61\x6b\x83\x30\x10\xfd\xde\x5f\x71\x14\x3f\xb4\x30\x2c\xec\x63\xc9\x04\xe9\x18\x0c\x46\x37\x4a\xfb\x03\x22\xb9\x55\x59\x8d\x2e\x89\x65\x23\xf8\xdf\x77\x31\x71\xea\x2c\xf3\xd3\xe5\xdd\xf3\xde\x7b\xc9\x59\x6b\xb0\xac\x2f\xdc\x20\x2c\x73\xe4\x62\xd9\xb6\x0b\xa0\xcf\xda\xc8\x54\x35\x6c\x1f\x20\x26\x84\xe5\xf7\x89\xb5\x71\xba\x8b\x4f\x1a\x95\xe4\x25\xb6\x2d\x6c\xc1\x43\xfb\xee\xc8\x36\xc4\x59\x30\xc3\xb3\x0b\x26\xdd\x08\x66\x94\x2f\xfc\x21\x4f\x0e\x8d\x94\x85\x3c\xb3\x0d\xd5\x93\xc6\xf3\x7e\x8e\xbd\x9e\x8e\x37\x40\x93\xa3\x9a\xc3\x6f\x8d\xaa\x2b\x8d\x43\x83\xaa\xa0\x6d\xad\xe2\xf2\x8c\x10\x7d\xc0\x5d\x74\xed\xf2\xbc\x14\xda\x84\x94\x7f\x2c\x8a\x84\x65\x94\xb3\xac\x24\x7e\xc3\xaa\x90\x02\xbf\xc0\x5d\x43\x7c\x38\xd2\x80\xb5\x0b\x99\x25\x34\x5b\x0c\x3f\x59\x5b\xbc\x03\x97\x02\x56\xf8\xe9\xb9\xa3\x4b\x82\xe8\x1a\x3f\xa9\xaa\x74\xe7\xf5\x84\xb1\x1f\x75\xd3\xdd\x1a\xc8\xcf\xd4\x87\x13\x71\x45\xef\x86\xb8\x69\x59\x35\xd2\x38\x13\xbf\x3d\x42\x1f\x51\x1b\x37\x3f\x3c\x48\x40\xd2\x5d\xe0\x8d\x8c\xe2\x45\x63\xc8\xdd\xcb\xfc\x37\x7d\x2a\xd3\xc7\x18\x64\xbc\xf5\x1b\x32\x52\xcc\x54\x88\x1e\xde\xa8\xe7\xcf\x9e\xc9\xff\x46\x88\x5f\xa0\xc5\x78\x31\x33\xae\xd1\x2d\xe6\x4f\x00\x00\x00\xff\xff\x13\x4f\x61\x85\xad\x02\x00\x00")

func assetsTemplatesViewacHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesViewacHtml,
		"assets/templates/viewac.html",
	)
}

func assetsTemplatesViewacHtml() (*asset, error) {
	bytes, err := assetsTemplatesViewacHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/viewac.html", size: 685, mode: os.FileMode(420), modTime: time.Unix(1489061963, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/s/main.css": assetsSMainCss,
	"assets/templates/.viewac.html.swp": assetsTemplatesViewacHtmlSwp,
	"assets/templates/familypage.html": assetsTemplatesFamilypageHtml,
	"assets/templates/index.html": assetsTemplatesIndexHtml,
	"assets/templates/layout.html": assetsTemplatesLayoutHtml,
	"assets/templates/newaccount.html": assetsTemplatesNewaccountHtml,
	"assets/templates/newuser.html": assetsTemplatesNewuserHtml,
	"assets/templates/transactions.html": assetsTemplatesTransactionsHtml,
	"assets/templates/userhome.html": assetsTemplatesUserhomeHtml,
	"assets/templates/viewac.html": assetsTemplatesViewacHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"s": &bintree{nil, map[string]*bintree{
			"main.css": &bintree{assetsSMainCss, map[string]*bintree{}},
		}},
		"templates": &bintree{nil, map[string]*bintree{
			".viewac.html.swp": &bintree{assetsTemplatesViewacHtmlSwp, map[string]*bintree{}},
			"familypage.html": &bintree{assetsTemplatesFamilypageHtml, map[string]*bintree{}},
			"index.html": &bintree{assetsTemplatesIndexHtml, map[string]*bintree{}},
			"layout.html": &bintree{assetsTemplatesLayoutHtml, map[string]*bintree{}},
			"newaccount.html": &bintree{assetsTemplatesNewaccountHtml, map[string]*bintree{}},
			"newuser.html": &bintree{assetsTemplatesNewuserHtml, map[string]*bintree{}},
			"transactions.html": &bintree{assetsTemplatesTransactionsHtml, map[string]*bintree{}},
			"userhome.html": &bintree{assetsTemplatesUserhomeHtml, map[string]*bintree{}},
			"viewac.html": &bintree{assetsTemplatesViewacHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

