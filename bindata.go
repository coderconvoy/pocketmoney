// Code generated by go-bindata.
// sources:
// assets/js/.logpopulate.js.swp
// assets/js/logpopulate.js
// assets/s/main.css
// assets/templates/.index.html.swp
// assets/templates/familypage.html
// assets/templates/forms.html
// assets/templates/index.html
// assets/templates/layout.html
// assets/templates/newaccount.html
// assets/templates/newuser.html
// assets/templates/standing.html
// assets/templates/transactions.html
// assets/templates/userhome.html
// assets/templates/view.html
// assets/templates/viewac.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsJsLogpopulateJsSwp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\xda\x3f\xce\xd3\x30\x18\x06\x70\xb7\x3b\x50\x51\x0e\x60\xc2\xd2\x4a\x25\x2e\x05\x89\xa1\x62\x01\x01\xea\x80\xc4\x02\x62\x75\x1d\x27\x4d\x49\xec\x10\xdb\x2d\x51\x05\x8c\x9c\x84\x23\x70\x11\x06\xee\x82\xf8\xfb\x46\xa4\x50\x31\x90\x0d\xbe\x4f\x7a\x7e\xd2\x23\x3b\x69\xde\xa7\x55\x37\x4b\x59\xcf\x9f\xae\x1e\xf1\xdb\xf1\x2d\x46\x46\x8c\x5d\x79\xfc\xf1\xd9\x7e\xf8\x60\x78\x18\x33\x56\x4a\xef\x37\x7a\xcf\xfa\x3c\xd4\xb5\x6f\x16\xbd\x8f\xb1\xd7\x5d\xa1\x70\xaa\xce\x2b\xef\x44\x66\x0b\x69\x32\xe1\x6a\x25\xb2\xdc\x6f\xc2\x3a\x56\xb6\x14\xca\x26\xba\x56\xd6\xec\x6c\x23\x2a\xab\x9e\x6b\x5f\x5a\xa3\x1b\x21\x9d\xd3\x34\xb4\x75\xa2\xb0\x59\x65\xab\x50\x48\xaf\xe3\xad\xeb\xff\x62\x00\x20\x17\xd8\xcd\xc5\x8d\x79\xbb\xbb\x16\x5d\xe5\xe3\xcb\x4f\xfe\xf7\x0f\x02\x00\x00\x00\x00\x80\x7f\xc8\x57\x03\xf6\x86\xd6\x61\x77\x7d\xb1\x5b\x07\x7f\xac\x00\x00\x00\x00\x00\x00\x00\x70\x7e\xc9\x84\xb1\x77\x74\xe8\xff\xd4\x1e\xfc\x47\xbf\xcf\xff\xdf\x2f\x31\xf6\x8d\xf2\x81\xf2\x9e\xf2\x96\x52\x53\x5e\x50\xee\x51\x62\xca\x75\xca\x57\x1a\xf8\x42\xf9\x7c\xec\x00\x00\x00\x00\x00\x00\x00\x38\x4b\x5e\x51\x38\x49\xac\x0a\xa5\x36\x3e\xce\xb4\xbf\x5f\xe8\x76\x7b\xb7\x59\x25\x93\xa8\xc8\x4d\x25\x9d\x8b\xa6\x71\x4a\x8f\xb8\xc9\x74\xf9\x73\x20\xf8\x97\x3e\xde\xc9\x22\x68\x7e\x87\x07\xb3\xfc\x75\x93\x2e\xff\x56\x16\x5c\x1d\x1d\x3b\xd2\xd3\x8e\xb4\xeb\x48\xfb\x3b\x52\x59\xb6\x1d\x69\x30\xca\xe7\xd6\xf0\x93\x17\xe1\x27\xa9\x99\x05\x33\x3d\x30\x21\x8e\xb7\xda\x8f\x73\xc3\x2b\x99\x69\xbe\xcf\xfd\x86\xd3\xb8\x91\xa5\x9e\x05\xa7\xeb\x76\x43\x7f\xc1\x8f\x00\x00\x00\xff\xff\x23\x54\x45\x22\x00\x30\x00\x00")

func assetsJsLogpopulateJsSwpBytes() ([]byte, error) {
	return bindataRead(
		_assetsJsLogpopulateJsSwp,
		"assets/js/.logpopulate.js.swp",
	)
}

func assetsJsLogpopulateJsSwp() (*asset, error) {
	bytes, err := assetsJsLogpopulateJsSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/js/.logpopulate.js.swp", size: 12288, mode: os.FileMode(384), modTime: time.Unix(1490440976, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsJsLogpopulateJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\xcc\x4f\xca\x83\x40\x0c\x05\xf0\x7d\x4e\x11\x5c\x29\x88\x1e\x40\xbe\xcd\x07\x5d\xf4\x18\x83\x26\x76\x60\xcc\x0c\x4e\xd2\x3f\x94\xde\xbd\x63\xc1\xd2\x55\x9b\xd5\x23\xbc\xf7\x03\xe8\xfb\x14\x93\x05\xa7\x84\x21\xce\x5e\x30\xb9\x99\xf0\xe2\xf5\x84\xec\x16\x71\x0b\xb5\x96\x69\xdd\x02\xb0\xc9\xa8\x3e\xca\xd6\xdc\x57\x35\x4b\x6b\xd2\xdc\x01\xcb\xb1\x5e\x15\xff\x70\x8a\xa3\x2d\x24\xda\xcd\xa4\x87\x40\x5b\xfc\xbf\x1d\xa7\xba\x0a\x5e\x0a\x5a\x35\xc3\xbb\xdd\x9d\x5d\x30\x2a\x1b\x96\x01\x5e\x5f\xfb\x6d\x58\x5e\x77\xc3\x3e\x0d\xdb\x8d\x6f\xe3\xe4\x72\xae\x9a\x8e\x4b\x25\xd7\x45\x01\x78\xc0\x33\x00\x00\xff\xff\x30\x81\xe0\x1d\x07\x01\x00\x00")

func assetsJsLogpopulateJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsJsLogpopulateJs,
		"assets/js/logpopulate.js",
	)
}

func assetsJsLogpopulateJs() (*asset, error) {
	bytes, err := assetsJsLogpopulateJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/js/logpopulate.js", size: 263, mode: os.FileMode(420), modTime: time.Unix(1490440976, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsSMainCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x8f\x41\x0e\x82\x30\x10\x45\xf7\x3d\xc5\x24\x6e\x8d\x21\x31\x2c\x0a\xa7\x69\x9d\x0e\x69\x84\x0e\x0e\x6d\xa2\x31\xde\x5d\x0a\x65\x01\x2e\xec\xb2\xff\xff\x97\x37\x96\xf1\xf5\x56\x30\x3f\x6b\x6e\xf7\x4e\x38\x05\x6c\x4e\x5a\x13\x59\xdb\xaa\x8f\x52\x97\xc1\x85\x04\xbf\x95\xba\x26\x32\x66\xa9\x10\xcb\xb0\x35\x58\xd0\x49\x53\x8f\x4f\x98\xb8\xf7\x08\xb6\x9f\x37\xed\x92\x0d\x46\x3a\x1f\x72\xb6\x82\xc5\x3d\x92\x9b\xe2\x6e\x78\xfd\x37\x3c\x6a\x10\x69\xbd\x9a\x6e\x3c\xc8\x3a\x3b\x68\xb5\x0d\x0b\xa8\x2a\x06\xca\x87\x31\x45\x38\x83\x4d\x31\x72\x28\x27\x1c\x34\x23\x96\xff\xd1\x20\xfa\xd0\x65\xc5\x1c\x7c\x03\x00\x00\xff\xff\x8e\x9e\x69\x57\x39\x01\x00\x00")

func assetsSMainCssBytes() ([]byte, error) {
	return bindataRead(
		_assetsSMainCss,
		"assets/s/main.css",
	)
}

func assetsSMainCss() (*asset, error) {
	bytes, err := assetsSMainCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/s/main.css", size: 313, mode: os.FileMode(420), modTime: time.Unix(1490286250, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIndexHtmlSwp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9a\x4d\x8f\xdb\x44\x18\xc7\xa7\x95\x38\x50\x28\x94\xee\x91\xcb\xe0\x2e\xda\x56\x4a\xed\x24\xb0\x02\x55\x89\x25\x54\x01\x42\x22\x55\x85\x54\xc4\x91\xb1\x3d\x89\xa7\x6b\xcf\x98\x99\x71\xd2\x28\x0a\x70\x82\xaf\xc0\x77\x00\xc4\x81\x97\x3b\x47\x54\xce\x5c\xba\x17\xee\xfb\x01\xb8\xc1\xe3\x97\x64\x9d\x6c\xb2\xd9\x13\x08\xed\xf3\x53\xfe\xb2\xe7\xed\x3f\x4f\x9e\x67\x64\x29\x8a\x83\xf6\xc7\x1f\x0c\xe8\x5b\xee\x9b\x04\xb8\x41\xc8\xaf\x1f\xfd\xf1\xc9\x6f\xcf\xb5\xae\xce\xf6\x08\x49\x99\xb5\x31\x9f\x90\x5d\xbc\xcf\xb5\x9d\x76\x77\x4e\x23\x9f\xd7\x86\x9e\x09\xb5\xc8\xac\xf1\x46\x2a\x61\x72\xe4\x19\x1d\x7a\x23\x61\xe3\x3c\x70\x43\x95\x7a\xa1\x8a\xb8\x0e\x95\x1c\xab\xa9\x97\xa9\xf0\x88\xdb\x54\x49\x3e\xf5\x98\x31\x1c\x16\x59\x9e\x66\x09\xb3\xdc\x78\x42\x46\xfc\x89\x1b\xdb\x34\xd9\xbd\x37\x82\x5c\x6a\x72\x3b\xbc\xfb\xf6\x75\xf2\x46\xb7\xd3\x2e\x9a\xb7\x9c\xd7\xe8\xde\xcd\x47\xff\x75\x54\x08\x82\x20\x08\x82\x20\x08\x82\xfc\x8b\xd8\xec\x0a\xf9\x02\xae\x57\xeb\xf6\xeb\xf5\xf5\xca\xda\x15\x41\x10\x04\x41\x10\x04\x41\x10\x04\x41\x90\xff\x2f\x2c\x22\xe4\xef\xe7\x09\xf9\xe1\x1a\x29\xff\xff\x5f\xfc\xfe\x3f\x79\x99\x90\xdf\x41\x4f\x41\xdf\x83\xbe\x03\x7d\x03\xfa\x12\x94\x81\x14\xe8\x01\xe8\xe4\x25\x42\x8e\x41\xcf\x40\x3f\x83\x7e\x02\xfd\x08\xfa\x1a\x94\x80\x6e\x80\xbe\xbd\x4e\xc8\xa7\xa0\x5b\xa0\x3d\xd0\x4d\xd0\x2b\xa0\x3f\x5f\x24\xe4\x17\x90\x06\x75\x41\x7f\xbd\x40\xc8\x57\xa0\x00\xf4\x2a\xe8\x18\x62\x7a\x06\x7a\x7a\xad\x8e\x0f\x41\x10\x04\x41\x10\x04\xb9\x54\xcc\x66\x16\x3e\xf5\xeb\x9f\xd4\x09\x98\xe1\xce\x7c\x4e\x6b\xc8\xe2\xa6\xe7\x0d\x95\x4e\x7d\xb2\xec\x28\x3b\x85\xcc\x72\x4b\xed\x34\xe3\x7d\xc7\xe4\x41\x2a\xac\x43\x2d\x7f\x62\xfb\xce\x7d\xcd\xc1\xcf\xa1\x63\x96\xe4\x7c\xd9\xf4\x57\x96\xdf\x57\x72\x28\x74\x4a\x1f\x32\x63\x26\x4a\x47\xf4\xde\xaa\x63\x56\xf7\x3b\x54\xb2\xb4\x68\x4f\xa2\xae\xe3\xf7\x02\xbd\x6a\x73\x7b\x20\xa4\x48\xf3\x94\x1e\xd2\x84\x5b\xcb\xb5\xb9\x73\x66\xce\xee\x2d\x32\x56\x2c\x95\x7d\xc7\x9d\x1d\xb6\xba\xed\xb9\x43\x35\xff\x2c\x17\x9a\x47\xd4\x0a\x9b\xc0\xdc\xc3\xbb\xdd\x36\x0d\x63\xa6\x59\x58\x6c\xd2\x88\xaa\xb3\x21\xaa\x77\x53\x26\x92\xf5\xed\x78\xd1\xb9\x58\x58\x35\xce\xae\x1c\x30\x21\xe9\x23\xc3\xf5\xfa\xea\x22\xb3\x8b\xc5\x39\x8c\x17\x77\x1b\xd6\xbf\xc7\x52\x91\x4c\xe9\x03\x18\x3d\xcf\x61\x58\x4e\xdb\xe2\xd1\x8b\xbb\x7e\x55\xb3\x85\xdd\x3b\x61\xa8\x72\x69\x7b\x1e\x8c\x9c\x9e\x8a\xe2\x50\x50\xc8\x87\x50\x90\x39\xc9\x27\x95\xa9\x43\x53\x6e\x63\x15\x41\x72\x94\xb1\x50\x75\x72\xe6\x1c\x5d\xf0\x18\x7d\xa8\x46\x42\x2e\x4f\x51\xd5\xda\x55\x59\x01\xfb\x26\x70\x0b\x03\xce\xf6\x93\xb4\x29\xf1\x3c\x0d\x20\xeb\xab\x89\xab\xdd\x72\xa3\x9d\xf3\xca\xb0\x08\x71\x36\xdb\xb7\x89\x1a\xb9\x45\xfd\xe6\xf3\xad\xd5\x59\xb7\x87\xbc\x6d\xb2\x5f\xa4\x73\xcd\x1c\x3c\x36\x7a\x17\x55\x2b\x73\x74\x5e\x95\x92\x2a\xa5\x5b\x2b\x54\x6f\x42\xef\xf5\x69\x39\x35\x63\xda\xb6\xa9\x0b\xbe\x66\x3e\x6f\x4e\xe3\x32\x82\x8e\xe5\x26\x41\x6e\xad\x92\x54\xc9\x30\x11\xe1\x51\xb9\x4f\xa6\xb2\xbc\x78\xac\xdc\x3e\x00\xd3\x71\x15\xf6\x41\xab\x6a\x54\x09\x3a\xb8\xe3\xf8\xa7\x63\xad\xc6\x48\xcf\xab\x0c\xfd\xc6\x8e\x9a\xc9\x11\xa7\xfb\x47\xad\xfd\x71\x11\xde\x05\x62\x02\x73\x77\xc0\x4d\x69\xd7\x74\x12\x43\x5a\xf5\x37\x4e\x66\xdc\xf1\x1f\x96\x6f\xc6\xd3\x41\xf1\x6a\x3c\xe4\xb0\xe3\x37\xbd\x1f\x1b\xda\xfc\x52\xee\x63\x03\x0f\x4a\xd2\x7c\x78\xc6\x9c\x45\x45\xdf\x3f\x01\x00\x00\xff\xff\x9a\x76\x15\x3d\x00\x30\x00\x00")

func assetsTemplatesIndexHtmlSwpBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIndexHtmlSwp,
		"assets/templates/.index.html.swp",
	)
}

func assetsTemplatesIndexHtmlSwp() (*asset, error) {
	bytes, err := assetsTemplatesIndexHtmlSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/.index.html.swp", size: 12288, mode: os.FileMode(420), modTime: time.Unix(1490440901, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesFamilypageHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x53\x4d\x6b\xdc\x30\x10\xbd\xef\xaf\x18\x86\x1e\x36\xd0\x78\x9b\x0d\xb9\x04\xdb\x10\x42\x03\x39\xa4\x2c\x94\xfe\x00\xd9\x9a\x8d\x45\x2d\xc9\x95\x64\x92\xc5\xf8\xbf\x57\xb2\xbc\xfe\x82\xd2\xbd\xac\x2d\xbf\x99\xf7\xde\xbc\x51\xd7\x39\x92\x4d\xcd\x1c\x01\x56\xc4\x38\xf6\xfd\x0e\xfc\x2f\xad\xee\xf2\x17\x26\x45\x7d\x81\x13\x7b\xa7\x47\xe8\xba\xc4\xbf\x27\xf1\xec\x07\x93\xd4\xf7\xe9\xc1\x83\x22\xba\xad\xe3\x43\xd7\x19\xa6\xde\x09\x06\xec\x1b\xc9\x82\x8c\x1d\x3b\x0e\xb8\x5a\xe4\xd3\x4b\xc4\x27\xbf\x2c\x19\x35\xf4\x83\xdb\x5b\x7f\x50\xfc\xa4\x9a\x4a\x07\xc9\x89\x19\x52\x0e\x30\xfe\x23\xe0\x73\x25\xea\x20\x30\x2d\xcc\xba\xcb\x44\xbf\x6e\x1d\xa5\xec\xbf\x0c\x62\x4e\x64\x84\xe6\x03\xdb\x53\x59\xea\x56\x39\x0b\x13\xf7\xcd\x42\xe3\x52\xab\x97\x17\xad\xfa\x6e\x52\x2b\xba\x40\xf2\x5d\xf1\xe0\x7c\x6b\x24\x32\x52\xf8\xb8\x96\x76\x58\x6a\x9b\xeb\x96\xd8\x19\x13\x9c\x4d\xee\xba\x4e\x9c\x61\x3f\x88\x7f\xb5\xe3\x30\x92\x17\x49\xf2\xaa\x36\x3d\x6b\x23\x81\x95\x4e\x68\x95\x21\xe3\x5c\x0e\x03\x47\x90\xe4\x2a\xcd\x33\x6c\xb4\x75\x98\xc3\x6e\x16\xe8\x3b\xfa\x58\x56\x91\x54\xf7\x50\xd6\xcc\xda\x0c\x25\x59\xeb\xb3\xc6\x60\xdb\x83\x60\x48\xf8\x3e\xdf\xfd\xcb\x5f\x5a\x1d\xf3\x27\xce\x61\xdc\x93\x18\xb7\x2f\x39\xce\x25\x61\x7a\xf0\x08\xa9\x50\x4d\xeb\xc0\x5d\x1a\xca\xd0\xd1\xa7\x4f\x33\x8c\x3d\xc3\x76\x0c\x00\xe7\x92\x57\x0b\xd1\xec\xa6\xac\xac\xa8\xfc\x5d\xe8\xcf\x6b\x69\x13\xd7\x22\x5f\x6d\xc3\xc9\x1b\xf9\xd0\x86\x6f\x39\x9b\xf1\x1c\xa1\x61\xce\x79\xce\x0c\x93\xee\xe1\xeb\xf1\x5b\x8f\x60\xe8\x4f\x2b\x0c\xf1\x6b\xdf\x0f\x7e\xb7\xe9\xba\x7f\x13\x4a\xc8\x56\xc2\x03\xd4\x14\xca\xed\xcd\xea\xfb\xb3\x56\x67\xe1\xa3\xf8\x3f\xfb\x44\x71\xdc\x50\xac\xf0\xb6\x2d\xa4\x70\xe3\x4c\xd2\x43\x88\x79\xbd\x35\xcb\x5b\x5b\x30\x4b\xe1\xd6\xfe\x0d\x00\x00\xff\xff\xc7\x53\xf5\xaa\xca\x03\x00\x00")

func assetsTemplatesFamilypageHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesFamilypageHtml,
		"assets/templates/familypage.html",
	)
}

func assetsTemplatesFamilypageHtml() (*asset, error) {
	bytes, err := assetsTemplatesFamilypageHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/familypage.html", size: 970, mode: os.FileMode(420), modTime: time.Unix(1490271959, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesFormsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x56\xcd\x6e\xe3\x36\x10\xbe\xfb\x29\x06\x44\x0e\x2d\x10\x28\xce\xb6\x40\x01\xc3\x16\x10\x78\xd7\xa7\x26\x6b\x6c\xb7\xe8\xd1\x60\xcc\x71\x24\x44\xfc\x29\x49\xd9\x15\x04\x3f\x4d\xdf\xa4\x4f\xd6\xa1\x7e\x6c\xc9\x76\x6c\xb7\x08\x7a\xe8\xfa\x60\x89\xe4\xcc\xc7\x6f\xbe\x19\x0e\x55\x96\x02\x57\xa9\x42\x60\x2b\x2b\x17\x5c\x88\x05\x5f\x2e\x75\xae\x3c\xdb\x6e\x07\x40\xbf\xf1\x4a\x5b\x09\x7c\xe9\x53\xad\x26\x8c\x0c\xda\x75\x90\xe8\x13\x2d\x26\xcc\x68\xe7\x59\x5c\x1b\x27\x3f\xc4\x0f\x42\xc0\x43\x6d\x33\xbe\xa3\x71\xbd\x90\x2a\x93\x7b\xf0\x85\xc1\x09\xf3\xf8\x07\xb9\x2b\x2e\xe9\x3d\x77\x68\xc3\x1b\x03\x8b\x5c\x68\x95\x15\xb0\xe6\x59\x4e\x2b\x65\x19\xcd\x24\xca\xed\x96\x41\x92\x0a\x81\xea\x02\x52\xc3\xab\x06\x33\xdc\x7b\x02\x9e\xb0\xa8\xfc\xf1\xf6\xc3\x70\x1b\xe0\x7f\xcf\x53\x8b\xe2\x04\x8a\xcb\x9f\x65\x4a\x38\x01\x6d\xc2\x88\x3f\x6b\x39\x84\xf7\xc6\xe1\x2e\xe8\x10\x0f\xca\x12\x95\x20\x69\x06\x1d\xe1\xa4\x59\xc8\xa2\xd9\xde\xb5\xba\x85\x5f\x59\x5a\xae\x5e\x10\x6e\x5e\xe1\x16\x6e\xd6\x30\x9a\xc0\x77\xd1\x8c\xcb\xe8\xe7\xd4\xf9\xdf\x6c\xea\x91\x84\x42\xe7\xa0\x8a\xf4\xfb\x8e\xe7\x58\x9b\x20\xf8\x5e\x8b\x9b\x75\xf4\x6b\x23\xd5\x76\x3b\xaa\xc6\x4f\xd5\x3b\x8b\xcf\x2c\x8e\x02\x07\xa9\x15\x16\xb4\x7d\xf4\x29\x30\x1f\xdf\xd5\xd0\x71\x87\x65\x1d\xd2\xfe\xd9\x8d\x8c\x67\xd9\xf9\xd0\x6e\xeb\xc0\xaa\xb8\xe6\x68\x53\x2d\xa2\x26\xfd\xee\xfd\x03\xfa\x17\xec\x43\x85\xed\xa8\x77\x68\x43\x87\xf7\x23\xca\x67\xb2\x6a\x4b\xfe\x2c\xd7\x23\x7e\x7d\x4e\x87\x7c\x7a\x95\x42\x47\xcc\xf0\xe2\xf4\xd1\x0a\x0b\xa7\xce\x54\x7b\xae\x1e\xf9\x2b\x02\x87\x39\x2f\x24\xbe\xfb\xd1\x02\xa8\xb0\x66\x56\xcb\x11\x8c\x1d\x66\xb8\xf4\x0d\xcc\x8a\xe6\x42\xcc\x1e\xa5\xc9\xb8\x3f\x2e\x78\x88\x82\x06\xb5\x4f\x4d\xe9\xab\x3e\x04\xf1\xfa\x18\xa2\x5b\x59\x3d\x8c\xf1\xb3\xad\x71\x1e\x64\x58\xa5\x22\xfe\xeb\xcf\x5e\x94\x2a\x0f\xe9\x62\xe0\x3c\x9a\x09\x1b\x46\xc3\x7b\x52\x2e\x25\x0d\x87\xbb\x66\x50\x79\xb2\x3d\xd4\x3c\xb7\xa4\x29\x8e\xce\xe8\x65\x6a\x93\x8e\xd3\x85\x4e\x41\xa9\x80\x27\xbd\xd9\x75\x8b\x76\x7c\xb9\x63\x50\x1d\x38\xcf\x95\x48\xd5\xcb\x9b\x7d\x76\x67\x70\x45\x51\xfc\xd2\xd8\xc2\x67\x2b\xd0\xee\x6b\xe3\x1d\x73\xfa\x7f\xc9\x6b\xe5\x45\x7a\x59\x0f\x1f\x89\xf2\xa8\xef\x27\x68\xaa\xf5\x73\xc1\x88\xed\xcf\x4c\x58\xfb\x32\x9b\x86\x0e\xb0\xdb\xfe\x6b\x82\x0a\x3e\xad\xd1\x16\x07\x40\x6d\x28\x15\xfd\xfb\x16\x52\x60\x16\x4e\x79\x03\xf9\x53\x5b\x29\x3d\x49\x2b\x9b\x45\x40\xe9\xe6\xba\xdf\x92\x04\x2f\x1c\x8b\x3f\xd2\xff\x71\x43\x3c\x30\xa5\xee\xef\x13\x32\x7e\xac\x9e\x7d\xf3\xe3\xcc\x5c\x53\xf6\x53\x6a\x27\x41\xa5\x66\x83\x66\x78\x55\xd1\x2f\x13\xc3\x5d\xd5\x8c\xfb\xe5\xde\xcc\xbf\xf5\x49\x31\x4d\xaa\xa6\x3d\x27\x9b\x8d\xb6\x62\x5f\xdf\x9f\x33\xb1\x9b\x85\x83\x0c\x98\x66\xbe\xd5\x5e\x67\xc2\x6c\x44\x27\x77\x4f\xb8\x01\x73\xa5\x33\x79\xde\x77\x5c\xa7\x5a\xad\x52\xe2\x7f\xd9\xeb\x43\xc7\xeb\x9c\xa6\x55\x84\x7b\x4d\xeb\x61\x3c\xb8\xa0\x67\xf8\xa8\x41\xe7\x8f\x05\x95\xd4\x17\xda\xc5\x93\xaa\xfe\xa3\xab\xe7\x4b\x8d\x74\xea\xf6\xa9\x4c\x4c\x4c\xe7\x00\xf4\x46\xa1\x05\xbd\x02\x4f\x03\x87\x75\x43\x6a\x3a\x01\x6c\xd2\x2c\x83\x84\xaf\x11\xbc\x06\x9e\xd3\x56\x36\x75\x34\x48\x52\x47\x49\x68\x40\xcd\x7f\x77\xa3\x05\xa8\x93\xad\xab\xfe\x5c\xf8\x66\xef\xb4\x36\xd5\x97\xef\xb5\xc3\xd2\xfc\x3b\x00\x00\xff\xff\xc1\x14\xb4\xc1\x4a\x0c\x00\x00")

func assetsTemplatesFormsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesFormsHtml,
		"assets/templates/forms.html",
	)
}

func assetsTemplatesFormsHtml() (*asset, error) {
	bytes, err := assetsTemplatesFormsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/forms.html", size: 3146, mode: os.FileMode(420), modTime: time.Unix(1490286250, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x54\x4d\x6f\xe2\x30\x10\xbd\xf3\x2b\x46\x16\x52\x5b\x89\x05\x8a\xc4\xa5\x4a\x22\xad\xaa\xdd\x13\xac\x7a\xd9\x1f\xe0\x24\x03\xb8\xc4\x76\xd6\x76\x60\x91\xc5\x7f\x5f\x1b\x27\x60\xbe\xda\x2d\x17\x32\x99\x99\xf7\x1e\xef\x19\x5b\x6b\x90\xd7\x15\x35\x08\x64\x85\xb4\x24\xfb\x7d\x0f\xda\x8f\xb5\xef\x1a\x48\x25\x97\xb5\xac\x1b\x3f\x32\x7c\xd7\xbe\x7f\x1c\x48\x56\xcf\xd9\x9b\x2c\xd6\x68\x60\x2e\x05\xee\x92\x91\x7b\xd1\x8b\xf6\xd9\x02\x86\x73\xd4\x11\x66\x92\x67\xd6\x86\x77\xc9\x28\xcf\xa2\x59\x14\x65\x8c\x6d\xad\xa2\x62\x89\xd0\x5f\x0f\xfa\x1b\x78\x49\x61\x38\x93\xcb\x73\xa4\xc6\x18\x29\x40\x8a\xa2\x62\xc5\x3a\x8d\x85\x3e\x3e\x58\xdb\xdf\x0c\x7f\x52\xbe\xdf\x3f\x0c\x42\xf1\x5b\xa3\x72\xd5\x13\xc9\x4e\xbd\x41\xd4\x71\x72\x0e\x80\x1f\x6a\xea\x1b\xc7\xe2\xd5\xb8\x2f\x26\x6a\xaa\xcc\xf8\x28\x2c\xf2\x65\x21\x15\x07\x5a\x18\x26\xc5\x41\x17\x13\x04\x38\x9a\x95\x2c\x53\x52\x4b\x6d\xc8\x89\x24\xf8\x38\xc9\x66\x7e\xca\x19\x38\x39\x6f\x39\x99\xac\xda\xbd\x40\xe2\xd8\x1a\x03\xcc\x01\x54\x4c\x2c\x28\x27\x60\x76\x35\xa6\xc4\xe0\x5f\x43\x40\x50\xee\x9e\x17\x87\x61\x02\x1b\x5a\x35\xae\x6c\xe5\x86\x9f\x4a\xb2\x24\x57\xe7\xd8\x73\xe4\x39\x2a\xf8\xe5\x76\xe1\x92\xa1\xd1\xea\x16\x43\xe3\xac\xf2\x4f\x57\x1c\xc1\xc3\x1b\x24\x6f\x54\xeb\xad\x54\xe5\x15\x43\xed\x1a\x1d\x45\xdd\x0e\x75\x34\xf5\xb6\xbc\x01\xd5\xee\x87\x15\xdd\xe4\x9c\x39\x5d\x5e\x5d\x4a\x66\xc1\xe3\x56\x54\xa8\x4e\xcb\xc9\xc8\x07\x92\xdd\x4d\x48\xe0\xb6\xb3\xee\x93\x94\x5e\x15\xfa\xbf\x4a\x48\x05\xbe\x17\x85\x6c\x84\xb9\x97\xda\x85\xb3\xf7\xf2\x3a\xf8\x79\x23\x1d\xca\x04\x78\x5b\x3f\x42\x38\xe6\x71\xbd\xff\x83\x53\x56\x5d\xee\xa2\x7f\xd9\x2d\x87\xe2\x7f\x22\xbb\x4c\xa9\xa6\xc6\x38\xe2\x94\x0c\xed\x74\x30\x19\xef\x09\x28\xfc\xd3\x30\x85\x25\x18\x66\x2a\x37\x3b\xfd\x36\x19\x43\xb1\xa2\xca\x79\x8c\x4a\x47\xc1\x3e\xdf\x60\x7c\x9c\x33\xc1\x78\xc3\x61\x0a\x15\x7a\x68\xfd\x74\x35\xf3\x2a\xc5\x82\xb9\xd0\x3e\x57\x77\xa4\x9a\x7c\xed\x10\x85\x70\x8f\xa7\xa8\x2d\xa3\x0b\xad\x3b\x47\xf1\xa5\x99\x53\x8d\xee\x52\xec\x46\x7a\xff\x02\x00\x00\xff\xff\x71\xd7\xdd\xe2\x51\x05\x00\x00")

func assetsTemplatesIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIndexHtml,
		"assets/templates/index.html",
	)
}

func assetsTemplatesIndexHtml() (*asset, error) {
	bytes, err := assetsTemplatesIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/index.html", size: 1361, mode: os.FileMode(420), modTime: time.Unix(1490440897, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesLayoutHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x51\x3d\x73\xb3\x30\x0c\xde\xf9\x15\x7e\xb5\xbf\xf5\xda\xc1\x78\xe9\xc7\xd4\x5e\x18\xb2\x74\x54\x40\x04\x5f\x8c\x9d\x43\xa2\x57\x8e\xcb\x7f\xaf\xc1\x6d\x43\x87\xc6\x8b\xbe\x9e\x47\x96\xf4\xcc\x73\x43\xad\x0b\xa4\xa0\x23\x6c\xe0\x72\x29\xcc\xbf\xc7\xdd\xc3\xfe\xad\x7a\x52\x9d\xf4\xde\x16\x26\x1b\x95\x9e\x59\x30\xd9\x5d\xc3\x9e\x04\x55\xdd\xe1\xc0\x24\x25\x8c\xd2\xfe\xbf\x87\x4d\xd9\xbb\x70\x52\x03\xf9\x12\x58\x26\x4f\xdc\x11\x09\x28\x99\xce\x54\x82\xd0\x87\xe8\x9a\x19\x54\x37\x50\x5b\x82\x66\xdd\xa3\x0b\x77\x4b\x6a\xd3\x42\x9c\x78\xb2\x55\xac\x4f\x24\xea\x35\x06\x9a\x8c\xce\xb9\x3c\x90\xbe\x4e\x64\x0e\xb1\x99\x36\xd4\xc6\xbd\xab\xda\x23\x73\x09\x3d\x85\x71\xd3\x75\x2d\xe3\xf7\xc7\x2d\xf6\xce\x4f\x60\x9f\x57\x6b\x34\xfe\x05\x3c\xd3\xc0\x31\xa0\x07\x5b\x7d\x79\x37\xc0\x32\x60\x60\xac\xc5\xc5\x90\x16\xda\x6f\xa2\x1b\x24\x1f\x8f\x71\x14\xb0\x2f\xf1\xa8\x76\xa3\xfc\x42\x1a\x9d\x16\xb2\xc5\x3c\x53\x68\x92\x4a\xe9\x5d\xa5\x3b\x20\xd3\x22\x5d\xc6\xe5\x3b\xa4\xd3\xac\xba\xfd\x10\x3e\x03\x00\x00\xff\xff\x7a\x8a\x17\xb6\xea\x01\x00\x00")

func assetsTemplatesLayoutHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesLayoutHtml,
		"assets/templates/layout.html",
	)
}

func assetsTemplatesLayoutHtml() (*asset, error) {
	bytes, err := assetsTemplatesLayoutHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/layout.html", size: 490, mode: os.FileMode(420), modTime: time.Unix(1488553008, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesNewaccountHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xe2\xb2\x81\xd0\x0a\x40\x60\x93\x91\x9a\x98\x02\x61\x82\xb9\x25\x99\x25\x39\xa9\x76\x1e\xa9\x39\x39\xf9\x36\xfa\x10\x0e\x42\x32\x37\xb5\x24\x51\x21\x39\x23\xb1\xa8\x38\xb5\xc4\x56\xa9\xb4\x24\x4d\xd7\x42\x09\x6a\x8c\x3e\xc2\x1c\x9b\xa4\xfc\x94\x4a\x24\x5d\x19\x86\x76\x7e\xa9\xe5\x0a\xa1\xc5\xa9\x45\x40\x65\x86\x08\x99\xea\xea\x82\xa2\xcc\xbc\x92\x34\x05\x25\xd5\x62\x25\x05\xbd\xda\x5a\xa8\x51\x10\xfd\x40\xb5\x10\xd7\x02\x02\x00\x00\xff\xff\xd6\x4d\xae\x17\xbf\x00\x00\x00")

func assetsTemplatesNewaccountHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesNewaccountHtml,
		"assets/templates/newaccount.html",
	)
}

func assetsTemplatesNewaccountHtml() (*asset, error) {
	bytes, err := assetsTemplatesNewaccountHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/newaccount.html", size: 191, mode: os.FileMode(420), modTime: time.Unix(1488373318, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesNewuserHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xe2\xb2\x81\xd0\x0a\x40\x60\x93\x91\x9a\x98\x02\x61\x82\xb9\x25\x99\x25\x39\xa9\x76\x1e\xa9\x39\x39\xf9\x36\xfa\x10\x0e\x42\x32\x37\xb5\x24\x51\x21\x39\x23\xb1\xa8\x38\xb5\xc4\x56\xa9\xb4\x24\x4d\xd7\x42\x09\x6a\x8c\x3e\xc2\x1c\x9b\xa4\xfc\x94\x4a\x24\x5d\x19\x86\x76\x7e\xa9\xe5\x0a\xa1\xc5\xa9\x45\x40\x65\x86\x08\x99\xea\x6a\xbd\x50\xbf\xc4\xdc\xd4\xda\x5a\x9b\xa4\x22\x24\x0d\x89\x0a\x19\x45\xa9\x69\xb6\x4a\xfa\x40\x6d\x8e\xc9\xc9\xf9\xa5\x79\x25\x4a\x60\x23\xa0\x1c\x1b\xfd\x44\x98\xad\x10\xab\x80\xc6\x42\x3c\x06\x08\x00\x00\xff\xff\xa6\xb7\x94\xc4\xea\x00\x00\x00")

func assetsTemplatesNewuserHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesNewuserHtml,
		"assets/templates/newuser.html",
	)
}

func assetsTemplatesNewuserHtml() (*asset, error) {
	bytes, err := assetsTemplatesNewuserHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/newuser.html", size: 234, mode: os.FileMode(420), modTime: time.Unix(1488373372, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesStandingHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x53\x4d\x6b\x1b\x31\x10\xbd\xe7\x57\x0c\xa2\xe7\x35\xf4\x58\xd6\x86\xd0\x90\x92\x43\xa1\x04\x7a\x0e\xea\x6a\x36\x56\xd1\x57\xa4\x59\xd3\x65\xd1\x7f\xef\x68\xb5\xeb\x38\x25\x0d\x0e\xe4\x62\x5f\x2c\x8d\xe6\xbd\x37\x7a\xfb\x34\x4d\x0a\x7b\xed\x10\x84\xd1\x07\x7c\x48\x24\x9d\xd2\xee\x51\xe4\x7c\x75\x35\x4d\x9f\x6e\x2d\x5a\xf8\xb2\x85\xa6\x2c\xb8\xc6\x25\xf2\x61\xae\xd4\x5d\xc4\xa7\x7a\x2e\x6d\xf3\x0d\xe9\xfb\x90\xe8\x1e\x9f\x06\x4c\x94\x4e\x40\xba\x07\x83\x0e\x4a\x37\xef\x81\x7f\xed\xfe\xf3\xee\x07\xce\x5a\xb0\x02\xda\x0d\x17\xe7\xd3\x69\x8a\xd2\x3d\xe2\x29\xa0\x96\x99\x88\x05\x9b\xdb\xe8\x6d\xf3\x33\x61\x74\xd2\x72\xd7\xa2\x33\xf3\x2a\x7d\x80\xce\xc8\x94\xb6\x22\x56\x5e\xb1\x3b\x21\x68\x16\x31\x8c\x39\xc3\x5e\x26\x58\x9a\x50\x81\x84\x20\x47\x8b\x8e\xc0\xf7\xdc\x69\xbd\xc3\x11\x9a\x6b\xeb\x07\x47\xdc\xdc\xb3\x26\x8c\x7e\x00\xed\xc8\x17\xa6\x1b\x86\xe5\xdc\x1c\xc9\xdb\xde\x47\x0b\xb2\x23\xed\x5d\x11\x4f\xc1\x3b\xb5\xce\x00\x16\x69\xef\xd5\x56\x04\xff\x62\xa2\x19\xa8\x5d\x18\x08\x68\x0c\xb8\x15\x84\x7f\xb8\xfb\x20\xcd\xc0\x1b\x56\xb9\xbb\xc9\x59\xc0\x5e\x2b\xc5\x06\x46\x94\xca\x3b\x33\x42\xb9\xf7\x56\x68\x75\x36\x93\xec\x3a\x0c\xf4\x3f\xa2\x3a\xf4\xbf\x64\x09\x0d\x76\xb4\xb4\x94\xeb\x8b\xdd\x34\x11\xda\x60\x24\x71\x60\x7a\x1b\x1e\xec\xc8\xc4\xc5\xa0\x24\xa0\x24\x23\xe7\x76\x53\x61\x6f\x0c\x96\x86\x5f\x56\x3f\x8f\x76\x5d\x47\x7b\x06\xb4\x9b\xe2\xe4\xee\x32\x8c\x8d\xf8\x9b\x6f\xfb\x3e\x63\xdf\x30\xe3\xbe\xd2\xbd\x6e\x46\xbb\xe1\x74\x9f\xa6\x19\x4d\x42\x38\x37\xf9\x2f\x1e\xcd\x31\xfd\x45\x8e\xc3\xcf\xc1\x8e\xeb\x5b\x00\x56\x7c\xe5\x01\x5c\x64\xee\xb5\x4b\x3a\x7d\xdc\xe7\xb9\xab\x74\x17\x9a\xd5\x4e\xba\x0e\xcd\x87\x99\xf1\xb5\xd2\x9d\x9b\x55\xa7\x96\xa4\xae\xeb\xf5\xff\xb8\xf8\x1b\x00\x00\xff\xff\xde\xa0\x6f\x8d\x8d\x06\x00\x00")

func assetsTemplatesStandingHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesStandingHtml,
		"assets/templates/standing.html",
	)
}

func assetsTemplatesStandingHtml() (*asset, error) {
	bytes, err := assetsTemplatesStandingHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/standing.html", size: 1677, mode: os.FileMode(420), modTime: time.Unix(1490286250, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesTransactionsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x8f\xcd\xaa\xc2\x30\x10\x85\xf7\x79\x8a\x50\xba\xbc\xa4\x70\x97\x97\xdc\x80\x20\x5d\x77\xe1\x0b\x4c\xcd\x60\x8b\x4d\x52\x92\x69\x41\x42\xde\xdd\xa9\x22\x2a\x9a\x45\x60\xce\x37\x3f\xe7\xe4\x4c\xe8\xe6\x09\x08\x65\x35\x20\xd8\xaa\x14\xa1\x87\x5f\x73\x88\xe0\x13\x1c\x69\x0c\x3e\xe9\x86\x05\xa1\x09\xfa\x09\x8d\xc8\x99\xd1\x09\x65\x7d\xfe\xa9\x57\xf9\xf7\x2f\x55\x0b\x4e\x75\x18\xc7\x60\xd5\xeb\x98\xdc\x56\x51\x34\x42\xf2\xd3\x64\x4d\xce\xf5\xaa\xda\x18\x5c\x29\xba\xe1\xfa\x1d\xec\x31\xd1\x27\x70\xc1\xe3\x45\x32\xde\xb9\xb0\xf8\x2f\x0d\x8c\xba\x25\xce\x21\xe1\x83\xf1\xcf\x47\xd9\x27\x7a\x7b\xb3\x70\xf7\xbd\x29\xcf\xac\x3d\x24\xdc\xb2\x5e\x03\x00\x00\xff\xff\x71\x3a\xcc\xd7\x00\x01\x00\x00")

func assetsTemplatesTransactionsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesTransactionsHtml,
		"assets/templates/transactions.html",
	)
}

func assetsTemplatesTransactionsHtml() (*asset, error) {
	bytes, err := assetsTemplatesTransactionsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/transactions.html", size: 256, mode: os.FileMode(420), modTime: time.Unix(1489659020, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesUserhomeHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x52\xc1\x6e\xc2\x30\x0c\xbd\xf3\x15\x51\x84\x38\xa0\xa9\x15\xe3\xc6\xd2\x4e\x3b\x6c\x87\x49\x9b\x90\xd0\xce\xc8\xb4\x86\x56\x6b\xd2\xd2\xa4\x30\x14\xf5\xdf\xe7\xa4\x2d\x30\xc1\xb8\x80\xfd\x9e\x5f\xde\xb3\xb1\xd6\xa0\xac\x0a\x30\xc8\x78\x86\x90\xf2\xb6\x1d\x59\x3b\x36\x65\xc5\x16\x11\x0b\xba\xea\x4d\xa2\xf4\xa5\xfb\x41\x2d\x91\x3d\xc6\x5f\x1a\x6b\xb6\x84\x1d\xb2\x05\xb3\xb6\x47\x44\x48\x08\xc1\xf3\xf8\x25\x49\xca\x46\x19\x4d\x9d\x79\x4c\x1a\xf9\x96\x05\x1f\xa8\xfd\xf0\x9c\x25\x05\x68\x1d\x71\x89\x5a\x93\x02\x8f\x49\xc0\x83\x03\x1b\x55\x4a\xcc\xd1\xb5\xb9\x22\x3f\xe0\x5a\x1b\x50\x69\xae\x76\xdc\x3b\x23\x3c\x9c\xae\xb2\xf2\xc8\x86\xd7\xa6\xa1\x6b\x8b\xa6\x70\x22\x35\x28\x72\x37\xfe\x7e\x60\xe3\x43\xe7\x1e\x64\xb0\xc4\x3a\x2f\xd3\x60\x18\x20\x3a\xa3\x8f\xf7\x87\x7b\x22\x06\x2e\x97\x02\x49\x83\x7d\x58\x87\x8b\x22\x8f\x05\xb0\xac\xc6\x6d\xc4\xc3\x43\x8e\xc7\xe7\xc6\x91\x22\x5a\xce\x65\xa4\x6d\x27\x90\x74\xad\x4f\x5f\xba\x60\xe7\x42\x84\x10\x4f\xd4\x46\x57\x4f\xd6\xca\x52\xe1\xc9\xbd\xf6\xea\x82\x8a\x90\xe4\x7b\x1f\x5d\xf2\xe1\x5b\x84\x2e\x8a\x3b\xc1\xcf\x6c\xe6\x33\xac\xd0\xbc\x97\x1b\xc6\xfd\x26\xf8\xf9\x22\xd7\x9b\xba\x59\xd2\x05\xda\xd6\x72\x0d\x69\xba\x86\x2e\xfe\x3f\x8c\x0a\x4e\xbc\x3f\xfd\x5f\xe0\x4a\x99\xdd\x81\x93\xac\xa2\xb3\xde\x1f\xad\x71\xdf\xa0\x36\xb7\xe0\x06\x34\xba\x3f\xdd\x6f\x00\x00\x00\xff\xff\xed\x18\x2b\x53\x89\x02\x00\x00")

func assetsTemplatesUserhomeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesUserhomeHtml,
		"assets/templates/userhome.html",
	)
}

func assetsTemplatesUserhomeHtml() (*asset, error) {
	bytes, err := assetsTemplatesUserhomeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/userhome.html", size: 649, mode: os.FileMode(420), modTime: time.Unix(1490286250, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesViewHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x90\x51\x4f\xc3\x20\x14\x85\xdf\xf7\x2b\x6e\x9a\x3e\x2a\x4d\x7c\x34\x14\xa3\x9b\x4d\xf4\xc5\x07\xe3\x0f\x60\xe3\x76\x63\x16\x6a\x00\x17\x17\xd2\xff\xee\xa5\xd0\x66\x24\x6d\xc3\x39\x87\xef\xf4\x12\xa3\xc2\x5e\x5b\x84\xca\x07\x69\x95\xb6\xc7\x6a\x9a\x36\x31\xd6\x9d\x34\xf0\xd8\x02\xa3\x6f\x16\xce\x7e\xde\xbf\x8f\xfb\x92\x2d\xc1\x73\x48\xfa\xcf\x80\x7f\x90\x32\xe9\x61\x9d\x41\x03\xd9\x1e\xb4\x0f\x0b\x88\x75\x7a\x08\xe8\x3e\x4b\xd3\xcb\xf5\xcb\xa3\xcb\x69\x0a\xf3\xd3\x83\x58\x2c\xf8\x70\x0a\x9d\xe7\x0d\x69\x1b\x1e\xe4\x7e\x40\x41\x34\x27\xed\x11\xa1\xfe\xbe\x83\xfa\x92\xa0\x33\x3d\x1d\x0d\x4e\x6c\x80\x16\x0f\x4a\x50\xe9\x85\x75\x6e\x24\x26\x6f\x68\xbf\x6a\x3b\x4c\xe1\x1b\xcd\x8c\x16\xaf\x84\x62\xcf\x66\xfc\xb5\x8b\x77\x03\xd2\x3d\xa4\x8b\x60\x5b\x69\x5f\x95\x0e\xeb\xdf\x51\x3b\xcd\x4d\xc5\x50\x16\x97\x70\x72\xd8\xb7\xd5\x41\xda\x03\x0e\xcb\x5d\x3e\x69\xd5\xce\xd5\x6f\xbb\x69\xaa\xc4\x76\x36\x79\x23\xc5\x7a\x30\x46\xb4\x0a\xee\x0b\x2a\xf7\xd3\xdb\xa5\x69\xc9\x49\xb3\x35\xeb\xf8\x59\xf8\x0f\x00\x00\xff\xff\x2a\xd6\x03\x2f\xb3\x01\x00\x00")

func assetsTemplatesViewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesViewHtml,
		"assets/templates/view.html",
	)
}

func assetsTemplatesViewHtml() (*asset, error) {
	bytes, err := assetsTemplatesViewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/view.html", size: 435, mode: os.FileMode(420), modTime: time.Unix(1490278503, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesViewacHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x52\x5d\x6b\x83\x30\x14\x7d\xef\xaf\x08\xe2\xc3\x06\xc3\x42\x1f\x47\x26\x14\x46\x61\x63\x6c\x63\x74\x3f\x20\xea\x6d\x95\x99\xc4\x25\x71\x30\x82\xff\x7d\xf7\x46\x5b\xad\x96\xf9\xe2\xf5\x9c\x73\xcf\xfd\xf0\x7a\xef\x40\x36\xb5\x70\xc0\xa2\x12\x44\x11\x75\xdd\x8a\xe1\xe3\x7d\xec\x74\xc3\xee\x1f\x58\x32\x22\x22\x0f\xc0\xb3\xce\x58\x24\x72\x92\xf2\x72\x93\x06\xa2\xeb\xf8\x1a\xe3\x15\x77\x22\xab\x21\x0d\x19\xdc\x99\x3e\xe8\x3f\xca\xf4\xa3\x55\xaa\x52\x47\xbe\xc6\xf8\x82\x78\x7a\x5d\x62\x6f\x9f\xfb\x2b\xa0\x2b\xc1\x2c\xe1\xf7\xd6\x34\xda\xc2\x48\x60\x34\xd4\xc6\xee\x5e\x2a\xeb\x42\xe3\x3b\x21\x93\x6d\x9e\xb7\xb2\xa5\x81\xf7\x46\x28\x2b\x72\x57\x69\x65\x59\x18\x61\x48\x40\xfc\x08\x2c\xfe\xba\x63\xf1\x0f\xe5\x05\x83\x81\x9d\xcd\x54\xa4\x3c\xc3\x05\x48\xad\xe0\x17\xd5\xc9\xf6\xe0\xc0\xd0\x2e\xb2\x14\x5b\x28\x46\xa9\xf7\xd5\x81\xdd\xc0\xf7\x86\x2a\x91\x72\x67\xb4\xbc\x1d\x4c\xcf\x5e\x94\x42\xc1\xd4\x51\xea\x56\x39\xb2\x3c\x73\x88\x3e\x82\x3d\x61\x93\x12\x50\x5b\x98\x59\xfe\xe7\x74\x69\x49\x0d\x5d\xb1\x54\xc5\xc2\x11\xc5\xc3\xc2\xe7\xfa\x9e\x2f\xe8\x9a\xa8\x49\x7c\x9f\x14\x8b\xbf\xd2\x1b\x23\xd2\xdf\xcb\x6a\x7a\x88\x99\xb0\x40\xd7\xf5\x17\x00\x00\xff\xff\x60\xe4\x1a\x0d\x9d\x02\x00\x00")

func assetsTemplatesViewacHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesViewacHtml,
		"assets/templates/viewac.html",
	)
}

func assetsTemplatesViewacHtml() (*asset, error) {
	bytes, err := assetsTemplatesViewacHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/viewac.html", size: 669, mode: os.FileMode(420), modTime: time.Unix(1489660347, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/js/.logpopulate.js.swp": assetsJsLogpopulateJsSwp,
	"assets/js/logpopulate.js": assetsJsLogpopulateJs,
	"assets/s/main.css": assetsSMainCss,
	"assets/templates/.index.html.swp": assetsTemplatesIndexHtmlSwp,
	"assets/templates/familypage.html": assetsTemplatesFamilypageHtml,
	"assets/templates/forms.html": assetsTemplatesFormsHtml,
	"assets/templates/index.html": assetsTemplatesIndexHtml,
	"assets/templates/layout.html": assetsTemplatesLayoutHtml,
	"assets/templates/newaccount.html": assetsTemplatesNewaccountHtml,
	"assets/templates/newuser.html": assetsTemplatesNewuserHtml,
	"assets/templates/standing.html": assetsTemplatesStandingHtml,
	"assets/templates/transactions.html": assetsTemplatesTransactionsHtml,
	"assets/templates/userhome.html": assetsTemplatesUserhomeHtml,
	"assets/templates/view.html": assetsTemplatesViewHtml,
	"assets/templates/viewac.html": assetsTemplatesViewacHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"js": &bintree{nil, map[string]*bintree{
			".logpopulate.js.swp": &bintree{assetsJsLogpopulateJsSwp, map[string]*bintree{}},
			"logpopulate.js": &bintree{assetsJsLogpopulateJs, map[string]*bintree{}},
		}},
		"s": &bintree{nil, map[string]*bintree{
			"main.css": &bintree{assetsSMainCss, map[string]*bintree{}},
		}},
		"templates": &bintree{nil, map[string]*bintree{
			".index.html.swp": &bintree{assetsTemplatesIndexHtmlSwp, map[string]*bintree{}},
			"familypage.html": &bintree{assetsTemplatesFamilypageHtml, map[string]*bintree{}},
			"forms.html": &bintree{assetsTemplatesFormsHtml, map[string]*bintree{}},
			"index.html": &bintree{assetsTemplatesIndexHtml, map[string]*bintree{}},
			"layout.html": &bintree{assetsTemplatesLayoutHtml, map[string]*bintree{}},
			"newaccount.html": &bintree{assetsTemplatesNewaccountHtml, map[string]*bintree{}},
			"newuser.html": &bintree{assetsTemplatesNewuserHtml, map[string]*bintree{}},
			"standing.html": &bintree{assetsTemplatesStandingHtml, map[string]*bintree{}},
			"transactions.html": &bintree{assetsTemplatesTransactionsHtml, map[string]*bintree{}},
			"userhome.html": &bintree{assetsTemplatesUserhomeHtml, map[string]*bintree{}},
			"view.html": &bintree{assetsTemplatesViewHtml, map[string]*bintree{}},
			"viewac.html": &bintree{assetsTemplatesViewacHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

